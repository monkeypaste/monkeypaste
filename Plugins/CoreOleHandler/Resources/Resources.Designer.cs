//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CoreOleHandler {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CoreOleHandler.Resources.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore.
        /// </summary>
        public static string CommonIgnoreLabel {
            get {
                return ResourceManager.GetString("CommonIgnoreLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When checked {0} format will not be read from the clipboard or drag-and-drop data..
        /// </summary>
        public static string CommonIgnoreReaderHint {
            get {
                return ResourceManager.GetString("CommonIgnoreReaderHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When checked {0} format will not be written to the clipboard or drag-and-drop data..
        /// </summary>
        public static string CommonIgnoreWriterHint {
            get {
                return ResourceManager.GetString("CommonIgnoreWriterHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Read.
        /// </summary>
        public static string CommonReadLabel {
            get {
                return ResourceManager.GetString("CommonReadLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Write.
        /// </summary>
        public static string CommonWriteLabel {
            get {
                return ResourceManager.GetString("CommonWriteLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When rtf is not already present, html will be converted to rtf. This may be useful between web browsers and/or word processing applications. (requires Rtf format to be enabled and is only for supported platforms).
        /// </summary>
        public static string Html2RtfHint {
            get {
                return ResourceManager.GetString("Html2RtfHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert To Rtf.
        /// </summary>
        public static string Html2RtfLabel {
            get {
                return ResourceManager.GetString("Html2RtfLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These directories will not be read from clipboard or drag-and-drop data..
        /// </summary>
        public static string IgnoredDirsHint {
            get {
                return ResourceManager.GetString("IgnoredDirsHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignored Directories.
        /// </summary>
        public static string IgnoredDirsLabel {
            get {
                return ResourceManager.GetString("IgnoredDirsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignored File Extensions.
        /// </summary>
        public static string IgnoredFileExtLabel {
            get {
                return ResourceManager.GetString("IgnoredFileExtLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These file types will not be read from the clipboard or drag-and-drop data..
        /// </summary>
        public static string IgnoredFileExtReaderHint {
            get {
                return ResourceManager.GetString("IgnoredFileExtReaderHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to These file types will not be written to the clipboard or drag-and-drop data..
        /// </summary>
        public static string IgnoredFileExtWriterHint {
            get {
                return ResourceManager.GetString("IgnoredFileExtWriterHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When checked, images larger than max dimension will be scaled while retaining aspect ratio. This does not affect the image on the clipboard..
        /// </summary>
        public static string ImgDoScaleHint {
            get {
                return ResourceManager.GetString("ImgDoScaleHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scale Oversized.
        /// </summary>
        public static string ImgDoScaleLabel {
            get {
                return ResourceManager.GetString("ImgDoScaleLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When pasting or dropping a bitmap this will be the default file type.
        /// </summary>
        public static string ImgExportTypeHint {
            get {
                return ResourceManager.GetString("ImgExportTypeHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Export Type.
        /// </summary>
        public static string ImgExportTypeLabel {
            get {
                return ResourceManager.GetString("ImgExportTypeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Images can be very large sometimes and can create serious performance issues. Try to keep this value low..
        /// </summary>
        public static string ImgMaxHHint {
            get {
                return ResourceManager.GetString("ImgMaxHHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Height.
        /// </summary>
        public static string ImgMaxHLabel {
            get {
                return ResourceManager.GetString("ImgMaxHLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Images can be very large sometimes and can create serious performance issues. Try to keep this value low..
        /// </summary>
        public static string ImgMaxWHint {
            get {
                return ResourceManager.GetString("ImgMaxWHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Width.
        /// </summary>
        public static string ImgMaxWLabel {
            get {
                return ResourceManager.GetString("ImgMaxWLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For performance concerns, a maximum amount characters is needed.
        /// </summary>
        public static string MaxCharsHint {
            get {
                return ResourceManager.GetString("MaxCharsHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Characters.
        /// </summary>
        public static string MaxCharsLabel {
            get {
                return ResourceManager.GetString("MaxCharsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; format is flagged as &apos;ignored&apos;.
        /// </summary>
        public static string NtfFormatIgnoredText {
            get {
                return ResourceManager.GetString("NtfFormatIgnoredText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Format Ignored.
        /// </summary>
        public static string NtfFormatIgnoredTitle {
            get {
                return ResourceManager.GetString("NtfFormatIgnoredTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} limit is {1} and data was {2}.
        /// </summary>
        public static string NtfMaxCharText {
            get {
                return ResourceManager.GetString("NtfMaxCharText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Count Reached.
        /// </summary>
        public static string NtfMaxCharTitle {
            get {
                return ResourceManager.GetString("NtfMaxCharTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Core Clipboard Reader.
        /// </summary>
        public static string NtfReaderDetail {
            get {
                return ResourceManager.GetString("NtfReaderDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Core Clipboard Writer.
        /// </summary>
        public static string NtfWriterDetail {
            get {
                return ResourceManager.GetString("NtfWriterDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Handles default clipboard formats.
        /// </summary>
        public static string PluginDescription {
            get {
                return ResourceManager.GetString("PluginDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Core Clipboard Handler.
        /// </summary>
        public static string PluginName {
            get {
                return ResourceManager.GetString("PluginName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Core, Clipboard, Drag and Drop, Text, Rtf, Rich Text, Html, Csv, Image, Png, Jpg, Jpeg, Link.
        /// </summary>
        public static string PluginTags {
            get {
                return ResourceManager.GetString("PluginTags", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When html is not already present, rtf will be converted to html. This may be useful between web browsers and/or word processing applications. (requires Html format to be enabled and is only for supported platforms).
        /// </summary>
        public static string Rtf2HtmlHint {
            get {
                return ResourceManager.GetString("Rtf2HtmlHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert To Html.
        /// </summary>
        public static string Rtf2HtmlLabel {
            get {
                return ResourceManager.GetString("Rtf2HtmlLabel", resourceCulture);
            }
        }
    }
}
