<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <LangVersion>$(DefaultLangVersion)</LangVersion>
    <TargetFramework>$(CommonTargetFramework)</TargetFramework>
    <Nullable>disable</Nullable>
    <EnableDynamicLoading>true</EnableDynamicLoading>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\Common\MonkeyPaste.Common.Avalonia\MonkeyPaste.Common.Avalonia.csproj" />
    <ProjectReference Include="..\..\Common\MonkeyPaste.Common.Plugin\MonkeyPaste.Common.Plugin.csproj" />
    <ProjectReference Include="..\..\Common\MonkeyPaste.Common\MonkeyPaste.Common.csproj" />
    <!--<Reference  Include="C:\Program Files (x86)\Reference Assemblies\Microsoft\Framework\.NETFramework\v4.6.1\PresentationFramework.dll"/>-->
    <ProjectReference Include="..\..\Common\MonkeyPaste.Common.Wpf\MonkeyPaste.Common.Wpf.csproj" Condition="'$(BuildOs)' == 'WINDOWS'" />
  </ItemGroup>
  
  <ItemGroup>
    <PackageReference Include="Avalonia.HtmlRenderer" Version="$(AvHtmlRendererVersion)" />
  </ItemGroup>
  
  <ItemGroup>
    <Content Include="Resources\Resources.*.resx">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="Resources\manifest.*.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  
  <ItemGroup>
    <EmbeddedResource Include="icon.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </EmbeddedResource>
    <EmbeddedResource Include="manifest.json">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </EmbeddedResource>
    <EmbeddedResource Include="Resources\Images\*.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </EmbeddedResource>
  </ItemGroup>  
  
  <ItemGroup>
    <Compile Update="Resources\Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>
  
  <ItemGroup>
    <EmbeddedResource Update="Resources\Resources.resx">
      <Generator>PublicResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
      <CustomToolNamespace>CoreOleHandler</CustomToolNamespace>
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </EmbeddedResource>
  </ItemGroup>

  <Target Name="PostBuild" AfterTargets="PostBuildEvent" Condition="$(BuildOs) == 'ANDROID' And !$(DefineConstants.Contains('AUX'))">
    <ItemGroup>
      <BuildOutputFiles Include="$(TargetDir)\**\*.*" />
    </ItemGroup>
    <!-- update working plugin in storage dir-->
    <Copy SourceFiles="@(BuildOutputFiles)" DestinationFiles="@(BuildOutputFiles->'$(PluginTargetDir)\$(ProjectName)\%(RecursiveDir)%(Filename)%(Extension)')" OverwriteReadOnlyFiles="true" SkipUnchangedFiles="true" ContinueOnError="true" />

    <!-- remove tmp dir to ensure its new -->
    <RemoveDir ContinueOnError="True" Directories="$(TargetDatTempDir)" />

    <!-- create tmp dir and copy plugin so its the only sub folder-->
    <Copy SourceFiles="@(BuildOutputFiles)" DestinationFiles="@(BuildOutputFiles->'$(TargetDatTempDir)\$(ProjectName)\%(RecursiveDir)%(Filename)%(Extension)')" OverwriteReadOnlyFiles="true" SkipUnchangedFiles="true" ContinueOnError="true" />

    <!-- compress tmp dir to retain outer folder and ouput plugin to exec dat dir (for initial load)-->
    <ZipDirectory Overwrite="true" ContinueOnError="true" SourceDirectory="$(TargetDatTempDir)" DestinationFile="$(TargetDatDir)\$(CoreOleGuid).zip" />

    <!-- remove tmp dir -->
    <RemoveDir ContinueOnError="true" Directories="$(TargetDatTempDir)" />
  </Target>
  
  <Target Name="PostBuild" AfterTargets="PostBuildEvent" Condition="$(BuildOs) == 'WINDOWS' And !$(DefineConstants.Contains('AUX')) And False">
    <Exec Command="$(BuildScriptsDir)\bundle_plugin.bat CoreOleHandler $(TargetDir) $(TargetDatDir) $(CoreOleGuid)" />
  </Target>
</Project>
