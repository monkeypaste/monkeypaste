// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: Generated/Native/Types/cef_touch_handle_state_t.cs
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------

#pragma warning disable 0169, 1591, 1573

using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using CefNet.WinApi;
using CefNet.CApi;
using CefNet.Internal;

namespace CefNet
{
	/// <remarks>
	/// Role: Proxy
	/// </remarks>
	public unsafe partial struct CefTouchHandleState
	{
		private cef_touch_handle_state_t _instance;

		/// <summary>
		/// Touch handle id. Increments for each new touch handle.
		/// </summary>
		public int TouchHandleId
		{
			get
			{
				return _instance.touch_handle_id;
			}
			set
			{
				_instance.touch_handle_id = value;
			}
		}

		/// <summary>
		/// Combination of cef_touch_handle_state_flags_t values indicating what state
		/// is set.
		/// </summary>
		public uint Flags
		{
			get
			{
				return _instance.flags;
			}
			set
			{
				_instance.flags = value;
			}
		}

		/// <summary>
		/// Enabled state. Only set if |flags| contains CEF_THS_FLAG_ENABLED.
		/// </summary>
		public int Enabled
		{
			get
			{
				return _instance.enabled;
			}
			set
			{
				_instance.enabled = value;
			}
		}

		/// <summary>
		/// Orientation state. Only set if |flags| contains CEF_THS_FLAG_ORIENTATION.
		/// </summary>
		public CefHorizontalAlignment Orientation
		{
			get
			{
				return _instance.orientation;
			}
			set
			{
				_instance.orientation = value;
			}
		}

		public int MirrorVertical
		{
			get
			{
				return _instance.mirror_vertical;
			}
			set
			{
				_instance.mirror_vertical = value;
			}
		}

		public int MirrorHorizontal
		{
			get
			{
				return _instance.mirror_horizontal;
			}
			set
			{
				_instance.mirror_horizontal = value;
			}
		}

		/// <summary>
		/// Origin state. Only set if |flags| contains CEF_THS_FLAG_ORIGIN.
		/// </summary>
		public CefPoint Origin
		{
			get
			{
				return _instance.origin;
			}
			set
			{
				_instance.origin = value;
			}
		}

		/// <summary>
		/// Alpha state. Only set if |flags| contains CEF_THS_FLAG_ALPHA.
		/// </summary>
		public float Alpha
		{
			get
			{
				return _instance.alpha;
			}
			set
			{
				_instance.alpha = value;
			}
		}

		public static implicit operator CefTouchHandleState(cef_touch_handle_state_t instance)
		{
			return new CefTouchHandleState { _instance = instance };
		}

		public static implicit operator cef_touch_handle_state_t(CefTouchHandleState instance)
		{
			return instance._instance;
		}
	}
}
