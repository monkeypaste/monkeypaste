// --------------------------------------------------------------------------------------------
// Copyright (c) 2019 The CefNet Authors. All rights reserved.
// Licensed under the MIT license.
// See the licence file in the project root for full license information.
// --------------------------------------------------------------------------------------------
// Generated by CefGen
// Source: Generated/Native/Types/cef_permission_handler_t.cs
// --------------------------------------------------------------------------------------------﻿
// DO NOT MODIFY! THIS IS AUTOGENERATED FILE!
// --------------------------------------------------------------------------------------------

#pragma warning disable 0169, 1591, 1573

using System;
using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using CefNet.WinApi;
using CefNet.CApi;
using CefNet.Internal;

namespace CefNet.Internal
{
	sealed partial class CefPermissionHandlerGlue: CefPermissionHandler, ICefPermissionHandlerPrivate
	{
		private WebViewGlue _implementation;

		public CefPermissionHandlerGlue(WebViewGlue impl)
		{
			_implementation = impl;
		}

		bool ICefPermissionHandlerPrivate.AvoidOnRequestMediaAccessPermission()
		{
			return _implementation.AvoidOnRequestMediaAccessPermission();
		}

		protected internal unsafe override bool OnRequestMediaAccessPermission(CefBrowser browser, CefFrame frame, string requestingOrigin, uint requestedPermissions, CefMediaAccessCallback callback)
		{
			return _implementation.OnRequestMediaAccessPermission(browser, frame, requestingOrigin, requestedPermissions, callback);
		}

		bool ICefPermissionHandlerPrivate.AvoidOnShowPermissionPrompt()
		{
			return _implementation.AvoidOnShowPermissionPrompt();
		}

		protected internal unsafe override bool OnShowPermissionPrompt(CefBrowser browser, ulong promptId, string requestingOrigin, uint requestedPermissions, CefPermissionPromptCallback callback)
		{
			return _implementation.OnShowPermissionPrompt(browser, promptId, requestingOrigin, requestedPermissions, callback);
		}

		bool ICefPermissionHandlerPrivate.AvoidOnDismissPermissionPrompt()
		{
			return _implementation.AvoidOnDismissPermissionPrompt();
		}

		protected internal unsafe override void OnDismissPermissionPrompt(CefBrowser browser, ulong promptId, CefPermissionRequestResult result)
		{
			_implementation.OnDismissPermissionPrompt(browser, promptId, result);
		}

	}
}
