<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>$(StartupOutputType)</OutputType>
    <TargetFramework>$(MainTargetFramework)</TargetFramework>
    <Nullable>disable</Nullable>
    <LangVersion>$(DefaultLangVersion)</LangVersion>
    <!--<BuiltInComInteropSupport>true</BuiltInComInteropSupport>-->
    <!--<Platforms>AnyCpu;x64</Platforms>-->
    <!--<DisableFastUpToDateCheck>true</DisableFastUpToDateCheck>-->
    <!--<AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>-->
    <RuntimeIdentifier>$(TargetRuntimeIdentifiers)</RuntimeIdentifier>
    <ApplicationManifest>app.manifest</ApplicationManifest>
    <ApplicationIcon>monkey.ico</ApplicationIcon>
    <Product>$(ApplicationName)</Product>
    <Authors>$(ApplicationAuthor)</Authors>
    <AssemblyVersion>$(ApplicationVersion)</AssemblyVersion>
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    <SelfContained>true</SelfContained>
  </PropertyGroup>


  <PropertyGroup Condition="$(BuildOs) == 'MAC'">
    <UseAppHost>true</UseAppHost>
    <CFBundleIconFile>MyIcon.icns</CFBundleIconFile>
    <CFBundleName>MonkeyPaste</CFBundleName>
    <CFBundleDisplayName>MonkeyPaste</CFBundleDisplayName>
    <CFBundleIdentifier>com.Monkey.MonkeyPaste</CFBundleIdentifier>
    <CFBundleVersion>$(ApplicationVersion)</CFBundleVersion>
    <CFBundlePackageType>APPL</CFBundlePackageType>
    <CFBundleSignature>4242</CFBundleSignature>
    <CFBundleShortVersionString>$(ApplicationVersion)</CFBundleShortVersionString>
    <CFBundleExecutable>MonkeyPaste.Desktop</CFBundleExecutable>
    <NSPrincipalClass>NSApplication</NSPrincipalClass>
    <!--<NSHighResolutionCapable>true</NSHighResolutionCapable>-->
    <SupportedOSPlatformVersion>10.15</SupportedOSPlatformVersion>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <PlatformTarget>x64</PlatformTarget>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'">
    <PlatformTarget>x86</PlatformTarget>
  </PropertyGroup>

  <PropertyGroup Condition="$(BuildOs) == 'WINDOWS'">
    <NoDefaultLaunchSettingsFile>true</NoDefaultLaunchSettingsFile>
  </PropertyGroup>

  <ItemGroup Condition="$(BuildOs) != 'MAC'">
    <None Remove="Info.plist" />
    <None Remove="MyIcon.icns" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Avalonia" Version="$(AvaloniaVersion)" />
    <PackageReference Include="Avalonia.Desktop" Version="$(AvaloniaVersion)" />
    <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="$(StableAvaloniaVersion)" />
    <PackageReference Include="Avalonia.ReactiveUI" Version="$(AvaloniaVersion)" />
    <PackageReference Include="WebView.Avalonia.Desktop" Version="$(SugarWvVersion)" Condition="'$(UseSugarWv)' == 'True'" />
  </ItemGroup>
  
  <ItemGroup Condition="$(BuildOs) == 'MAC'">
    <PackageReference Include="Dotnet.Bundle" Version="0.9.13" />
  </ItemGroup>

  <ItemGroup Condition="$(BuildOs) == 'MAC'">
    <ProjectReference Include="..\MonkeyPaste.Desktop.Launcher\MonkeyPaste.Desktop.Launcher.csproj" />
  </ItemGroup>

  <ItemGroup Condition="'$(UseCefNet)' == 'True'">
    <!--<PackageReference Include="CefNet" Version="$(CefNetWvVersion)" />
    <PackageReference Include="CefNet.Avalonia" Version="$(CefNetWvVersion)" />-->

    <Reference Include="CefNet">
      <HintPath>$(CefAssemblyDir)\CefNet.dll</HintPath>
    </Reference>
    <Reference Include="CefNet.Avalonia">
      <HintPath>$(CefAssemblyDir)\CefNet.Avalonia.dll</HintPath>
    </Reference>
  </ItemGroup>


  <ItemGroup>
    <None Remove="cef\**" />
  </ItemGroup>
  
  <ItemGroup Condition="$(UseCefNet) == 'True'">
    <Content Include="$(CefPlatformDir)\Release\**">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <CopyToPublishDirectory>Always</CopyToPublishDirectory>
    </Content>
    <Content Include="$(CefPlatformDir)\Resources\**">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <CopyToPublishDirectory>Always</CopyToPublishDirectory>
    </Content>
    <Content Include="$(CefPlatformDir)\LICENSE.txt">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
      <CopyToPublishDirectory>Always</CopyToPublishDirectory>
    </Content>
  </ItemGroup>
  

  <ItemGroup>
    <ProjectReference Include="..\Common\MonkeyPaste.Common.Plugin\MonkeyPaste.Common.Plugin.csproj" />
    <ProjectReference Include="..\Common\MonkeyPaste.Common\MonkeyPaste.Common.csproj" />
    <ProjectReference Include="..\MonkeyPaste.Avalonia\MonkeyPaste.Avalonia.csproj" />
  </ItemGroup>

  <ItemGroup Condition="$(BuildOs) != 'LINUX'">
    <None Remove="monkey.png" />
  </ItemGroup>

  <ItemGroup Condition="$(BuildOs) == 'LINUX'">
    <Content Include="icon.png">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>
  
  <!--<ItemGroup Condition="$(BuildOs) == 'LINUX'">
    <PackageReference Include="Packaging.Targets">
      <Version>0.1.220</Version>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>-->
  <!--<PropertyGroup Condition="$(BuildOs) == 'LINUX'">
    <Version>$(LinuxVersion)</Version>
    <Authors>Thomas Kefauver</Authors>
    <Maintainer>Thomas Kefauver</Maintainer>
    <Description>A clipboard manager and more</Description>
    <Company>$(ApplicationAuthor)</Company>    
    <PackagePrefix>$([System.Text.RegularExpressions.Regex]::Replace($(ApplicationName), "\B[A-Z]", "-$0").ToLower())</PackagePrefix>
    <DebPackageArchitecture Condition="$(RuntimeIdentifier.Contains('x64'))">amd64</DebPackageArchitecture>
    <DebPackageArchitecture Condition="$(RuntimeIdentifier.Contains('x86'))">i386</DebPackageArchitecture>
    <DebPackageArchitecture Condition="$(RuntimeIdentifier.Contains('arm'))">armhf</DebPackageArchitecture>
    <PackageName>$(PackagePrefix)_$(Version)_$(DebPackageArchitecture)</PackageName>
    <Homepage>https://www.monkeypaste.com</Homepage>
  </PropertyGroup>-->
  
  <!--<PropertyGroup>
    <OUTDIR>$(MainTargetDir)</OUTDIR>
  </PropertyGroup>
  <Target Name="RenameAfterBuild" AfterTargets="AfterBuild" Condition="$(RuntimeIdentifier.Contains('linux'))">
    <Move SourceFiles="$(OUTDIR)\$(AssemblyName)" DestinationFiles="$(OUTDIR)\$(PackagePrefix)" />
    <Message Text="Renamed linux binary file." Importance="high" />
  </Target>
  <Target Name="RenameBeforePublish" BeforeTargets="CreatePackageProperties" Condition="$(RuntimeIdentifier.Contains('linux'))">
    <Move SourceFiles="$(OUTDIR)publish\$(AssemblyName)" DestinationFiles="$(OUTDIR)publish\$(PackagePrefix)" />
    <Message Text="Renamed linux binary file." Importance="high" />
  </Target>
  <Target Name="SetAppHostName" AfterTargets="CreatePackageProperties" Condition="$(RuntimeIdentifier.Contains('linux'))">
    <PropertyGroup>
      <AppHost Condition="'$(SymlinkAppHostInBin)' == 'true'">$(PackagePrefix)$(_NativeExecutableExtension)</AppHost>
    </PropertyGroup>
  </Target>-->
</Project>
