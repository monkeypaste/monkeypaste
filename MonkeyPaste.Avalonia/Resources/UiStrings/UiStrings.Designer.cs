//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MonkeyPaste.Avalonia {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class UiStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal UiStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MonkeyPaste.Avalonia.Resources.UiStrings.UiStrings", typeof(UiStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to About.
        /// </summary>
        public static string AboutWindowTitlePrefix {
            get {
                return ResourceManager.GetString("AboutWindowTitlePrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Learn More....
        /// </summary>
        public static string AccountLearnMoreButtonText {
            get {
                return ResourceManager.GetString("AccountLearnMoreButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Next to delete! Upgrade to avoid 💪🏽.
        /// </summary>
        public static string AccountNextRemoveToolTipText {
            get {
                return ResourceManager.GetString("AccountNextRemoveToolTipText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Next to trash! Upgrade to avoid 💪🏽.
        /// </summary>
        public static string AccountNextTrashToolTipText {
            get {
                return ResourceManager.GetString("AccountNextTrashToolTipText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upgrade.
        /// </summary>
        public static string AccountUpgradeButtonText {
            get {
                return ResourceManager.GetString("AccountUpgradeButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move.
        /// </summary>
        public static string ActionMoveLabel {
            get {
                return ResourceManager.GetString("ActionMoveLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Formats.
        /// </summary>
        public static string ClipboardPluginFormatsHeader {
            get {
                return ResourceManager.GetString("ClipboardPluginFormatsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Readers.
        /// </summary>
        public static string ClipboardPluginFormatTypeReadersLabel {
            get {
                return ResourceManager.GetString("ClipboardPluginFormatTypeReadersLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writers.
        /// </summary>
        public static string ClipboardPluginFormatTypeWritersLabel {
            get {
                return ResourceManager.GetString("ClipboardPluginFormatTypeWritersLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Handlers.
        /// </summary>
        public static string ClipboardPluginHandlersHeader {
            get {
                return ResourceManager.GetString("ClipboardPluginHandlersHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files.
        /// </summary>
        public static string ClipTileDefTitleFilesPrefix {
            get {
                return ResourceManager.GetString("ClipTileDefTitleFilesPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Image.
        /// </summary>
        public static string ClipTileDefTitleImagePrefix {
            get {
                return ResourceManager.GetString("ClipTileDefTitleImagePrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text.
        /// </summary>
        public static string ClipTileDefTitleTextPrefix {
            get {
                return ResourceManager.GetString("ClipTileDefTitleTextPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copied {0}.
        /// </summary>
        public static string ClipTileDetailCreated {
            get {
                return ResourceManager.GetString("ClipTileDetailCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} files | {1} MBs.
        /// </summary>
        public static string ClipTileDetailDimFiles {
            get {
                return ResourceManager.GetString("ClipTileDetailDimFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} x {1} px.
        /// </summary>
        public static string ClipTileDetailDimImage {
            get {
                return ResourceManager.GetString("ClipTileDetailDimImage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} chars | {1} lines.
        /// </summary>
        public static string ClipTileDetailDimText {
            get {
                return ResourceManager.GetString("ClipTileDetailDimText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} copies | {1} pastes.
        /// </summary>
        public static string ClipTileDetailUsage {
            get {
                return ResourceManager.GetString("ClipTileDetailUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Last active app unknown. Switch to intended app to monkey paste..
        /// </summary>
        public static string ClipTilePasteButtonDisabledTooltip {
            get {
                return ResourceManager.GetString("ClipTilePasteButtonDisabledTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paste to: &lt;em&gt;&lt;i class=&quot;paste-tooltip-suffix&quot;&gt;{0}&lt;/i&gt;&lt;/em&gt;.
        /// </summary>
        public static string ClipTilePasteButtonTooltip {
            get {
                return ResourceManager.GetString("ClipTilePasteButtonTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Double Click to unpin .
        /// </summary>
        public static string ClipTilePinPlaceHolderLabelPrefix {
            get {
                return ResourceManager.GetString("ClipTilePinPlaceHolderLabelPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tags.
        /// </summary>
        public static string ClipTileTagContextMenuLabel {
            get {
                return ResourceManager.GetString("ClipTileTagContextMenuLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add.
        /// </summary>
        public static string CommonAddLabel {
            get {
                return ResourceManager.GetString("CommonAddLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy.
        /// </summary>
        public static string CommonCopyOpLabel {
            get {
                return ResourceManager.GetString("CommonCopyOpLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cut.
        /// </summary>
        public static string CommonCutOpLabel {
            get {
                return ResourceManager.GetString("CommonCutOpLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        public static string CommonDeleteLabel {
            get {
                return ResourceManager.GetString("CommonDeleteLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable.
        /// </summary>
        public static string CommonDisableLabel {
            get {
                return ResourceManager.GetString("CommonDisableLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate.
        /// </summary>
        public static string CommonDuplicateLabel {
            get {
                return ResourceManager.GetString("CommonDuplicateLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit Name.
        /// </summary>
        public static string CommonEditLabel {
            get {
                return ResourceManager.GetString("CommonEditLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No results available..
        /// </summary>
        public static string CommonEmptyListText {
            get {
                return ResourceManager.GetString("CommonEmptyListText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable.
        /// </summary>
        public static string CommonEnableLabel {
            get {
                return ResourceManager.GetString("CommonEnableLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimize.
        /// </summary>
        public static string CommonMinimizeWindowLabel {
            get {
                return ResourceManager.GetString("CommonMinimizeWindowLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        public static string CommonNoneLabel {
            get {
                return ResourceManager.GetString("CommonNoneLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm.
        /// </summary>
        public static string CommonNtfConfirmTitle {
            get {
                return ResourceManager.GetString("CommonNtfConfirmTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paste.
        /// </summary>
        public static string CommonPasteOpLabel {
            get {
                return ResourceManager.GetString("CommonPasteOpLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pin.
        /// </summary>
        public static string CommonPinItemLabel {
            get {
                return ResourceManager.GetString("CommonPinItemLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh.
        /// </summary>
        public static string CommonRefreshTooltip {
            get {
                return ResourceManager.GetString("CommonRefreshTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset.
        /// </summary>
        public static string CommonResetLabel {
            get {
                return ResourceManager.GetString("CommonResetLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Save.
        /// </summary>
        public static string CommonSaveLabel {
            get {
                return ResourceManager.GetString("CommonSaveLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Search....
        /// </summary>
        public static string CommonSearchWatermark {
            get {
                return ResourceManager.GetString("CommonSearchWatermark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        public static string CommonSettingsTitle {
            get {
                return ResourceManager.GetString("CommonSettingsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Copy.
        /// </summary>
        public static string CommonTitledCopyTitleText {
            get {
                return ResourceManager.GetString("CommonTitledCopyTitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unpin.
        /// </summary>
        public static string CommonUnpinItemLabel {
            get {
                return ResourceManager.GetString("CommonUnpinItemLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Finish appending.
        /// </summary>
        public static string EditorAppendCLoseLabel {
            get {
                return ResourceManager.GetString("EditorAppendCLoseLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Paragraph.
        /// </summary>
        public static string EditorAppendInlineModelLabel {
            get {
                return ResourceManager.GetString("EditorAppendInlineModelLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable Inline.
        /// </summary>
        public static string EditorAppendLineModeLabel {
            get {
                return ResourceManager.GetString("EditorAppendLineModeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle manual.
        /// </summary>
        public static string EditorAppendManualModeLabel {
            get {
                return ResourceManager.GetString("EditorAppendManualModeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle manual.
        /// </summary>
        public static string EditorAppendNonManualModeLabel {
            get {
                return ResourceManager.GetString("EditorAppendNonManualModeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pause appending to clipboard.
        /// </summary>
        public static string EditorAppendPauseLabel {
            get {
                return ResourceManager.GetString("EditorAppendPauseLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle Before.
        /// </summary>
        public static string EditorAppendPostLabel {
            get {
                return ResourceManager.GetString("EditorAppendPostLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle Before.
        /// </summary>
        public static string EditorAppendPreLabel {
            get {
                return ResourceManager.GetString("EditorAppendPreLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resume appending to clipboard.
        /// </summary>
        public static string EditorAppendResumeLabel {
            get {
                return ResourceManager.GetString("EditorAppendResumeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please wait....
        /// </summary>
        public static string EditorCommonBusyLabel {
            get {
                return ResourceManager.GetString("EditorCommonBusyLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Append....
        /// </summary>
        public static string EditorPasteButtonAppendBeginLabel {
            get {
                return ResourceManager.GetString("EditorPasteButtonAppendBeginLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paste.
        /// </summary>
        public static string EditorPasteButtonLabel {
            get {
                return ResourceManager.GetString("EditorPasteButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;Using available contacts (requires a fetcher plugin) this field will be used for all instances of this template across this document or in any it will be referenced in later.&lt;/p&gt;
        ///&lt;p&gt; So for example if select email address here then the email field of the contact you select will be used for all instances in this document.&lt;/p&gt;.
        /// </summary>
        public static string EditorTemplateContactHint {
            get {
                return ResourceManager.GetString("EditorTemplateContactHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;yy = short year&lt;/p&gt;
        ///&lt;p&gt;yyyy = long year&lt;/p&gt;
        ///&lt;p&gt;M = month (1-12)&lt;/p&gt;
        ///&lt;p&gt;MM = month (01-12)&lt;/p&gt;
        ///&lt;p&gt;MMM = month abbreviation (Jan, Feb ... Dec)&lt;/p&gt;
        ///&lt;p&gt;MMMM = long month (January, February ... December)&lt;/p&gt;
        ///&lt;p&gt;d = day (1 - 31)&lt;/p&gt;
        ///&lt;p&gt;dd = day (01 - 31)&lt;/p&gt;
        ///&lt;p&gt;ddd = day of the week in words (Monday, Tuesday ... Sunday)&lt;/p&gt;
        ///&lt;p&gt;E = short day of the week in words (Mon, Tue ... Sun)&lt;/p&gt;
        ///&lt;p&gt;D - Ordinal day (1st, 2nd, 3rd, 21st, 22nd, 23rd, 31st, 4th...)&lt;/p&gt;
        ///&lt;p&gt;h = hour in am/pm (0-12)&lt;/p&gt;
        ///&lt;p&gt;hh = hour  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string EditorTemplateDateTimeCustomHint {
            get {
                return ResourceManager.GetString("EditorTemplateDateTimeCustomHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;The current date and/or time will be substituted for DateTime templates from moment they evaluated ie. pasted.&lt;/p&gt;
        ///&lt;p&gt;The specified format is shared so changes here will update system-wide.&lt;/p&gt;.
        /// </summary>
        public static string EditorTemplateDateTimeHint {
            get {
                return ResourceManager.GetString("EditorTemplateDateTimeHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;All occurances of this template will be set to the value you provide here&lt;/p&gt;.
        /// </summary>
        public static string EditorTemplateDynamicHint {
            get {
                return ResourceManager.GetString("EditorTemplateDynamicHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;The current date and/or time will be substituted for DateTime templates from moment they evaluated ie. pasted.&lt;/p&gt;
        ///&lt;p&gt;The specified format is shared so changes here will update system-wide.&lt;/p&gt;.
        /// </summary>
        public static string EditorTemplateStaticHint {
            get {
                return ResourceManager.GetString("EditorTemplateStaticHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All interop shortcuts (those useful outside of MonkeyPaste) are enabled by default. Pressing Caps Lock (without any other key) will show or hide the interface at anytime (not currently supported on Linux).
        /// </summary>
        public static string GestureProfileGlobal {
            get {
                return ResourceManager.GetString("GestureProfileGlobal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No global shortcuts are enabled by default. .
        /// </summary>
        public static string GestureProfileInternal {
            get {
                return ResourceManager.GetString("GestureProfileInternal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lock.
        /// </summary>
        public static string MainWindowTitleLockLabel {
            get {
                return ResourceManager.GetString("MainWindowTitleLockLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide all &apos;{0}&apos; notifications.
        /// </summary>
        public static string NotificationOptionHideAllLabel {
            get {
                return ResourceManager.GetString("NotificationOptionHideAllLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide.
        /// </summary>
        public static string NotificationOptionHideLabel {
            get {
                return ResourceManager.GetString("NotificationOptionHideLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Would you also like to remove all {0} clips from &apos;{1}&apos;.
        /// </summary>
        public static string NtfRejectRemoveClipsBody {
            get {
                return ResourceManager.GetString("NtfRejectRemoveClipsBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove Clips?.
        /// </summary>
        public static string NtfRejectRemoveClipsTitle {
            get {
                return ResourceManager.GetString("NtfRejectRemoveClipsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Credits:.
        /// </summary>
        public static string PluginBrowserCreditsLabel {
            get {
                return ResourceManager.GetString("PluginBrowserCreditsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dependencies:.
        /// </summary>
        public static string PluginBrowserDependenciesLabel {
            get {
                return ResourceManager.GetString("PluginBrowserDependenciesLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Description:.
        /// </summary>
        public static string PluginBrowserDescriptionLabel {
            get {
                return ResourceManager.GetString("PluginBrowserDescriptionLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Donate:.
        /// </summary>
        public static string PluginBrowserDonateLabel {
            get {
                return ResourceManager.GetString("PluginBrowserDonateLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install.
        /// </summary>
        public static string PluginBrowserInstallLabel {
            get {
                return ResourceManager.GetString("PluginBrowserInstallLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to License:.
        /// </summary>
        public static string PluginBrowserLicenseLabel {
            get {
                return ResourceManager.GetString("PluginBrowserLicenseLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to remove &apos;{0}&apos; and all its presets and shortcuts?.
        /// </summary>
        public static string PluginBrowserNtfUninstallMsg {
            get {
                return ResourceManager.GetString("PluginBrowserNtfUninstallMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Project URL:.
        /// </summary>
        public static string PluginBrowserProjectUrlLabel {
            get {
                return ResourceManager.GetString("PluginBrowserProjectUrlLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Published:.
        /// </summary>
        public static string PluginBrowserPublishedLabel {
            get {
                return ResourceManager.GetString("PluginBrowserPublishedLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Read Me:.
        /// </summary>
        public static string PluginBrowserReadMeLabel {
            get {
                return ResourceManager.GetString("PluginBrowserReadMeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report Abuse:.
        /// </summary>
        public static string PluginBrowserReportAbuseLabel {
            get {
                return ResourceManager.GetString("PluginBrowserReportAbuseLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tags:.
        /// </summary>
        public static string PluginBrowserTagsLabel {
            get {
                return ResourceManager.GetString("PluginBrowserTagsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uninstall.
        /// </summary>
        public static string PluginBrowserUninstallLabel {
            get {
                return ResourceManager.GetString("PluginBrowserUninstallLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Update:.
        /// </summary>
        public static string PluginBrowserUpdateLabel {
            get {
                return ResourceManager.GetString("PluginBrowserUpdateLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version:.
        /// </summary>
        public static string PluginBrowserVersionLabel {
            get {
                return ResourceManager.GetString("PluginBrowserVersionLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The clipboard is a jungle. You need the prowess of a primate to navigate the terrain and tap its true potential..
        /// </summary>
        public static string ProductDescription {
            get {
                return ResourceManager.GetString("ProductDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unnamed Filter.
        /// </summary>
        public static string QueryTrayEmptyPendingTagName {
            get {
                return ResourceManager.GetString("QueryTrayEmptyPendingTagName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  has no results..
        /// </summary>
        public static string QueryTrayEmptyText {
            get {
                return ResourceManager.GetString("QueryTrayEmptyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No selection..
        /// </summary>
        public static string QueryTrayNoSelection {
            get {
                return ResourceManager.GetString("QueryTrayNoSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to - Please Select -.
        /// </summary>
        public static string SearchCriteriaDefaultOptionLabel {
            get {
                return ResourceManager.GetString("SearchCriteriaDefaultOptionLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open in Window.
        /// </summary>
        public static string SearchCriteriaHeadePopoutTooltipText {
            get {
                return ResourceManager.GetString("SearchCriteriaHeadePopoutTooltipText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dismiss.
        /// </summary>
        public static string SearchCriteriaHeaderDismissButtonLabel {
            get {
                return ResourceManager.GetString("SearchCriteriaHeaderDismissButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh.
        /// </summary>
        public static string SearchCriteriaHeadeRefreshTooltipText {
            get {
                return ResourceManager.GetString("SearchCriteriaHeadeRefreshTooltipText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Account.
        /// </summary>
        public static string SettingsAccountTabLabel {
            get {
                return ResourceManager.GetString("SettingsAccountTabLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Help.
        /// </summary>
        public static string SettingsHelpTabLabel {
            get {
                return ResourceManager.GetString("SettingsHelpTabLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add App.
        /// </summary>
        public static string SettingsInteropAddAppButtonLabel {
            get {
                return ResourceManager.GetString("SettingsInteropAddAppButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Website.
        /// </summary>
        public static string SettingsInteropAddUrlButtonLabel {
            get {
                return ResourceManager.GetString("SettingsInteropAddUrlButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block?.
        /// </summary>
        public static string SettingsInteropAppBlockHeaderLabel {
            get {
                return ResourceManager.GetString("SettingsInteropAppBlockHeaderLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application.
        /// </summary>
        public static string SettingsInteropAppBrowseToAppFilterLabel {
            get {
                return ResourceManager.GetString("SettingsInteropAppBrowseToAppFilterLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse to app....
        /// </summary>
        public static string SettingsInteropAppBrowseToAppMenuItemLabel {
            get {
                return ResourceManager.GetString("SettingsInteropAppBrowseToAppMenuItemLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select application path.
        /// </summary>
        public static string SettingsInteropAppBrowseToAppPickerTitle {
            get {
                return ResourceManager.GetString("SettingsInteropAppBrowseToAppPickerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to remove custom formats for {0}?.
        /// </summary>
        public static string SettingsInteropAppConfirmRemoveFormatsBody {
            get {
                return ResourceManager.GetString("SettingsInteropAppConfirmRemoveFormatsBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to remove custom shortcuts for {1}.
        /// </summary>
        public static string SettingsInteropAppConfirmRemoveShortcutsBody {
            get {
                return ResourceManager.GetString("SettingsInteropAppConfirmRemoveShortcutsBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;Some Monkey Paste features uses keyboard automation to trigger a copy event in  applications (like a console or shell for example). Add and/or select the app with the unique copy shortcut to ensure those features function properly.&lt;/p&gt;.
        /// </summary>
        public static string SettingsInteropAppCopyShortcutHeaderHint {
            get {
                return ResourceManager.GetString("SettingsInteropAppCopyShortcutHeaderHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy Shortcut.
        /// </summary>
        public static string SettingsInteropAppCopyShortcutHeaderLabel {
            get {
                return ResourceManager.GetString("SettingsInteropAppCopyShortcutHeaderLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string SettingsInteropAppNameHeaderLabel {
            get {
                return ResourceManager.GetString("SettingsInteropAppNameHeaderLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Edit....
        /// </summary>
        public static string SettingsInteropAppOleFormatButtonPointerOverLabel {
            get {
                return ResourceManager.GetString("SettingsInteropAppOleFormatButtonPointerOverLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default.
        /// </summary>
        public static string SettingsInteropAppOleFormatDefaultButtonLabel {
            get {
                return ResourceManager.GetString("SettingsInteropAppOleFormatDefaultButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        public static string SettingsInteropAppOleFormatNoopButtonLabel {
            get {
                return ResourceManager.GetString("SettingsInteropAppOleFormatNoopButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only the selected presets will be used for the specified application. When unspecified, the default presets found in the &lt;em&gt;Clipboard Sidebar&lt;/em&gt; will be used..
        /// </summary>
        public static string SettingsInteropAppOleFormatsHeaderHint {
            get {
                return ResourceManager.GetString("SettingsInteropAppOleFormatsHeaderHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no assigned clipboard formats for this app. No data will be read from it via cut/copy or attempting a drag-and-drop into MonkeyPaste.
        /// </summary>
        public static string SettingsInteropAppOleNoopReaderTooltip {
            get {
                return ResourceManager.GetString("SettingsInteropAppOleNoopReaderTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no assigned clipboard formats for this app. Automated paste or drag-and-drop from MonkeyPaste will have no affect (its empty data)..
        /// </summary>
        public static string SettingsInteropAppOleNoopWriterTooltip {
            get {
                return ResourceManager.GetString("SettingsInteropAppOleNoopWriterTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p&gt;Monkey Paste uses keyboard automation to perform external pasting and some applications (like a console or shell for example) may have a non-default paste shortcut. To ensure proper interoperability record that short cut for the esoteric application here.&lt;/p&gt;&lt;p&gt;Along with pasting into the application, this shortcut will be needed to track usage statistics (only for delights, not shared)&lt;/p&gt;.
        /// </summary>
        public static string SettingsInteropAppPasteShortcutHeaderHint {
            get {
                return ResourceManager.GetString("SettingsInteropAppPasteShortcutHeaderHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paste Shortcut.
        /// </summary>
        public static string SettingsInteropAppPasteShortcutHeaderLabel {
            get {
                return ResourceManager.GetString("SettingsInteropAppPasteShortcutHeaderLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Readers.
        /// </summary>
        public static string SettingsInteropAppReadHeaderLabel {
            get {
                return ResourceManager.GetString("SettingsInteropAppReadHeaderLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All clipboard monitoring from rejected applications will be &lt;b&gt;ignored&lt;/b&gt;..
        /// </summary>
        public static string SettingsInteropAppRejectHeaderHint {
            get {
                return ResourceManager.GetString("SettingsInteropAppRejectHeaderHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writers.
        /// </summary>
        public static string SettingsInteropAppWriteHeaderLabel {
            get {
                return ResourceManager.GetString("SettingsInteropAppWriteHeaderLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Formats.
        /// </summary>
        public static string SettingsInteropFormatsHeaderTitle {
            get {
                return ResourceManager.GetString("SettingsInteropFormatsHeaderTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apps.
        /// </summary>
        public static string SettingsInteropRejectedAppsHeaderLabel {
            get {
                return ResourceManager.GetString("SettingsInteropRejectedAppsHeaderLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rejected.
        /// </summary>
        public static string SettingsInteropRejectedHeaderTitle {
            get {
                return ResourceManager.GetString("SettingsInteropRejectedHeaderTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Websites.
        /// </summary>
        public static string SettingsInteropRejectedUrlsHeaderLabel {
            get {
                return ResourceManager.GetString("SettingsInteropRejectedUrlsHeaderLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shortcuts.
        /// </summary>
        public static string SettingsInteropShortcutsHeaderTitle {
            get {
                return ResourceManager.GetString("SettingsInteropShortcutsHeaderTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copy &amp; Paste.
        /// </summary>
        public static string SettingsInteropTabLabel {
            get {
                return ResourceManager.GetString("SettingsInteropTabLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block Domain?.
        /// </summary>
        public static string SettingsInteropUrlBlockDomainHeaderLabel {
            get {
                return ResourceManager.GetString("SettingsInteropUrlBlockDomainHeaderLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Block Url?.
        /// </summary>
        public static string SettingsInteropUrlBlockUrlHeaderLabel {
            get {
                return ResourceManager.GetString("SettingsInteropUrlBlockUrlHeaderLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Domain.
        /// </summary>
        public static string SettingsInteropUrlDomainHeaderLabel {
            get {
                return ResourceManager.GetString("SettingsInteropUrlDomainHeaderLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Source url recognition is dependant on the host applications clipboard support so rejection is not guaranteed :(.
        /// </summary>
        public static string SettingsInteropUrlHintText {
            get {
                return ResourceManager.GetString("SettingsInteropUrlHintText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Url.
        /// </summary>
        public static string SettingsInteropUrlNameHeaderLabel {
            get {
                return ResourceManager.GetString("SettingsInteropUrlNameHeaderLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preferences.
        /// </summary>
        public static string SettingsPrefTabLabel {
            get {
                return ResourceManager.GetString("SettingsPrefTabLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset All.
        /// </summary>
        public static string SettingsResetAllButtonLabel {
            get {
                return ResourceManager.GetString("SettingsResetAllButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filter....
        /// </summary>
        public static string SettingsSearchWatermark {
            get {
                return ResourceManager.GetString("SettingsSearchWatermark", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application.
        /// </summary>
        public static string SettingsShortcutsAppCommandHeaderText {
            get {
                return ResourceManager.GetString("SettingsShortcutsAppCommandHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom.
        /// </summary>
        public static string SettingsShortcutsCustomCommandHeaderText {
            get {
                return ResourceManager.GetString("SettingsShortcutsCustomCommandHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global.
        /// </summary>
        public static string SettingsShortcutsGlobalCommandHeaderText {
            get {
                return ResourceManager.GetString("SettingsShortcutsGlobalCommandHeaderText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shortcuts.
        /// </summary>
        public static string SettingsShortcutTabLabel {
            get {
                return ResourceManager.GetString("SettingsShortcutTabLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This combination conflicts with &apos;{0}&apos; which will be cleared if saved..
        /// </summary>
        public static string ShortcutAssignDuplicateWarning {
            get {
                return ResourceManager.GetString("ShortcutAssignDuplicateWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A shortcut must be provided..
        /// </summary>
        public static string ShortcutAssignEmptyAppClipboardShortcutWarning {
            get {
                return ResourceManager.GetString("ShortcutAssignEmptyAppClipboardShortcutWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a global shortcut! That means it will attempt to execute whenever it is performed. Try to make it unique enough to not conflict with shortcuts from other applications..
        /// </summary>
        public static string ShortcutAssignGlobalHint {
            get {
                return ResourceManager.GetString("ShortcutAssignGlobalHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global.
        /// </summary>
        public static string ShortcutAssignGlobalLabel {
            get {
                return ResourceManager.GetString("ShortcutAssignGlobalLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shortcut must contain ONE and only ONE input key.Any key that is not:.
        /// </summary>
        public static string ShortcutAssignInvalidGestureWarning {
            get {
                return ResourceManager.GetString("ShortcutAssignInvalidGestureWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Press any key to record....
        /// </summary>
        public static string ShortcutAssignRecordLabel {
            get {
                return ResourceManager.GetString("ShortcutAssignRecordLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assign Shortcut.
        /// </summary>
        public static string ShortcutAssignWindowTitle {
            get {
                return ResourceManager.GetString("ShortcutAssignWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Action.
        /// </summary>
        public static string ShortcutDataGridActionHeader {
            get {
                return ResourceManager.GetString("ShortcutDataGridActionHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Routing.
        /// </summary>
        public static string ShortcutDataGridRoutingHeader {
            get {
                return ResourceManager.GetString("ShortcutDataGridRoutingHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shortcut.
        /// </summary>
        public static string ShortcutDataGridShortcutHeader {
            get {
                return ResourceManager.GetString("ShortcutDataGridShortcutHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gestures must be unique and may only contain ONE input key (as opposed to a modifier key like Control,Shift,Alt,Meta/Win depending on platform).
        /// </summary>
        public static string ShortcutGestureRulesHint {
            get {
                return ResourceManager.GetString("ShortcutGestureRulesHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ul&gt;
        ///	&lt;li&gt;
        ///		&lt;b&gt;Internal&lt;/b&gt;All shortcuts are limited to within the application. This is not really an intended option but can allow to customize what shortcuts you intend to make global&lt;i&gt;someday&lt;/i&gt;.&lt;/li&gt;
        ///	&lt;li&gt;
        ///		&lt;b&gt;Global&lt;/b&gt;The default shortcut configuration where all global shortcuts are enabled. The&lt;b&gt;Show/Hide Main Window&lt;/b&gt;shortcut uses&lt;span color=&quot;red&quot;&gt;override&lt;/span&gt;routing for the&lt;b&gt;Caps Lock&lt;/b&gt; key. You can change that routing or gesture at any time. But&lt;span color=&quot;green&quot;&gt;give it a try&lt;/s [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ShortcutRoutingProfileTypeHint {
            get {
                return ResourceManager.GetString("ShortcutRoutingProfileTypeHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;ul&gt;
        ///	&lt;li&gt;
        ///		&lt;b&gt;Internal&lt;/b&gt; In app shortcuts, are not globally enabled&lt;/li&gt;
        ///	&lt;li&gt;
        ///		&lt;b&gt;Direct&lt;/b&gt; Gesture will &lt;b&gt;
        ///			&lt;i&gt;override&lt;/i&gt;
        ///		&lt;/b&gt; the input, ie. it will &lt;b style=&quot;foreground: #FF0000&quot;&gt;not&lt;/b&gt; be received by active application. &lt;/li&gt;
        ///	&lt;li&gt;
        ///		&lt;b&gt;Bubble&lt;/b&gt; Gesture will execute &lt;b&gt;
        ///			&lt;i&gt;after&lt;/i&gt;
        ///		&lt;/b&gt; active application &lt;/li&gt;
        ///	&lt;li&gt;
        ///		&lt;b&gt;Tunnel&lt;/b&gt; Gesture will execute &lt;b&gt;
        ///			&lt;i&gt;before&lt;/i&gt;
        ///		&lt;/b&gt; active application &lt;/li&gt;
        ///&lt;/ul&gt;.
        /// </summary>
        public static string ShortcutRoutingTypeHint {
            get {
                return ResourceManager.GetString("ShortcutRoutingTypeHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to reset all shortcuts? All custom shortcuts will be removed..
        /// </summary>
        public static string ShortcutsResetNtfMsg {
            get {
                return ResourceManager.GetString("ShortcutsResetNtfMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Are you sure you want to change your shortcut routing profile to &apos;{0}&apos;.
        /// </summary>
        public static string ShortcutsRoutingProfileChangeNtfMsg {
            get {
                return ResourceManager.GetString("ShortcutsRoutingProfileChangeNtfMsg", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string String {
            get {
                return ResourceManager.GetString("String", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Usernames and passwords for any test accounts needed to test the submission:.
        /// </summary>
        public static string String1 {
            get {
                return ResourceManager.GetString("String1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dependencies on other products:.
        /// </summary>
        public static string String10 {
            get {
                return ResourceManager.GetString("String10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        public static string String11 {
            get {
                return ResourceManager.GetString("String11", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to None.
        /// </summary>
        public static string String2 {
            get {
                return ResourceManager.GetString("String2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steps to access features, modes, or content that may be hidden, conditional, or locked/limited:.
        /// </summary>
        public static string String3 {
            get {
                return ResourceManager.GetString("String3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copying more than 5 pieces of content (text, images or files) from any application (within reason, notepad would be a suitable one for testing) will not be restricted to 5 items. Then any subsequent cut/copy actions will add more content (it won&apos;t be restricted to 5 like free version)..
        /// </summary>
        public static string String4 {
            get {
                return ResourceManager.GetString("String4", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Steps to verify background audio usage:.
        /// </summary>
        public static string String5 {
            get {
                return ResourceManager.GetString("String5", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audio playback volume is set to 0 by default (treated as muted). To hear it.
        /// </summary>
        public static string String6 {
            get {
                return ResourceManager.GetString("String6", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1. open the Settings window (accessed from cog icon at top-left of the main window or right-clicking system tray icon and selecting &apos;Settings&apos;)..
        /// </summary>
        public static string String7 {
            get {
                return ResourceManager.GetString("String7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 2. select the &quot;Preferences&quot; tab (should be by default) then scroll to the &quot;Sound&quot; panel and increase the volume slider of &quot;Notification Volume&quot;.
        /// </summary>
        public static string String8 {
            get {
                return ResourceManager.GetString("String8", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 3. A sample audio clip will play at selected volume.
        /// </summary>
        public static string String9 {
            get {
                return ResourceManager.GetString("String9", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All.
        /// </summary>
        public static string TagDefaultAllLabel {
            get {
                return ResourceManager.GetString("TagDefaultAllLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Favorites.
        /// </summary>
        public static string TagDefaultFavoritesLabel {
            get {
                return ResourceManager.GetString("TagDefaultFavoritesLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Filters.
        /// </summary>
        public static string TagDefaultFiltersLabel {
            get {
                return ResourceManager.GetString("TagDefaultFiltersLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Formats.
        /// </summary>
        public static string TagDefaultFormatsLabel {
            get {
                return ResourceManager.GetString("TagDefaultFormatsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tags.
        /// </summary>
        public static string TagDefaultTagsLabel {
            get {
                return ResourceManager.GetString("TagDefaultTagsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Today.
        /// </summary>
        public static string TagDefaultTodayLabel {
            get {
                return ResourceManager.GetString("TagDefaultTodayLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Trash.
        /// </summary>
        public static string TagDefaultTrashLabel {
            get {
                return ResourceManager.GetString("TagDefaultTrashLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is a test &lt;b color=&quot;green&quot;&gt;test&lt;/b&gt; &lt;em color=&quot;red&quot;&gt;&lt;b&gt;test&lt;/b&lt;/em&gt; &lt;a color=&quot;pink&quot; href=&quot;https://www.google.com/&quot;&gt;test&lt;/a&gt;.
        /// </summary>
        public static string Test {
            get {
                return ResourceManager.GetString("Test", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel.
        /// </summary>
        public static string UserActionCancelButtonText {
            get {
                return ResourceManager.GetString("UserActionCancelButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fix.
        /// </summary>
        public static string UserActionFixButtonText {
            get {
                return ResourceManager.GetString("UserActionFixButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ignore.
        /// </summary>
        public static string UserActionIgnoreButtonText {
            get {
                return ResourceManager.GetString("UserActionIgnoreButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        public static string UserActionNoButtonText {
            get {
                return ResourceManager.GetString("UserActionNoButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ok.
        /// </summary>
        public static string UserActionOkButtonText {
            get {
                return ResourceManager.GetString("UserActionOkButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Retry.
        /// </summary>
        public static string UserActionRetryButtonText {
            get {
                return ResourceManager.GetString("UserActionRetryButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shutdown.
        /// </summary>
        public static string UserActionShutdownButtonText {
            get {
                return ResourceManager.GetString("UserActionShutdownButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Submit.
        /// </summary>
        public static string UserActionSubmitButtonText {
            get {
                return ResourceManager.GetString("UserActionSubmitButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        public static string UserActionYesButtonText {
            get {
                return ResourceManager.GetString("UserActionYesButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No features are limited by subscription, only storage capacity and can be changed at anytime..
        /// </summary>
        public static string WelcomeAccountCaption {
            get {
                return ResourceManager.GetString("WelcomeAccountCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Content and archive is limited to {0} and {1} clips respectively. No syncing capabilities are enabled..
        /// </summary>
        public static string WelcomeAccountFreeDescription {
            get {
                return ResourceManager.GetString("WelcomeAccountFreeDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Free.
        /// </summary>
        public static string WelcomeAccountFreeLabel {
            get {
                return ResourceManager.GetString("WelcomeAccountFreeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yearly.
        /// </summary>
        public static string WelcomeAccountMonthlySwitchDisabled {
            get {
                return ResourceManager.GetString("WelcomeAccountMonthlySwitchDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Monthly.
        /// </summary>
        public static string WelcomeAccountMonthlySwitchEnabled {
            get {
                return ResourceManager.GetString("WelcomeAccountMonthlySwitchEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore your existing account....
        /// </summary>
        public static string WelcomeAccountRestoreDescription {
            get {
                return ResourceManager.GetString("WelcomeAccountRestoreDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restore.
        /// </summary>
        public static string WelcomeAccountRestoreLabel {
            get {
                return ResourceManager.GetString("WelcomeAccountRestoreLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows up to {2} clips of content and unlimited archive with syncing available across all devices. .
        /// </summary>
        public static string WelcomeAccountStandardDescription {
            get {
                return ResourceManager.GetString("WelcomeAccountStandardDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Standard.
        /// </summary>
        public static string WelcomeAccountStandardLabel {
            get {
                return ResourceManager.GetString("WelcomeAccountStandardLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subscription.
        /// </summary>
        public static string WelcomeAccountTitle {
            get {
                return ResourceManager.GetString("WelcomeAccountTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrestricted, unlimited storage (optimized for efficiency with millions of items) with syncing across all devices..
        /// </summary>
        public static string WelcomeAccountUnlimitedDescription {
            get {
                return ResourceManager.GetString("WelcomeAccountUnlimitedDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unlimited.
        /// </summary>
        public static string WelcomeAccountUnlimitedLabel {
            get {
                return ResourceManager.GetString("WelcomeAccountUnlimitedLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Your privacy is important and clipboard data can be very personal. Storage is always encrypted but you can set a password that will be required in case your device is stolen or someone else is using your device..
        /// </summary>
        public static string WelcomeDbPasswordCaption {
            get {
                return ResourceManager.GetString("WelcomeDbPasswordCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string WelcomeDbPasswordTitle {
            get {
                return ResourceManager.GetString("WelcomeDbPasswordTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, dragging from any application to the top of the screen will reveal MonkeyPaste to easily drop content into MonkeyPaste..
        /// </summary>
        public static string WelcomeDragToOpenCaption {
            get {
                return ResourceManager.GetString("WelcomeDragToOpenCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enabling the &apos;lock&apos; in the top left of the main window will still allow dropping into MonkeyPaste..
        /// </summary>
        public static string WelcomeDragToOpenDescription1 {
            get {
                return ResourceManager.GetString("WelcomeDragToOpenDescription1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More window preferences are available from the &apos;Settings-&gt;Preferences-&gt;Window&apos; menu..
        /// </summary>
        public static string WelcomeDragToOpenDescription2 {
            get {
                return ResourceManager.GetString("WelcomeDragToOpenDescription2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drag Me!.
        /// </summary>
        public static string WelcomeDragToOpenDragSourceLabel {
            get {
                return ResourceManager.GetString("WelcomeDragToOpenDragSourceLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p align=&quot;center&quot;&gt;MonkeyPaste is &lt;span color=&quot;red&gt;fully integrated&lt;/span&gt; with Drag-and-Drop to and from the application.&lt;/p&gt;.
        /// </summary>
        public static string WelcomeDragToOpenFakeWindowDetail {
            get {
                return ResourceManager.GetString("WelcomeDragToOpenFakeWindowDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drop it here!.
        /// </summary>
        public static string WelcomeDragToOpenFakeWindowLabel1 {
            get {
                return ResourceManager.GetString("WelcomeDragToOpenFakeWindowLabel1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Easy Right?.
        /// </summary>
        public static string WelcomeDragToOpenFakeWindowLabel2 {
            get {
                return ResourceManager.GetString("WelcomeDragToOpenFakeWindowLabel2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drag Bananas Up Here!.
        /// </summary>
        public static string WelcomeDragToOpenMarkerLabel {
            get {
                return ResourceManager.GetString("WelcomeDragToOpenMarkerLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drag-to-Open.
        /// </summary>
        public static string WelcomeDragToOpenTitle {
            get {
                return ResourceManager.GetString("WelcomeDragToOpenTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Try it out!.
        /// </summary>
        public static string WelcomeDragToOpenTryButtonLabel {
            get {
                return ResourceManager.GetString("WelcomeDragToOpenTryButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyboard shortcuts can be reviewed or changed at anytime from the &apos;Settings-&gt;Shortcuts&apos; menu..
        /// </summary>
        public static string WelcomeGestureProfileCaption {
            get {
                return ResourceManager.GetString("WelcomeGestureProfileCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All global shortcuts will be marked as local so you can configure them yourself later..
        /// </summary>
        public static string WelcomeGestureProfileDescription1 {
            get {
                return ResourceManager.GetString("WelcomeGestureProfileDescription1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MonkeyPaste&apos;s clipboard shortcuts will be available in all applications..
        /// </summary>
        public static string WelcomeGestureProfileDescription2 {
            get {
                return ResourceManager.GetString("WelcomeGestureProfileDescription2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Internal.
        /// </summary>
        public static string WelcomeGestureProfileLabel1 {
            get {
                return ResourceManager.GetString("WelcomeGestureProfileLabel1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Global.
        /// </summary>
        public static string WelcomeGestureProfileLabel2 {
            get {
                return ResourceManager.GetString("WelcomeGestureProfileLabel2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gesture Profile.
        /// </summary>
        public static string WelcomeGestureProfileTitle {
            get {
                return ResourceManager.GetString("WelcomeGestureProfileTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hey! Let&apos;s setup a few things to improve your overall experience with MonkeyPaste..
        /// </summary>
        public static string WelcomeGreetingCaption {
            get {
                return ResourceManager.GetString("WelcomeGreetingCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome.
        /// </summary>
        public static string WelcomeGreetingTitle {
            get {
                return ResourceManager.GetString("WelcomeGreetingTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To get the most use out of MonkeyPaste, loading automatically when you log in is a good idea. But, that&apos;s entirely up to you..
        /// </summary>
        public static string WelcomeLoginLoadCaption {
            get {
                return ResourceManager.GetString("WelcomeLoginLoadCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keep it casual..
        /// </summary>
        public static string WelcomeLoginLoadDescription1 {
            get {
                return ResourceManager.GetString("WelcomeLoginLoadDescription1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load up when this user account is logged in, not for other users..
        /// </summary>
        public static string WelcomeLoginLoadDescription2 {
            get {
                return ResourceManager.GetString("WelcomeLoginLoadDescription2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load On Login?.
        /// </summary>
        public static string WelcomeLoginLoadTitle {
            get {
                return ResourceManager.GetString("WelcomeLoginLoadTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When enabled, a scroll gesture at the top of the screen will reveal MonkeyPaste..
        /// </summary>
        public static string WelcomeScrollToOpenCaption {
            get {
                return ResourceManager.GetString("WelcomeScrollToOpenCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Left-clicking the taskbar icon will still open MonkeyPaste..
        /// </summary>
        public static string WelcomeScrollToOpenDescription1 {
            get {
                return ResourceManager.GetString("WelcomeScrollToOpenDescription1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to More window preferences are available from the &apos;Settings-&gt;Preferences-&gt;Window&apos; menu..
        /// </summary>
        public static string WelcomeScrollToOpenDescription2 {
            get {
                return ResourceManager.GetString("WelcomeScrollToOpenDescription2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;p align=&quot;center&quot;&gt;This way, MonkeyPaste can be accessed&lt;br&gt; &lt;span color=&quot;red&quot;&gt;without a click&lt;/span&gt; or even &lt;span color=&quot;red&quot;&gt;batting an eye&lt;/span&gt; &amp;#x1F440&lt;/p&gt;.
        /// </summary>
        public static string WelcomeScrollToOpenFakeWindowDetail {
            get {
                return ResourceManager.GetString("WelcomeScrollToOpenFakeWindowDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Easy Right?.
        /// </summary>
        public static string WelcomeScrollToOpenFakeWindowLabel {
            get {
                return ResourceManager.GetString("WelcomeScrollToOpenFakeWindowLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scroll Up Here!.
        /// </summary>
        public static string WelcomeScrollToOpenMarkerLabel {
            get {
                return ResourceManager.GetString("WelcomeScrollToOpenMarkerLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scroll-to-Open.
        /// </summary>
        public static string WelcomeScrollToOpenTitle {
            get {
                return ResourceManager.GetString("WelcomeScrollToOpenTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Try it out!.
        /// </summary>
        public static string WelcomeScrollToOpenTryButtonLabel {
            get {
                return ResourceManager.GetString("WelcomeScrollToOpenTryButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string WindowsStoreUnlimitedAddOnTesterNote {
            get {
                return ResourceManager.GetString("WindowsStoreUnlimitedAddOnTesterNote", resourceCulture);
            }
        }
    }
}
