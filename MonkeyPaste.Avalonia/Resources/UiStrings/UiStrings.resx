<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GestureProfileGlobal" xml:space="preserve">
    <value>All interop shortcuts (those useful outside of MonkeyPaste) are enabled by default. Pressing Caps Lock (without any other key) will show or hide the interface at anytime (not currently supported on Linux)</value>
  </data>
  <data name="GestureProfileInternal" xml:space="preserve">
    <value>No global shortcuts are enabled by default. </value>
  </data>
  <data name="ProductDescription" xml:space="preserve">
    <value>The clipboard is a jungle. You need the prowess of a primate to navigate the terrain and tap its true potential.</value>
  </data>
  <data name="Test" xml:space="preserve">
    <value>This is a test &lt;b color="green"&gt;test&lt;/b&gt; &lt;em color="red"&gt;&lt;b&gt;test&lt;/b&lt;/em&gt; &lt;a color="pink" href="https://www.google.com/"&gt;test&lt;/a&gt;</value>
  </data>
  <data name="WelcomeAccountCaption" xml:space="preserve">
    <value>No features are limited by subscription, only storage capacity and can be changed at anytime.</value>
  </data>
  <data name="WelcomeAccountDescription1" xml:space="preserve">
    <value>Restore your existing account...</value>
  </data>
  <data name="WelcomeAccountDescription2" xml:space="preserve">
    <value>Content and archive is limited to {0} and {1} clips respectively. No syncing capabilities are enabled.</value>
  </data>
  <data name="WelcomeAccountDescription3" xml:space="preserve">
    <value>{0}{1}/{0}{2} (monthly/annually) {4} Content is limited to {3} clips with an unlimited archive and syncing across all devices. </value>
  </data>
  <data name="WelcomeAccountDescription4" xml:space="preserve">
    <value>{0}{1}/{0}{2} (monthly/annually) {3} Unrestricted, unlimited storage (optimized for efficiency with millions of items) with syncing across all devices.</value>
  </data>
  <data name="WelcomeAccountLabel1" xml:space="preserve">
    <value>Restore</value>
  </data>
  <data name="WelcomeAccountLabel2" xml:space="preserve">
    <value>Free</value>
  </data>
  <data name="WelcomeAccountLabel3" xml:space="preserve">
    <value>Standard</value>
  </data>
  <data name="WelcomeAccountLabel4" xml:space="preserve">
    <value>Unlimited</value>
  </data>
  <data name="WelcomeAccountTitle" xml:space="preserve">
    <value>Subscription</value>
  </data>
  <data name="WelcomeDbPasswordCaption" xml:space="preserve">
    <value>Your privacy is important and clipboard data can be very personal. Storage is always encrypted but you can set a password that will be required in case your device is stolen or someone else is using your device.</value>
  </data>
  <data name="WelcomeDbPasswordTitle" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="WelcomeDragToOpenCaption" xml:space="preserve">
    <value>When enabled, dragging from any application to the top of the screen will reveal MonkeyPaste to easily drop content into MonkeyPaste.</value>
  </data>
  <data name="WelcomeDragToOpenDescription1" xml:space="preserve">
    <value>Enabling the 'lock' in the top left of the main window will still allow dropping into MonkeyPaste.</value>
  </data>
  <data name="WelcomeDragToOpenDescription2" xml:space="preserve">
    <value>More window preferences are available from the 'Settings-&gt;Preferences-&gt;Window' menu.</value>
  </data>
  <data name="WelcomeDragToOpenMarkerLabel" xml:space="preserve">
    <value>Drag Bananas Up Here!</value>
  </data>
  <data name="WelcomeDragToOpenTitle" xml:space="preserve">
    <value>Drag-to-Open</value>
  </data>
  <data name="WelcomeGestureProfileCaption" xml:space="preserve">
    <value>Keyboard shortcuts can be reviewed or changed at anytime from the 'Settings-&gt;Shortcuts' menu.</value>
  </data>
  <data name="WelcomeGestureProfileDescription1" xml:space="preserve">
    <value>All global shortcuts will be marked as local so you can configure them yourself later.</value>
  </data>
  <data name="WelcomeGestureProfileDescription2" xml:space="preserve">
    <value>MonkeyPaste's clipboard shortcuts will be available in all applications.</value>
  </data>
  <data name="WelcomeGestureProfileLabel1" xml:space="preserve">
    <value>Internal</value>
  </data>
  <data name="WelcomeGestureProfileLabel2" xml:space="preserve">
    <value>Global</value>
  </data>
  <data name="WelcomeGestureProfileTitle" xml:space="preserve">
    <value>Gesture Profile</value>
  </data>
  <data name="WelcomeGreetingCaption" xml:space="preserve">
    <value>Hey! Let's setup a few things to improve your overall experience with MonkeyPaste.</value>
  </data>
  <data name="WelcomeGreetingTitle" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="WelcomeLoginLoadCaption" xml:space="preserve">
    <value>To get the most use out of MonkeyPaste, loading automatically when you log in is a good idea. But, that's entirely up to you.</value>
  </data>
  <data name="WelcomeLoginLoadDescription1" xml:space="preserve">
    <value>Keep it casual.</value>
  </data>
  <data name="CommonEnableLabel" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="WelcomeLoginLoadTitle" xml:space="preserve">
    <value>Load On Login?</value>
  </data>
  <data name="WelcomeScrollToOpenCaption" xml:space="preserve">
    <value>When enabled, a scroll gesture at the top of the screen will reveal MonkeyPaste.</value>
  </data>
  <data name="WelcomeScrollToOpenDescription1" xml:space="preserve">
    <value>Left-clicking the taskbar icon will still open MonkeyPaste.</value>
  </data>
  <data name="WelcomeScrollToOpenDescription2" xml:space="preserve">
    <value>More window preferences are available from the 'Settings-&gt;Preferences-&gt;Window' menu.</value>
  </data>
  <data name="WelcomeScrollToOpenFakeWindowLabel" xml:space="preserve">
    <value>Easy Right?</value>
  </data>
  <data name="WelcomeScrollToOpenMarkerLabel" xml:space="preserve">
    <value>Scroll Up Here!</value>
  </data>
  <data name="WelcomeScrollToOpenTitle" xml:space="preserve">
    <value>Scroll-to-Open</value>
  </data>
  <data name="WelcomeDragToOpenFakeWindowDetail" xml:space="preserve">
    <value>&lt;p align="center"&gt;MonkeyPaste is &lt;span color="red&gt;fully integrated&lt;/span&gt; with Drag-and-Drop to and from the application.&lt;/p&gt;</value>
  </data>
  <data name="WelcomeDragToOpenFakeWindowLabel" xml:space="preserve">
    <value>Easy RIght?</value>
  </data>
  <data name="WelcomeScrollToOpenFakeWindowDetail" xml:space="preserve">
    <value>&lt;p align="center"&gt;This way, MonkeyPaste can be accessed&lt;br&gt; &lt;span color="red"&gt;without a click&lt;/span&gt; or even &lt;span color="red"&gt;batting an eye&lt;/span&gt; &amp;#x1F440&lt;/p&gt;</value>
  </data>
  <data name="WelcomeDragToOpenDragSourceLabel" xml:space="preserve">
    <value>Drag Me!</value>
  </data>
  <data name="WelcomeDragToOpenTryButtonLabel" xml:space="preserve">
    <value>Try it out!</value>
  </data>
  <data name="WelcomeScrollToOpenTryButtonLabel" xml:space="preserve">
    <value>Try it out!</value>
  </data>
  <data name="CommonEmptyListText" xml:space="preserve">
    <value>No results available.</value>
  </data>
  <data name="CommonNtfConfirmTitle" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="CommonRefreshTooltip" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="CommonSearchWatermark" xml:space="preserve">
    <value>Search...</value>
  </data>
  <data name="CommonSettingsTitle" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="PluginBrowserDependenciesLabel" xml:space="preserve">
    <value>Dependencies:</value>
  </data>
  <data name="PluginBrowserInstallLabel" xml:space="preserve">
    <value>Install</value>
  </data>
  <data name="PluginBrowserNtfUninstallMsg" xml:space="preserve">
    <value>Are you sure you want to remove '{0}' and all its presets and shortcuts?</value>
  </data>
  <data name="PluginBrowserUninstallLabel" xml:space="preserve">
    <value>Uninstall</value>
  </data>
  <data name="QueryTrayEmptyText" xml:space="preserve">
    <value> has no results.</value>
  </data>
  <data name="QueryTrayNoSelection" xml:space="preserve">
    <value>No selection.</value>
  </data>
  <data name="CommonNoneLabel" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="PluginBrowserCreditsLabel" xml:space="preserve">
    <value>Credits:</value>
  </data>
  <data name="PluginBrowserDescriptionLabel" xml:space="preserve">
    <value>Description:</value>
  </data>
  <data name="PluginBrowserDonateLabel" xml:space="preserve">
    <value>Donate:</value>
  </data>
  <data name="PluginBrowserLicenseLabel" xml:space="preserve">
    <value>License:</value>
  </data>
  <data name="PluginBrowserProjectUrlLabel" xml:space="preserve">
    <value>Project URL:</value>
  </data>
  <data name="PluginBrowserPublishedLabel" xml:space="preserve">
    <value>Published:</value>
  </data>
  <data name="PluginBrowserReadMeLabel" xml:space="preserve">
    <value>Read Me:</value>
  </data>
  <data name="PluginBrowserReportAbuseLabel" xml:space="preserve">
    <value>Report Abuse:</value>
  </data>
  <data name="PluginBrowserTagsLabel" xml:space="preserve">
    <value>Tags:</value>
  </data>
  <data name="PluginBrowserUpdateLabel" xml:space="preserve">
    <value>Update:</value>
  </data>
  <data name="PluginBrowserVersionLabel" xml:space="preserve">
    <value>Version:</value>
  </data>
  <data name="SearchCriteriaHeadePopoutTooltipText" xml:space="preserve">
    <value>Open in Window</value>
  </data>
  <data name="SearchCriteriaHeaderDismissButtonLabel" xml:space="preserve">
    <value>Dismiss</value>
  </data>
  <data name="SearchCriteriaHeadeRefreshTooltipText" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="CommonSaveLabel" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="AccountNextRemoveToolTipText" xml:space="preserve">
    <value>Next to delete! Upgrade to avoid 💪🏽</value>
  </data>
  <data name="AccountNextTrashToolTipText" xml:space="preserve">
    <value>Next to trash! Upgrade to avoid 💪🏽</value>
  </data>
  <data name="ClipTileDefTitleFilesPrefix" xml:space="preserve">
    <value>Files</value>
  </data>
  <data name="ClipTileDefTitleImagePrefix" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="ClipTileDefTitleTextPrefix" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="ClipTileDetailCreated" xml:space="preserve">
    <value>Copied {0}</value>
  </data>
  <data name="ClipTileDetailDimFiles" xml:space="preserve">
    <value>{0} files | {1} MBs</value>
  </data>
  <data name="ClipTileDetailDimImage" xml:space="preserve">
    <value>{0} x {1} px</value>
  </data>
  <data name="ClipTileDetailDimText" xml:space="preserve">
    <value>{0} chars | {1} lines</value>
  </data>
  <data name="ClipTileDetailUsage" xml:space="preserve">
    <value>{0} copies | {1} pastes</value>
  </data>
  <data name="ActionMoveLabel" xml:space="preserve">
    <value>Move</value>
  </data>
  <data name="CommonAddLabel" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="CommonCopyOpLabel" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="CommonCutOpLabel" xml:space="preserve">
    <value>Cut</value>
  </data>
  <data name="CommonPasteOpLabel" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="CommonTitledCopyTitleText" xml:space="preserve">
    <value>{0} Copy</value>
  </data>
  <data name="QueryTrayEmptyPendingTagName" xml:space="preserve">
    <value>Unnamed Filter</value>
  </data>
  <data name="SearchCriteriaDefaultOptionLabel" xml:space="preserve">
    <value>- Please Select -</value>
  </data>
  <data name="ClipboardPluginFormatsHeader" xml:space="preserve">
    <value>Formats</value>
  </data>
  <data name="ClipboardPluginFormatTypeReadersLabel" xml:space="preserve">
    <value>Readers</value>
  </data>
  <data name="ClipboardPluginFormatTypeWritersLabel" xml:space="preserve">
    <value>Writers</value>
  </data>
  <data name="ClipboardPluginHandlersHeader" xml:space="preserve">
    <value>Handlers</value>
  </data>
  <data name="CommonDeleteLabel" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="CommonDuplicateLabel" xml:space="preserve">
    <value>Duplicate</value>
  </data>
  <data name="CommonEditLabel" xml:space="preserve">
    <value>Edit Name</value>
  </data>
  <data name="CommonResetLabel" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="ClipTileTagContextMenuLabel" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="ShortcutDataGridActionHeader" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="ShortcutDataGridRoutingHeader" xml:space="preserve">
    <value>Routing</value>
  </data>
  <data name="ShortcutDataGridShortcutHeader" xml:space="preserve">
    <value>Shortcut</value>
  </data>
  <data name="ShortcutGestureRulesHint" xml:space="preserve">
    <value>Gestures must be unique and may only contain ONE input key (as opposed to a modifier key like Control,Shift,Alt,Meta/Win depending on platform)</value>
  </data>
  <data name="ShortcutRoutingProfileTypeHint" xml:space="preserve">
    <value>&lt;ul&gt;
	&lt;li&gt;
		&lt;b&gt;Internal&lt;/b&gt;All shortcuts are limited to within the application. This is not really an intended option but can allow to customize what shortcuts you intend to make global&lt;i&gt;someday&lt;/i&gt;.&lt;/li&gt;
	&lt;li&gt;
		&lt;b&gt;Global&lt;/b&gt;The default shortcut configuration where all global shortcuts are enabled. The&lt;b&gt;Show/Hide Main Window&lt;/b&gt;shortcut uses&lt;span color="red"&gt;override&lt;/span&gt;routing for the&lt;b&gt;Caps Lock&lt;/b&gt; key. You can change that routing or gesture at any time. But&lt;span color="green"&gt;give it a try&lt;/span&gt;
	&lt;/li&gt;
&lt;/ul&gt;</value>
  </data>
  <data name="ShortcutRoutingTypeHint" xml:space="preserve">
    <value>&lt;ul&gt;
	&lt;li&gt;
		&lt;b&gt;Internal&lt;/b&gt; In app shortcuts, are not globally enabled&lt;/li&gt;
	&lt;li&gt;
		&lt;b&gt;Direct&lt;/b&gt; Gesture will &lt;b&gt;
			&lt;i&gt;override&lt;/i&gt;
		&lt;/b&gt; the input, ie. it will &lt;b style="foreground: #FF0000"&gt;not&lt;/b&gt; be received by active application. &lt;/li&gt;
	&lt;li&gt;
		&lt;b&gt;Bubble&lt;/b&gt; Gesture will execute &lt;b&gt;
			&lt;i&gt;after&lt;/i&gt;
		&lt;/b&gt; active application &lt;/li&gt;
	&lt;li&gt;
		&lt;b&gt;Tunnel&lt;/b&gt; Gesture will execute &lt;b&gt;
			&lt;i&gt;before&lt;/i&gt;
		&lt;/b&gt; active application &lt;/li&gt;
&lt;/ul&gt;</value>
  </data>
  <data name="CommonDisableLabel" xml:space="preserve">
    <value>Disable</value>
  </data>
  <data name="WelcomeLoginLoadDescription2" xml:space="preserve">
    <value>Load up when this user account is logged in, not for other users.</value>
  </data>
  <data name="EditorTemplateContactHint" xml:space="preserve">
    <value>&lt;p&gt;Using available contacts (requires a fetcher plugin) this field will be used for all instances of this template across this document or in any it will be referenced in later.&lt;/p&gt;
&lt;p&gt; So for example if select email address here then the email field of the contact you select will be used for all instances in this document.&lt;/p&gt;</value>
  </data>
  <data name="EditorTemplateDateTimeCustomHint" xml:space="preserve">
    <value>&lt;p&gt;yy = short year&lt;/p&gt;
&lt;p&gt;yyyy = long year&lt;/p&gt;
&lt;p&gt;M = month (1-12)&lt;/p&gt;
&lt;p&gt;MM = month (01-12)&lt;/p&gt;
&lt;p&gt;MMM = month abbreviation (Jan, Feb ... Dec)&lt;/p&gt;
&lt;p&gt;MMMM = long month (January, February ... December)&lt;/p&gt;
&lt;p&gt;d = day (1 - 31)&lt;/p&gt;
&lt;p&gt;dd = day (01 - 31)&lt;/p&gt;
&lt;p&gt;ddd = day of the week in words (Monday, Tuesday ... Sunday)&lt;/p&gt;
&lt;p&gt;E = short day of the week in words (Mon, Tue ... Sun)&lt;/p&gt;
&lt;p&gt;D - Ordinal day (1st, 2nd, 3rd, 21st, 22nd, 23rd, 31st, 4th...)&lt;/p&gt;
&lt;p&gt;h = hour in am/pm (0-12)&lt;/p&gt;
&lt;p&gt;hh = hour in am/pm (00-12)&lt;/p&gt;
&lt;p&gt;H = hour in day (0-23)&lt;/p&gt;
&lt;p&gt;HH = hour in day (00-23)&lt;/p&gt;
&lt;p&gt;mm = minute&lt;/p&gt;
&lt;p&gt;ss = second&lt;/p&gt;
&lt;p&gt;SSS = milliseconds&lt;/p&gt;
&lt;p&gt;a = AM/PM marker&lt;/p&gt;
&lt;p&gt;p = a.m./p.m. marker&lt;/p&gt;</value>
  </data>
  <data name="EditorTemplateDateTimeHint" xml:space="preserve">
    <value>&lt;p&gt;The current date and/or time will be substituted for DateTime templates from moment they evaluated ie. pasted.&lt;/p&gt;
&lt;p&gt;The specified format is shared so changes here will update system-wide.&lt;/p&gt;</value>
  </data>
  <data name="EditorTemplateDynamicHint" xml:space="preserve">
    <value>&lt;p&gt;All occurances of this template will be set to the value you provide here&lt;/p&gt;</value>
  </data>
  <data name="EditorTemplateStaticHint" xml:space="preserve">
    <value>&lt;p&gt;The current date and/or time will be substituted for DateTime templates from moment they evaluated ie. pasted.&lt;/p&gt;
&lt;p&gt;The specified format is shared so changes here will update system-wide.&lt;/p&gt;</value>
  </data>
  <data name="EditorAppendCLoseLabel" xml:space="preserve">
    <value>Finish appending</value>
  </data>
  <data name="EditorAppendInlineModelLabel" xml:space="preserve">
    <value>Enable Paragraph</value>
  </data>
  <data name="EditorAppendLineModeLabel" xml:space="preserve">
    <value>Enable Inline</value>
  </data>
  <data name="EditorAppendManualModeLabel" xml:space="preserve">
    <value>Toggle manual</value>
  </data>
  <data name="EditorAppendNonManualModeLabel" xml:space="preserve">
    <value>Toggle manual</value>
  </data>
  <data name="EditorAppendPauseLabel" xml:space="preserve">
    <value>Pause appending to clipboard</value>
  </data>
  <data name="EditorAppendPostLabel" xml:space="preserve">
    <value>Toggle Before</value>
  </data>
  <data name="EditorAppendPreLabel" xml:space="preserve">
    <value>Toggle Before</value>
  </data>
  <data name="EditorAppendResumeLabel" xml:space="preserve">
    <value>Resume appending to clipboard</value>
  </data>
  <data name="EditorPasteButtonAppendBeginLabel" xml:space="preserve">
    <value>Append...</value>
  </data>
  <data name="EditorPasteButtonLabel" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="CommonPinItemLabel" xml:space="preserve">
    <value>Pin</value>
  </data>
  <data name="CommonUnpinItemLabel" xml:space="preserve">
    <value>Unpin</value>
  </data>
  <data name="NotificationOptionHideAllLabel" xml:space="preserve">
    <value>Hide all '{0}' notifications</value>
  </data>
  <data name="NotificationOptionHideLabel" xml:space="preserve">
    <value>Hide</value>
  </data>
  <data name="ClipTilePasteButtonDisabledTooltip" xml:space="preserve">
    <value>Last active app unknown. Switch to intended app to monkey paste.</value>
  </data>
  <data name="ClipTilePasteButtonTooltip" xml:space="preserve">
    <value>Paste to: &lt;em&gt;&lt;i class="paste-tooltip-suffix"&gt;{0}&lt;/i&gt;&lt;/em&gt;</value>
  </data>
  <data name="CommonMinimizeWindowLabel" xml:space="preserve">
    <value>Minimize</value>
  </data>
  <data name="EditorCommonBusyLabel" xml:space="preserve">
    <value>Please wait...</value>
  </data>
  <data name="MainWindowTitleLockLabel" xml:space="preserve">
    <value>Lock</value>
  </data>
</root>