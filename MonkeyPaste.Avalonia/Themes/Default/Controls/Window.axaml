<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="using:MonkeyPaste.Avalonia"
        xmlns:pcl="using:MonkeyPaste">
    <Styles.Resources>
        <sys:Double x:Key="DefaultNotificationWidth">350</sys:Double>
        <sys:Double x:Key="DefaultNotificationHeight">150</sys:Double>
    </Styles.Resources>

    <Style Selector=":is(Window).movable">
        <Setter Property="local:MpAvMoveWindowExtension.IsEnabled"
                Value="True" />
        <Setter Property="local:MpAvMoveWindowExtension.IsUserMoving"
                Value="{Binding IsUserMoving, Mode=TwoWay}" />
    </Style>

    <Style Selector=":is(Window).toast, :is(Window).anchored">
        <Setter Property="WindowStartupLocation"
                Value="Manual" />

        <!--<Setter Property="local:MpAvWindowPositionExtension.IsEnabled"
                Value="True" />
        <Setter Property="local:MpAvWindowPositionExtension.WindowPosition"
                Value="{Binding WindowPosition, Mode=TwoWay}" />-->
    </Style>
    <Style Selector=":is(Window).modal:not(.anchored)">
        <Setter Property="WindowStartupLocation"
                Value="CenterScreen" />
    </Style>
    <Style Selector=":is(Window).modal.owned:not(.anchored)">
        <Setter Property="WindowStartupLocation"
                Value="CenterOwner" />
    </Style>

    <Style Selector=":is(Window).resizable">
        <Setter Property="CanResize"
                Value="True" />
    </Style>
    <Style Selector=":is(Window).notificationWindow:not(.resizable)">
        <Setter Property="CanResize"
                Value="False" />

    </Style>
    <Style Selector=":is(Window).notificationWindow:not(.welcome)"
           x:DataType="local:MpAvNotificationViewModelBase">
        <Setter Property="local:MpAvSizeObserverExtension.IsEnabled"
                Value="True" />
        <Setter Property="local:MpAvSizeObserverExtension.ObservedWidth"
                Value="{Binding WindowWidth, Mode=TwoWay}" />
        <Setter Property="local:MpAvSizeObserverExtension.ObservedHeight"
                Value="{Binding WindowHeight, Mode=TwoWay}" />
        <Setter Property="IsVisible"
                Value="{Binding IsVisible}" />
        <Setter Property="Title"
                Value="{Binding Title, Converter={x:Static local:MpAvStringToWindowTitleConverter.Instance}}" />
        <Setter Property="ShowInTaskbar"
                Value="False" />
        <Setter Property="ShowActivated"
                Value="False" />
        <Setter Property="MinHeight"
                Value="50" />
        <Setter Property="Width"
                Value="{StaticResource DefaultNotificationWidth}" />
        <Setter Property="Height"
                Value="{StaticResource DefaultNotificationHeight}" />
        <Setter Property="SizeToContent"
                Value="Height" />
        <Setter Property="WindowState"
                Value="Normal" />
        <Setter Property="Topmost"
                Value="True" />
        <Setter Property="ExtendClientAreaToDecorationsHint"
                Value="False" />
        <Setter Property="SystemDecorations"
                Value="None" />
        <Setter Property="TransparencyLevelHint"
                Value="Transparent" />
        <Setter Property="Background"
                Value="Transparent" />
    </Style>

    <Style Selector=":is(Window).notificationWindow.loader">
        <Setter Property="ShowInTaskbar"
                Value="True" />
        <Setter Property="ShowActivated"
                Value="True" />
    </Style>
    <Style Selector=":is(Window).notificationWindow.loader local|MpAvClipBorder#OuterBorder">
        <!--<Setter Property="Width"
                Value="350" />
        <Setter Property="Height"
                Value="140" />-->
    </Style>

    <Style Selector=":is(Window).notificationWindow.welcome"
           x:DataType="local:MpAvWelcomeNotificationViewModel">
        <Setter Property="IsHitTestVisible"
                Value="{Binding !IsFinishing}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="SizeToContent"
                Value="Manual" />
        <Setter Property="SystemDecorations"
                Value="None" />
        <Setter Property="WindowStartupLocation"
                Value="CenterScreen" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="Width"
                Value="1000" />
        <Setter Property="Height"
                Value="650" />
    </Style>

</Styles>
