<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="using:MonkeyPaste.Avalonia"
        xmlns:pcl="using:MonkeyPaste">
    <!--  USER ACTION BUTTONS  -->
    <Style Selector="Window.notificationWindow Button:not(.optionsButton)">
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Top" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="CornerRadius"
                Value="3" />
        <Setter Property="BorderThickness"
                Value="2" />
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="Margin"
                Value="5" />
        <Setter Property="Background"
                Value="Silver" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource ThemeGrayAccent1}" />
        <Setter Property="Foreground"
                Value="{DynamicResource ThemeInteractiveBgColor}" />
        <Setter Property="FontWeight"
                Value="SemiBold" />
        <Setter Property="MinWidth"
                Value="50" />
        <Setter Property="MaxWidth"
                Value="100" />
    </Style>

    <Style Selector="Window.notificationWindow Button:not(.optionsButton):pointerover /template/ ContentPresenter">
        <Setter Property="Background"
                Value="{DynamicResource ThemeGrayAccent1}" />
    </Style>
    <Style Selector="Window.userActionNotificationWindow Button:not(.optionsButton):pointerover">
        <Setter Property="BorderBrush"
                Value="{DynamicResource HoverDefaultBorderBrush}" />
        <Setter Property="Background"
                Value="{DynamicResource ThemeGrayAccent4}" />
    </Style>
  
    <!--  NTF OUTER BORDER  -->

    <Style Selector="Window.notificationWindow > Border">
        <Setter Property="CornerRadius"
                Value="5" />
    </Style>

    <!--  NTF FADE IN/OUT  -->

    <Style Selector="Window.fadeIn[IsVisible=false] > :is(Control)">
        <!--  NOTE this is to avoid flicker on show so its initially transparent  -->
        <Setter Property="Opacity"
                Value="0" />
    </Style>
    <Style Selector="Window.msg[IsVisible=true]"
           x:DataType="pcl:MpMessageNotificationViewModel">
        <Style.Animations>
            <Animation Duration="0:0:0.4"
                       FillMode="Forward">
                <KeyFrame Cue="0%">
                    <Setter Property="TranslateTransform.X"
                            Value="360" />
                </KeyFrame>
                <KeyFrame Cue="100%">
                    <Setter Property="TranslateTransform.X"
                            Value="0" />
                </KeyFrame>
            </Animation>
        </Style.Animations>
    </Style>

    <Style Selector="Window.fadeIn[IsVisible=true] > :is(Control)">
        <Style.Animations>
            <Animation Duration="0:0:0.4"
                       FillMode="Forward">
                <KeyFrame Cue="0%">
                    <Setter Property="Opacity"
                            Value="0" />
                </KeyFrame>
                <KeyFrame Cue="100%">
                    <Setter Property="Opacity"
                            Value="1" />
                </KeyFrame>
            </Animation>
        </Style.Animations>
    </Style>
    <Style Selector="Window.fadeOut.IsClosing > :is(Control)">
        <Style.Animations>
            <Animation Duration="0:0:0.4"
                       FillMode="Forward">
                <KeyFrame Cue="0%">
                    <Setter Property="Opacity"
                            Value="1" />
                </KeyFrame>
                <KeyFrame Cue="100%">
                    <Setter Property="Opacity"
                            Value="0" />
                </KeyFrame>
            </Animation>
        </Style.Animations>
    </Style>
    <Style Selector="Window.notificationWindow.IsClosing">
        <Style.Animations>
            <Animation Duration="0:0:1.4"
                       FillMode="Forward">
                <KeyFrame Cue="100%">
                    <Setter Property="IsVisible"
                            Value="False" />
                </KeyFrame>
            </Animation>
        </Style.Animations>
    </Style>
</Styles>
