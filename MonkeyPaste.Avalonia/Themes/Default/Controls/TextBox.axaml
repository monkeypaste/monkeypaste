<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="using:MonkeyPaste.Avalonia">
    <Styles.Resources>
        <Thickness x:Key="TextControlThemePadding">0,0,0,0</Thickness>
        <Thickness x:Key="TextControlBorderThemeThicknessFocused">0,0,0,0</Thickness>
        <sys:Double x:Key="TextControlThemeMinHeight">0</sys:Double>

    </Styles.Resources>


    <Style Selector=":is(TextBox)">
        <Setter Property="FlowDirection"
                Value="LeftToRight" />
    </Style>
    <Style Selector=":is(Window).rtl :is(TextBox)">
        <Setter Property="FlowDirection"
                Value="RightToLeft" />
    </Style>
    <Style Selector="AutoCompleteBox">
        <Setter Property="FlowDirection"
                Value="LeftToRight" />
    </Style>
    <Style Selector=":is(Window).rtl AutoCompleteBox">
        <Setter Property="FlowDirection"
                Value="RightToLeft" />
    </Style>
    <Style Selector=":is(TextBox)[IsReadOnly=false]:not(.fontFamilyOverride)">
        <Setter Property="FontFamily"
                Value="{Binding Source={DynamicResource DefaultEditableFontFamily}, Converter={x:Static local:MpAvStringToFontFamilyConverter.Instance}}" />
    </Style>
    <Style Selector=":is(TextBox)[IsReadOnly=true]:not(.fontFamilyOverride)">
        <Setter Property="FontFamily"
                Value="{Binding Source={DynamicResource DefaultReadOnlyFontFamily}, Converter={x:Static local:MpAvStringToFontFamilyConverter.Instance}}" />
    </Style>
    <Style Selector=":is(TextBox):not(.custom), :is(TextBox):not(.custom):focus">
        <Setter Property="Background"
                Value="{DynamicResource ThemeInteractiveBgBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource ThemeInteractiveBrush}" />
    </Style>
    <Style Selector="TextBox:not(.custom),TextBox:not(.custom):focus">
        <Setter Property="Background"
                Value="{DynamicResource ThemeInteractiveBgBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource ThemeInteractiveBrush}" />
    </Style>

    <Style Selector="TextBox.dnd, :is(AutoCompleteBox).dnd">
        <Setter Property="local:MpAvDropExtension.IsEnabled"
                Value="True" />
        <Setter Property="local:MpAvDropExtension.SourceType"
                Value="NonContentDrop" />
        <Setter Property="local:MpAvTextControlDragExtension.IsEnabled"
                Value="True" />
    </Style>

    <Style Selector=":is(TextBox).password">
        <Setter Property="AcceptsTab"
                Value="False" />
        <Setter Property="AcceptsReturn"
                Value="False" />
        <Setter Property="PasswordChar"
                Value="â€¢" />
        <Setter Property="local:MpAvSecureTextBoxExtension.IsEnabled"
                Value="True" />
    </Style>

    <!--  DARK PASSWORD BUTTON  -->
    <Style Selector=":is(Window).dark TextBox.revealPasswordButton">
        <Style.Resources>
            <SolidColorBrush x:Key="TextControlButtonBackground">Transparent</SolidColorBrush>
            <SolidColorBrush x:Key="TextControlButtonBackgroundPointerOver">Transparent</SolidColorBrush>
            <SolidColorBrush x:Key="TextControlButtonBackgroundPressed">Transparent</SolidColorBrush>
        </Style.Resources>
    </Style>
</Styles>
