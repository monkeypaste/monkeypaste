<local:MpAvUserControl x:Class="MonkeyPaste.Avalonia.MpAvSearchCriteriaItemView"
                       xmlns="https://github.com/avaloniaui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       x:TypeArguments="local:MpAvSearchCriteriaItemViewModel"
                       xmlns:local="using:MonkeyPaste.Avalonia"
                       xmlns:pcl="using:MonkeyPaste"
                       x:DataType="local:MpAvSearchCriteriaItemViewModel"
                       x:CompileBindings="True"
                       mc:Ignorable="d"
                       d:DesignHeight="50"
                       d:DesignWidth="800">
    <local:MpAvUserControl.Styles>
        
        <Style Selector="ListBox :is(Control).addRemoveBtn">
            <Setter Property="IsVisible"
                    Value="False" />
        </Style>
        <Style Selector="ListBox:pointerover :is(Control).addRemoveBtn">
            <Setter Property="IsVisible"
                    Value="True" />
        </Style>
        <Style Selector="Button.addRemoveBtn">
            <Setter Property="Margin"
                    Value="10" />
            <Setter Property="Width"
                    Value="25" />
            <Setter Property="Height"
                    Value="25" />
            <Setter Property="BorderThickness"
                    Value="2" />
        </Style>

        <Style Selector="Button.addRemoveBtn Border">
            <Setter Property="BorderThickness"
                    Value="2" />
            <Setter Property="BorderBrush"
                    Value="DimGray" />
            <Setter Property="CornerRadius"
                    Value="2" />
        </Style>
        <Style Selector="Button.addRemoveBtn:pointerover Border">
            <Setter Property="BorderBrush"
                    Value="LightGray" />
        </Style>
        <Style Selector="Button.addRemoveBtn Image">
            <Setter Property="Stretch"
                    Value="Fill" />
        </Style>
        <Style Selector="Button#CriteriaDragButton Image">
            <Setter Property="Source"
                    Value="{Binding Source={StaticResource DragImage}, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}, ConverterParameter=white}" />
        </Style>
        <Style Selector="Button#CriteriaDragButton:pointerover Image">
            <Setter Property="Source"
                    Value="{Binding Source={StaticResource DragImage}, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}, ConverterParameter=yellow}" />
        </Style>
        <Style Selector="Button#CriteriaDragButton:pressed Image">
            <Setter Property="Source"
                    Value="{Binding Source={StaticResource DragImage}, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}, ConverterParameter=dimgray}" />
        </Style>

    </local:MpAvUserControl.Styles>
    <DockPanel LastChildFill="True">
        <Button x:Name="CriteriaDragButton"
                DockPanel.Dock="Left"
                Classes="noBg noHoverBg"
                Cursor="SizeAll"
                Margin="15,0,15,0"
                Width="25"
                Height="25">
            <Image Classes="shakeOver">
                <Image.RenderTransform>
                    <RotateTransform />
                </Image.RenderTransform>
            </Image>
        </Button>
        <StackPanel Orientation="Horizontal"
                    DockPanel.Dock="Right">

            <!--  REMOVE ITEM BUTTON  -->

            <Button x:Name="RemoveCriteriaItemButton"
                    Classes="noBg noHoverBg shakeOver addRemoveBtn"
                    Margin="0,10,5,10"
                    Command="{Binding RemoveThisCriteriaItemCommand}">
                <Button.RenderTransform>
                    <RotateTransform />
                </Button.RenderTransform>
                <Border>
                    <Image Source="{Binding ., Source={StaticResource MinusImage}, Converter={StaticResource IconSourceObjToBitmapConverter}}" />
                </Border>
            </Button>

            <!--  ADD ITEM BUTTON  -->

            <Button x:Name="AddCriteriaItemButton"
                    Classes="noBg noHoverBg shakeOver addRemoveBtn"
                    Margin="0,10,10,10"
                    Command="{Binding AddNextCriteriaItemCommand}">
                <Button.RenderTransform>
                    <RotateTransform />
                </Button.RenderTransform>
                <Border>
                    <Image Source="{Binding ., Source={StaticResource PlusImage}, Converter={StaticResource IconSourceObjToBitmapConverter}}" />
                </Border>
            </Button>

            <!--  SPECIAL ADD POPUP  -->
            <local:MpAvOptionsButton VerticalAlignment="Stretch"
                                     Classes="addRemoveBtn"
                                     Margin="0,10,5,10"
                                     Command="{Binding AddNextCriteriaItemCommand}"
                                     CommandParameter="Boolean" />
        </StackPanel>

        <ListBox Background="Transparent"
                 Classes="optionsList"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 ScrollViewer.VerticalScrollBarVisibility="Disabled"
                 BorderThickness="0"
                 Items="{Binding Items}">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemTemplate>
                <DataTemplate DataType="local:MpAvSearchCriteriaOptionViewModel">
                    <local:MpAvSearchCriteriaOptionView DataContext="{Binding}"
                                                        local:MpAvIsHoveringExtension.IsEnabled="True"
                                                        local:MpAvIsHoveringExtension.IsHovering="{Binding IsHovering, Mode=TwoWay}" />
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </DockPanel>
</local:MpAvUserControl>
