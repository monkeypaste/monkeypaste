<local:MpAvUserControl x:Class="MonkeyPaste.Avalonia.MpAvSearchCriteriaOptionView"
                       xmlns="https://github.com/avaloniaui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:local="using:MonkeyPaste.Avalonia"
                       x:TypeArguments="local:MpAvSearchCriteriaOptionViewModel"
                       mc:Ignorable="d"
                       d:DesignHeight="450"
                       d:DesignWidth="800">
    <local:MpAvUserControl.Styles>
        <Style Selector="StackPanel.compositeTextBoxContainer TextBox">
            <Setter Property="MinWidth"
                    Value="50" />
            <Setter Property="Margin"
                    Value="1" />
        </Style>
        <Style Selector="StackPanel.compositeTextBoxContainer Label">
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="FontWeight"
                    Value="SemiBold" />
        </Style>
    </local:MpAvUserControl.Styles>
    <ContentControl x:Name="CriteriaOptionContentControl"
                    Margin="0,3"
                    Content="{Binding}">
        <ContentControl.DataTemplates>
            <local:MpAvSearchCriteriaOptionViewSelector>
                <!--  ENUMERABLE COMBOBOX  -->
                <DataTemplate x:Key="EnumerableOptionTemplate"
                              DataType="local:MpAvSearchCriteriaOptionViewModel">
                    <ComboBox IsDropDownOpen="{Binding IsDropDownOpen}"
                              Items="{Binding Items}"
                              Classes="criteriaComboBox"
                              SelectedIndex="{Binding SelectedItemIdx, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Label}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </DataTemplate>
                <!--  TEXTBOX  -->
                <DataTemplate x:Key="TextOptionTemplate"
                              DataType="local:MpAvSearchCriteriaOptionViewModel">
                    <DockPanel LastChildFill="True">

                        <!--  TEXT OPTIONS PANEL  -->

                        <StackPanel Orientation="Horizontal"
                                    DockPanel.Dock="Right">
                            <!--  UNIT LABEL  -->
                            <Label IsVisible="{Binding UnitLabel, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}"
                                   Content="{Binding UnitLabel}"
                                   FontSize="10"
                                   VerticalAlignment="Center" />

                            <!--  CASE SENSITIVE CHECKBOX  -->
                            <CheckBox IsChecked="{Binding IsChecked, Mode=TwoWay}"
                                      IsVisible="{Binding IsCheckable}"
                                      Content="Case Sensitive" />
                            <!--  WHOLE WORD CHECKBOX  -->
                            <CheckBox IsChecked="{Binding IsChecked2, Mode=TwoWay}"
                                      IsVisible="{Binding IsCheckable}"
                                      Content="Whole Word" />

                            <!--  Color picker  -->
                            <Button x:Name="ColorPickerButton"
                                    DockPanel.Dock="Right"
                                    IsVisible="{Binding IsColorOption}"
                                    Command="{Binding ShowColorPickerCommand}"
                                    CommandParameter="{Binding $self}"
                                    Margin="5,0,0,0">
                                <Image Width="15"
                                       Height="15"
                                       Source="{Binding Source={StaticResource ColorsImage}, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
                            </Button>

                        </StackPanel>


                        <!--  TEXTBOX BORDER  -->

                        <TextBox x:Name="MatchValueTextBox"
                                 Watermark="{Binding Label, StringFormat='\{0\}...'}"
                                 Classes.valid="{Binding IsValid}"
                                 local:MpAvTextControlDropExtension.IsEnabled="True"
                                 local:MpAvTextControlDropExtension.IsDragOverHandled="True"
                                 local:MpAvDelayedTextChangedExtension.IsEnabled="True"
                                 local:MpAvDelayedTextChangedExtension.DelayMs="500"
                                 local:MpAvDelayedTextChangedExtension.Text="{Binding Value, Mode=TwoWay}" />
                    </DockPanel>
                </DataTemplate>

                <!--  RGBA CHANNELS  -->

                <DataTemplate x:Key="RGBAOptionTemplate"
                              DataType="local:MpAvSearchCriteriaOptionViewModel">
                    <StackPanel Orientation="Horizontal"
                                Classes="compositeTextBoxContainer">

                        <StackPanel Orientation="Horizontal">
                            <Label Content="A" />
                            <TextBox Classes.valid="{Binding IsValid1}"
                                     local:MpAvTextControlDropExtension.IsEnabled="True"
                                     local:MpAvTextControlDropExtension.IsDragOverHandled="True"
                                     Text="{Binding Value4, Mode=TwoWay}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="R" />
                            <TextBox Classes.valid="{Binding IsValid2}"
                                     local:MpAvTextControlDropExtension.IsEnabled="True"
                                     local:MpAvTextControlDropExtension.IsDragOverHandled="True"
                                     Text="{Binding Value1, Mode=TwoWay}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="G" />
                            <TextBox Classes.valid="{Binding IsValid3}"
                                     local:MpAvTextControlDropExtension.IsEnabled="True"
                                     local:MpAvTextControlDropExtension.IsDragOverHandled="True"
                                     Text="{Binding Value2, Mode=TwoWay}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="B" />
                            <TextBox Classes.valid="{Binding IsValid4}"
                                     local:MpAvTextControlDropExtension.IsEnabled="True"
                                     local:MpAvTextControlDropExtension.IsDragOverHandled="True"
                                     Text="{Binding Value3, Mode=TwoWay}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <!--  Color picker  -->
                            <Button x:Name="ColorPickerButton"
                                    Command="{Binding ShowColorPickerCommand}"
                                    CommandParameter="{Binding $self}"
                                    Margin="5,0,0,0">
                                <Image Width="15"
                                       Height="15"
                                       Source="{Binding Source={StaticResource ColorsImage}, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </DataTemplate>

                <!--  DISTANCE SLIDER  -->
                <DataTemplate x:Key="UnitDecimalOptionTemplate"
                              DataType="local:MpAvSearchCriteriaOptionViewModel">
                    <DockPanel>
                        <StackPanel Orientation="Horizontal"
                                    DockPanel.Dock="Left"
                                    Margin="7,0,5,0">
                            <Label Content="Threshold"
                                   FontWeight="SemiBold"
                                   VerticalAlignment="Center" />
                            <local:MpAvToolTipInfoHintView ToolTipText="Thresholds above 0 will provide fuzzy color matching using Euclidean distance in the RGBA colorspace. For example, if red (#FF0000) is the search term and black (#000000) is a pixel in an image then the color distance will be 255. Black to white distance is the maximum possible at 510, including an alpha channel" />

                        </StackPanel>

                        <Label Content="{Binding SliderValue, StringFormat='\{0\} (∆E)'}"
                               DockPanel.Dock="Right"
                               FontWeight="SemiBold"
                               VerticalAlignment="Center" />
                        <local:MpAvSliderParameterView Width="100"
                                                       Height="30"
                                                       Background="Silver"
                                                       IsSliding="{Binding IsValueChanging, Mode=TwoWay}" />
                        <!--<TextBox Classes.valid="{Binding IsValid}"
                                 local:MpAvTextControlDropExtension.IsEnabled="True"
                                 local:MpAvTextControlDropExtension.IsDragOverHandled="True"
                                 Text="{Binding Value, Mode=TwoWay}" />-->
                        <!--<Slider x:Name="DistanceSlider"
                                Value="{Binding SliderValue, Mode=TwoWay}"
                                Minimum="0"
                                Maximum="255"
                                Width="150">
                            <Slider.Styles>
                                <Style Selector="Slider /template/ Thumb">
                                    <Setter Property="ToolTip.Tip"
                                            Value="{Binding $parent[Slider].Value, Mode=OneWay, StringFormat='Value \{0:f\}'}" />
                                    <Setter Property="ToolTip.Placement"
                                            Value="Top" />
                                    <Setter Property="ToolTip.VerticalOffset"
                                            Value="-10" />
                                    <Setter Property="ToolTip.HorizontalOffset"
                                            Value="-30" />
                                </Style>
                            </Slider.Styles>
                        </Slider>-->
                    </DockPanel>
                </DataTemplate>

                <!--  DATE PICKER  -->

                <DataTemplate x:Key="DateOptionTemplate"
                              DataType="local:MpAvSearchCriteriaOptionViewModel">
                    <DatePicker Width="300"
                                Margin="5,0,0,0"
                                SelectedDate="{Binding Value, Converter={x:Static local:MpAvStringToDateTimeOffsetConverter.Instance}, Mode=TwoWay}" />
                </DataTemplate>
                <DataTemplate x:Key="EmptyOption"
                              DataType="local:MpAvSearchCriteriaOptionViewModel" />
            </local:MpAvSearchCriteriaOptionViewSelector>
        </ContentControl.DataTemplates>
    </ContentControl>
</local:MpAvUserControl>
