<local:MpAvUserControl xmlns="https://github.com/avaloniaui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:sys="clr-namespace:System;assembly=mscorlib"
                       xmlns:av="clr-namespace:TheArtOfDev.HtmlRenderer.Avalonia;assembly=Avalonia.HtmlRenderer"
                       xmlns:local="using:MonkeyPaste.Avalonia"
                       xmlns:pcl="using:MonkeyPaste"
                       x:Name="ClipTileContentViewRoot"
                       x:DataType="local:MpAvClipTileViewModel"
                       x:TypeArguments="local:MpAvClipTileViewModel"
                       x:CompileBindings="True"
                       mc:Ignorable="d"
                       d:DesignWidth="800"
                       d:DesignHeight="450"
                       x:Class="MonkeyPaste.Avalonia.MpAvCompositeContentView">
    <local:MpAvUserControl.Styles>

        <!--  PASTE TOOLBAR TRANSITIONS  -->

        <Style Selector="local|MpAvPasteToolbarView">
            <Setter Property="Transitions">
                <Transitions>
                    <ThicknessTransition Property="Margin"
                                         Duration="0:0:0.2" />
                </Transitions>
            </Setter>
        </Style>
        <!--  PASTE TOOLBAR SHOW/HIDE (needs anim class to animate)  -->
        <Style Selector="local|MpAvPasteToolbarView:not(.anim)">
            <Setter Property="IsVisible"
                    Value="False" />
        </Style>
        <Style Selector="local|MpAvPasteToolbarView:not(.anim).show">
            <Setter Property="IsVisible"
                    Value="True" />
        </Style>
        <Style Selector="local|MpAvPasteToolbarView.anim"
               x:DataType="local:MpAvClipTileViewModel">
            <Setter Property="Margin"
                    Value="0,120,0,0" />
            <Setter Property="IsVisible"
                    Value="{Binding !IsDropOverTile}" />
        </Style>
        <Style Selector="local|MpAvPasteToolbarView.anim.show">
            <Setter Property="Margin"
                    Value="0,0,0,0" />
        </Style>

        <!--  PLAIN CONTENT VIEWS  -->
        <Style Selector=":is(Control).content-view">
            <Setter Property="Grid.RowSpan"
                    Value="1" />
        </Style>

        <!--  READ ONLY / WEBVIEW OPACITY TOGGLE  -->
        <Style Selector=":is(Control).content-view:not(.always-show):not(.active)">
            <Setter Property="IsVisible"
                    Value="False" />
        </Style>
        <!--<Style Selector="Grid#CompositeContainer.show-read-only :is(Control).content-view.read-only.active">
            <Setter Property="IsVisible"
                    Value="True" />
        </Style>-->
        <Style Selector="Grid#CompositeContainer:not(.anim) :is(Control).content-view.always-show">
            <Setter Property="Width"
                    Value="{Binding $parent[Grid].Bounds.Width}" />
            <Setter Property="Height"
                    Value="{Binding $parent[Grid].Bounds.Height}" />
        </Style>
        <Style Selector="Grid#CompositeContainer.show-read-only :is(Control).content-view.active.always-show">
            <Setter Property="Width"
                    Value="0" />
            <Setter Property="Height"
                    Value="0" />
        </Style>
        <!--<Style Selector="Grid#CompositeContainer.show-read-only :is(Control).content-view.active, Grid#CompositeContainer.anim :is(Control).content-view.active">
            <Setter Property="IsVisible"
                    Value="True" />
        </Style>-->
        <!--<Style Selector="Grid#CompositeContainer local|MpAvContentWebViewContainer#EditableWebView">
            <Setter Property="Width"
                    Value="{StaticResource NaN}" />
            <Setter Property="Height"
                    Value="{StaticResource NaN}" />
        </Style>
        <Style Selector="Grid#CompositeContainer.show-read-only local|MpAvContentWebViewContainer#EditableWebView, Grid#CompositeContainer.anim local|MpAvContentWebViewContainer#EditableWebView">
            <Setter Property="Width"
                    Value="0" />
            <Setter Property="Height"
                    Value="0" />
        </Style>-->

        <!--  RO/RW BEHAVIOR ATTACHMENT  -->
        <Style Selector="Grid#CompositeContainer local|MpAvContentWebView">
            <Setter Property="Interaction.Behaviors">
                <Setter.Value>
                    <BehaviorCollection>
                        <local:MpAvContentWebViewHighlightBehavior />
                    </BehaviorCollection>
                </Setter.Value>
            </Setter>
        </Style>
        <Style Selector="Grid#CompositeContainer.show-read-only local|MpAvContentWebView">
            <Setter Property="Interaction.Behaviors"
                    Value="{x:Null}" />
        </Style>
        <Style Selector="Grid#CompositeContainer.show-read-only local|MpAvHtmlPanel">
            <Setter Property="Interaction.Behaviors">
                <Setter.Value>
                    <BehaviorCollection>
                        <local:MpAvReadOnlyWebViewHighlightBehavior />
                    </BehaviorCollection>
                </Setter.Value>
            </Setter>
        </Style>
    </local:MpAvUserControl.Styles>
    <Grid x:Name="CompositeContainer"
          Classes.mobile="{Binding IsMobileOrWindowed, Source={x:Static local:MpAvThemeViewModel.Instance}}"
          Classes.anim="{Binding IsAnimating}"
          RowDefinitions="*,Auto">
        <Classes.show-read-only>
            <MultiBinding Converter="{x:Static BoolConverters.And}">
                <Binding Path="IsContentReadOnly" />
                <Binding Path="!IsWindowOpen" />
                <Binding Path="!IsDropOverTile" />
            </MultiBinding>
        </Classes.show-read-only>

        <!--  READ ONLY WEBVIEW  -->

        <local:MpAvHtmlPanel x:Name="ReadOnlyWebView"
                             Classes="content-zoom content-view read-only"
                             HorizontalAlignment="Stretch"
                             VerticalAlignment="Stretch"
                             Margin="5"
                             IsContextMenuEnabled="False"
                             Classes.active="{Binding CopyItemType, ConverterParameter=Text, Converter={x:Static local:MpAvEnumToBoolConverter.Instance}}"
                             local:MpAvDropExtension.IsEnabled="True"
                             local:MpAvDropExtension.DragEnterCommand="{Binding DragEnterCommand}"
                             local:MpAvDropExtension.DragLeaveCommand="{Binding DragLeaveCommand}"
                             local:MpAvDropExtension.IsDragOverHandled="False"
                             local:MpAvDropExtension.IsDropHandled="False"
                             local:MpAvHighlightTextExtension.IsEnabled="False"
                             local:MpAvHighlightTextExtension.HighlightRanges="{Binding HighlightRanges}"
                             local:MpAvHighlightTextExtension.ActiveHighlightIdx="{Binding ActiveHighlightIdx}"
                             local:MpAvHtmlStylerExtension.IsEnabled="True"
                             local:MpAvHtmlStylerExtension.WrapText="{Binding IsWrappingEnabled}"
                             local:MpAvHtmlStylerExtension.SyntaxThemeName="{Binding SelectedSyntaxTheme, Source={x:Static local:MpAvPrefViewModel.Instance}}"
                             local:MpAvHtmlStylerExtension.HtmlStyleType="Content"
                             local:MpAvHtmlStylerExtension.DefaultFontSize="{Binding DefaultFontSize, Source={x:Static local:MpAvPrefViewModel.Instance}}"
                             local:MpAvHtmlStylerExtension.DefaultFontFamily="{Binding DefaultEditableFontFamily, Source={x:Static local:MpAvPrefViewModel.Instance}}"
                             local:MpAvHtmlStylerExtension.ShowUnderlines="{Binding IsSubSelectionEnabled}"
                             CanScrollX="{Binding CanScrollX, Mode=TwoWay}"
                             CanScrollY="{Binding CanScrollY, Mode=TwoWay}"
                             Text="{Binding CopyItemData}">
            <local:MpAvHtmlPanel.IsSelectionEnabled>
                <MultiBinding Converter="{x:Static BoolConverters.Or}">
                    <Binding Path="IsSubSelectionEnabled" />
                    <Binding Path="HasText"
                             Source="{x:Static local:MpAvSearchBoxViewModel.Instance}" />
                </MultiBinding>
            </local:MpAvHtmlPanel.IsSelectionEnabled>
        </local:MpAvHtmlPanel>

        <!--  IMAGE VIEW  -->

        <local:MpAvImageContentView x:Name="ImageViewer"
                                    Classes="content-zoom content-view read-only"
                                    Classes.active="{Binding CopyItemType, ConverterParameter=Image, Converter={x:Static local:MpAvEnumToBoolConverter.Instance}}">
        </local:MpAvImageContentView>

        <!--  FILE-LIST VIEW  -->

        <local:MpAvFileListContentView x:Name="FileListViewer"
                                       Classes="content-zoom content-view read-only"
                                       Classes.active="{Binding CopyItemType, ConverterParameter=FileList, Converter={x:Static local:MpAvEnumToBoolConverter.Instance}}" />

        <!--  EDITABLE PLAIN TEXT  -->

        <local:MpAvPlainTextContentView x:Name="PlainTextEditView"
                                        Grid.RowSpan="2"
                                        Classes="content-zoom content-view">
            <Classes.active>
                <MultiBinding Converter="{x:Static BoolConverters.And}">
                    <Binding Path="CopyItemType"
                             Converter="{x:Static local:MpAvEnumToBoolConverter.Instance}"
                             ConverterParameter="Text" />
                    <Binding Path="!IsRichHtmlContentEnabled"
                             Source="{x:Static local:MpAvPrefViewModel.Instance}" />
                </MultiBinding>
            </Classes.active>

        </local:MpAvPlainTextContentView>

        <!--  EDITABLE RICH TEXT  -->

        <local:MpAvContentWebViewContainer x:Name="EditableWebView"
                                           Classes="content-view always-show"
                                           Grid.RowSpan="2"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Stretch">
            <Classes.active>
                <MultiBinding Converter="{x:Static BoolConverters.And}">
                    <Binding Path="IsRichHtmlContentEnabled"
                             Source="{x:Static local:MpAvPrefViewModel.Instance}" />
                </MultiBinding>
            </Classes.active>
        </local:MpAvContentWebViewContainer>

        <!--  PASTE TOOLBAR  -->

        <local:MpAvPasteToolbarView Grid.Row="1"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    local:MpAvIsHoveringExtension.IsEnabled="True"
                                    local:MpAvIsHoveringExtension.IsHovering="{Binding IsPasteBarHovering}"
                                    Height="60">
            <Classes.show>
                <MultiBinding Converter="{x:Static BoolConverters.And}">
                    <Binding Path="!IsDropOverTile" />
                    <Binding Path="IsSubSelectionEnabled" />
                    <Binding Path="!IsWindowOpen" />
                    <!--<Binding Path="IsVisible"
                             ElementName="ReadOnlyWebView" />-->
                </MultiBinding>
            </Classes.show>
        </local:MpAvPasteToolbarView>
    </Grid>

</local:MpAvUserControl>
