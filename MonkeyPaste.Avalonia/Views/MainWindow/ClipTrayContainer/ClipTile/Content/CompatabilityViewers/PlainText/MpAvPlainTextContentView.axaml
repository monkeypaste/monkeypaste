<local:MpAvUserControl xmlns="https://github.com/avaloniaui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:local="using:MonkeyPaste.Avalonia"
                       xmlns:pcl="using:MonkeyPaste"
                       x:DataType="local:MpAvClipTileViewModel"
                       x:TypeArguments="local:MpAvClipTileViewModel"
                       x:CompileBindings="True"
                       mc:Ignorable="d"
                       d:DesignWidth="800"
                       d:DesignHeight="450"
                       x:Class="MonkeyPaste.Avalonia.MpAvPlainTextContentView">
    <local:MpAvUserControl.Resources>
        <SolidColorBrush x:Key="TextControlBackgroundPointerOver">Transparent</SolidColorBrush>
        <SolidColorBrush x:Key="TextControlBackgroundFocused">Transparent</SolidColorBrush>
    </local:MpAvUserControl.Resources>
    <local:MpAvContentTextBox x:Name="PlainTextContentTextBox"
                              Classes="fontFamilyOverride dnd"
                              local:MpAvDropExtension.DropCommand="{Binding TransactionCollectionViewModel.CreateTransactionFromOleOpCommand}"
                              local:MpAvDropExtension.SourceType="ClipTileDrop"
                              local:MpAvTextControlDragExtension.IsDragging="{Binding IsTileDragging, Mode=TwoWay}"
                              local:MpAvHighlightTextExtension.IsEnabled="True"
                              local:MpAvHighlightTextExtension.HighlightRanges="{Binding HighlightRanges}"
                              local:MpAvHighlightTextExtension.ActiveHighlightIdx="{Binding ActiveHighlightIdx}"
                              BorderThickness="0"
                              TextWrapping="Wrap"
                              AcceptsReturn="True"
                              AcceptsTab="True"
                              ScrollViewer.HorizontalScrollBarVisibility="{Binding IsHorizontalScrollbarVisibile, Converter={x:Static local:MpAvBoolToScrollBarVisibilityConverter.Instance}, ConverterParameter=AUTO|DISABLED}"
                              ScrollViewer.VerticalScrollBarVisibility="{Binding IsVerticalScrollbarVisibile, Converter={x:Static local:MpAvBoolToScrollBarVisibilityConverter.Instance}, ConverterParameter=AUTO|DISABLED}"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              HorizontalContentAlignment="Left"
                              VerticalContentAlignment="Top"
                              Background="Transparent"
                              Foreground="{DynamicResource ThemeInteractiveBrush}"
                              Text="{Binding CopyItemData, Converter={x:Static local:MpAvContentDataConverter.Instance}, ConverterParameter=PlainText, Mode=OneWay}">
        <local:MpAvContentTextBox.ContextMenu>
            <ContextMenu IsVisible="False" />
        </local:MpAvContentTextBox.ContextMenu>
        <!--  NOTE drop needs to not be read-only but avoiding setting binding to editable so title logic is intact  -->
        <!--<local:MpAvContentTextBox.IsReadOnly>
            <MultiBinding Converter="{x:Static BoolConverters.Or}">
                <Binding Path="IsContentReadOnly" />
                <Binding Path="IsAnyDropOverTrays"
                         Source="{x:Static local:MpAvClipTrayViewModel.Instance}" />
            </MultiBinding>
        </local:MpAvContentTextBox.IsReadOnly>
        <local:MpAvContentTextBox.IsHitTestVisible>
            <MultiBinding Converter="{x:Static BoolConverters.Or}">
                <Binding Path="!IsReadOnly"
                         ElementName="PlainTextContentTextBox" />
                <Binding Path="IsSubSelectionEnabled" />
                <Binding Path="IsAnyDropOverTrays"
                         Source="{x:Static local:MpAvClipTrayViewModel.Instance}" />
            </MultiBinding>
        </local:MpAvContentTextBox.IsHitTestVisible>-->
        <Interaction.Behaviors>
            <local:MpAvContentTextBoxHighlightBehavior />
        </Interaction.Behaviors>
    </local:MpAvContentTextBox>
</local:MpAvUserControl>
