<local:MpAvUserControl xmlns="https://github.com/avaloniaui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:sys="clr-namespace:System;assembly=mscorlib"
                       xmlns:local="using:MonkeyPaste.Avalonia"
                       xmlns:pcl="using:MonkeyPaste"
                       x:DataType="local:MpAvClipTileViewModel"
                       x:TypeArguments="local:MpAvClipTileViewModel"
                       x:CompileBindings="True"
                       mc:Ignorable="d"
                       d:DesignWidth="260"
                       d:DesignHeight="52"
                       x:Class="MonkeyPaste.Avalonia.MpAvClipTileTitleView">
    <local:MpAvUserControl.Resources>
        <sys:Double x:Key="IconBorderMaxScale">1.1</sys:Double>
    </local:MpAvUserControl.Resources>
    <local:MpAvUserControl.Styles>
        <Style Selector="Button#ClipTileAppIconImageButton:pointerover Image#ClipTileAppIconBorderImage, Button#ClipTileAppIconImageButton.shake Image#ClipTileAppIconBorderImage">
            <Style.Animations>
                <Animation Duration="0:0:0.3"
                           Easing="CubicEaseOut"
                           FillMode="Forward">
                    <KeyFrame Cue="0%">
                        <Setter Property="IsVisible"
                                Value="True" />
                        <Setter Property="ScaleTransform.ScaleX"
                                Value="1" />
                        <Setter Property="ScaleTransform.ScaleY"
                                Value="1" />
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="ScaleTransform.ScaleX"
                                Value="{StaticResource IconBorderMaxScale}" />
                        <Setter Property="ScaleTransform.ScaleY"
                                Value="{StaticResource IconBorderMaxScale}" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>
        <Style Selector="Button#ClipTileAppIconImageButton:not(:pointerover) Image#ClipTileAppIconBorderImage,Button#ClipTileAppIconImageButton:not(.shake) Image#ClipTileAppIconBorderImage">
            <Style.Animations>
                <Animation Duration="0:0:0.3"
                           Easing="CubicEaseOut"
                           FillMode="Forward">
                    <KeyFrame Cue="0%">
                        <Setter Property="ScaleTransform.ScaleX"
                                Value="{StaticResource IconBorderMaxScale}" />
                        <Setter Property="ScaleTransform.ScaleY"
                                Value="{StaticResource IconBorderMaxScale}" />
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="IsVisible"
                                Value="False" />
                        <Setter Property="ScaleTransform.ScaleX"
                                Value="1" />
                        <Setter Property="ScaleTransform.ScaleY"
                                Value="1" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>
    </local:MpAvUserControl.Styles>
    <Grid x:Name="TitleContainerGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <!--  SWIRL  -->

        <Viewbox Grid.ColumnSpan="2"
                 HorizontalAlignment="Left"
                 VerticalAlignment="Top"
                 IsVisible="{Binding IsTitleLayersVisible, Source={x:Static local:MpAvClipTrayViewModel.Instance}}"
                 Width="{Binding Bounds.Width, ElementName=TitleContainerGrid}"
                 Height="{Binding Bounds.Height, ElementName=TitleContainerGrid}"
                 Stretch="Fill">
            <Canvas x:Name="SwirlCanvas"
                    Width="260"
                    Height="55">
                <Ellipse x:Name="layer2"
                         StrokeThickness="0"
                         Fill="{Binding TitleLayerHexColors[2], Converter={x:Static local:MpAvStringHexToBrushConverter.Instance}}"
                         Width="100"
                         Height="28"
                         Opacity="0.3"
                         ZIndex="0"
                         Canvas.Left="165"
                         Canvas.Top="24" />
                <Path x:Name="layer0"
                      ZIndex="{Binding TitleLayerZIndexes[0]}"
                      StrokeThickness="0"
                      Fill="{Binding TitleLayerHexColors[0], Converter={x:Static local:MpAvStringHexToBrushConverter.Instance}}">
                    <Path.Data>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                <PathFigure IsClosed="True"
                                            StartPoint="0,22">
                                    <PathSegments>
                                        <BezierSegment Point1="150,-10"
                                                       Point2="160,85"
                                                       Point3="270,40" />
                                        <LineSegment Point="270,0" />
                                        <LineSegment Point="0,0" />
                                    </PathSegments>
                                </PathFigure>
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </Path.Data>
                </Path>
                <Path x:Name="layer1"
                      StrokeThickness="0"
                      ZIndex="{Binding TitleLayerZIndexes[1]}"
                      Fill="{Binding TitleLayerHexColors[1], Converter={x:Static local:MpAvStringHexToBrushConverter.Instance}}">
                    <Path.Data>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                <PathFigure IsClosed="True"
                                            StartPoint="0,35">
                                    <PathSegments>
                                        <BezierSegment Point1="40,45"
                                                       Point2="75,20"
                                                       Point3="100,20" />
                                        <BezierSegment Point1="185,20"
                                                       Point2="139,20"
                                                       Point3="270,40" />
                                        <LineSegment Point="270,0" />
                                        <LineSegment Point="0,0" />
                                    </PathSegments>
                                </PathFigure>
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </Path.Data>
                </Path>
                <Path x:Name="layer3"
                      StrokeThickness="0"
                      ZIndex="{Binding TitleLayerZIndexes[2]}"
                      Fill="{Binding TitleLayerHexColors[3], Converter={x:Static local:MpAvStringHexToBrushConverter.Instance}}">
                    <Path.Data>
                        <PathGeometry>
                            <PathGeometry.Figures>
                                <PathFigure IsClosed="True"
                                            StartPoint="0,55">
                                    <PathSegments>
                                        <QuadraticBezierSegment Point1="30,10"
                                                                Point2="270,0" />
                                        <LineSegment Point="0,0" />
                                    </PathSegments>
                                </PathFigure>
                            </PathGeometry.Figures>
                        </PathGeometry>
                    </Path.Data>
                </Path>
            </Canvas>

        </Viewbox>

        <!--  TITLE  -->

        <local:MpAvMarqueeTextBox x:Name="TileTitleTextBox"
                                  Grid.Column="0"
                                  EditOnFocus="True"
                                  Cursor="IBeam"
                                  HorizontalAlignment="Stretch"
                                  HorizontalContentAlignment="Left"
                                  VerticalAlignment="Top"
                                  VerticalContentAlignment="Top"
                                  Margin="15,0,0,0"
                                  Padding="0"
                                  ClipToBounds="True"
                                  MinWidth="50"
                                  local:MpAvHighlightTextExtension.IsEnabled="True"
                                  local:MpAvHighlightTextExtension.HighlightRanges="{Binding HighlightRanges}"
                                  local:MpAvHighlightTextExtension.ActiveHighlightIdx="{Binding ActiveHighlightIdx}"
                                  local:MpAvClampedFontSizeExtension.IsEnabled="True"
                                  local:MpAvClampedFontSizeExtension.MinFontSize="18"
                                  ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                  ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                  local:MpAvIsFocusedExtension.IsEnabled="{Binding IsMarqueeEnabled, Source={x:Static local:MpAvClipTrayViewModel.Instance}}"
                                  local:MpAvIsFocusedExtension.IsFocused="{Binding IsTitleFocused, Mode=TwoWay}"
                                  local:MpAvIsFocusedExtension.SelectAllOnFocus="True"
                                  IsMarqueeEnabled="{Binding IsMarqueeEnabled, Source={x:Static local:MpAvClipTrayViewModel.Instance}}"
                                  IsHitTestVisible="{Binding !HasScrollVelocity, Source={x:Static local:MpAvClipTrayViewModel.Instance}}"
                                  EndEditCommand="{Binding FinishEditTitleCommand}"
                                  CancelEditCommand="{Binding CancelEditTitleCommand}"
                                  IsReadOnly="{Binding IsTitleReadOnly, Mode=TwoWay}"
                                  Text="{Binding CopyItemTitle, Mode=TwoWay}">
            <Interaction.Behaviors>
                <local:MpAvClipTileTitleHighlightBehavior />
            </Interaction.Behaviors>
            <local:MpAvMarqueeTextBox.Height>
                <MultiBinding Converter="{x:Static local:MpAvMultiDoubleMathConverter.Instance}"
                              ConverterParameter="+">
                    <Binding Path="FontSize"
                             ElementName="TileTitleTextBox" />
                    <Binding>
                        <Binding.Source>
                            <sys:Double>5</sys:Double>
                        </Binding.Source>
                    </Binding>
                </MultiBinding>
            </local:MpAvMarqueeTextBox.Height>
            <local:MpAvMarqueeTextBox.FontSize>
                <MultiBinding Converter="{x:Static local:MpAvMultiDoubleMathConverter.Instance}"
                              ConverterParameter="/,-">
                    <Binding Path="Bounds.Height"
                             ElementName="TitleContainerGrid" />
                    <Binding>
                        <Binding.Source>
                            <sys:Double>2</sys:Double>
                        </Binding.Source>
                    </Binding>
                    <Binding>
                        <Binding.Source>
                            <sys:Double>2</sys:Double>
                        </Binding.Source>
                    </Binding>
                </MultiBinding>
            </local:MpAvMarqueeTextBox.FontSize>
        </local:MpAvMarqueeTextBox>

        <!--  ICON  -->
        <Button x:Name="ClipTileAppIconImageButton"
                Grid.Column="1"
                Margin="0,0,5,0"
                ClipToBounds="False"
                Height="30"
                Classes="no-bg no-hover-bg squareByHeight"
                Classes.shakeOnce="{Binding TransactionCollectionViewModel.DoShake}"
                Command="{Binding AppIconTapCommand}"
                CommandParameter="{Binding $self}"
                BorderThickness="0"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                HorizontalContentAlignment="Center"
                VerticalContentAlignment="Center">
            <Interaction.Behaviors>
                <local:MpAvSourceHighlightBehavior />
            </Interaction.Behaviors>
            <Button.RenderTransform>
                <RotateTransform />
            </Button.RenderTransform>

            <Grid>
                <Image x:Name="ClipTileAppIconImage"
                       IsVisible="{Binding !IsVisible, ElementName=TransBusySpinner}"
                       IsHitTestVisible="False"
                       Source="{Binding IconResourceObj, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}"
                       Stretch="Uniform"
                       HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch" />

                <local:MpAvBusySpinnerView x:Name="TransBusySpinner"
                                           Width="{Binding $parent.Width}"
                                           Height="{Binding $parent.Height}"
                                           Classes="square">
                    <local:MpAvBusySpinnerView.IsVisible>
                        <MultiBinding Converter="{x:Static BoolConverters.And}">
                            <Binding Path="!IsBusy" />
                            <Binding Path="TransactionCollectionViewModel.IsBusy" />
                        </MultiBinding>
                    </local:MpAvBusySpinnerView.IsVisible>
                </local:MpAvBusySpinnerView>
            </Grid>
        </Button>
    </Grid>
</local:MpAvUserControl>
