<local:MpAvUserControl xmlns="https://github.com/avaloniaui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:local="using:MonkeyPaste.Avalonia"
                       xmlns:pcl="using:MonkeyPaste"
                       x:DataType="local:MpAvClipTileViewModel"
                       x:TypeArguments="local:MpAvClipTileViewModel"
                       mc:Ignorable="d"
                       d:DesignWidth="800"
                       d:DesignHeight="450"
                       x:Class="MonkeyPaste.Avalonia.MpAvFileListContentView">
    <local:MpAvUserControl.Styles>
        <!--  LB STYLE  -->
        <Style Selector="ListBox#FileItemListBox">
            <Setter Property="IsHitTestVisible"
                    Value="False" />
            <Setter Property="DragDrop.AllowDrop"
                    Value="False" />
        </Style>
        <Style Selector="Border#FileListContainerBorder.selected ListBox#FileItemListBox">
            <Setter Property="IsHitTestVisible"
                    Value="True" />
        </Style>
        <Style Selector="Border#FileListContainerBorder.can-drop ListBox#FileItemListBox">
            <Setter Property="DragDrop.AllowDrop"
                    Value="True" />
        </Style>
        <!--  LBI STYLE  -->

        <Style Selector="ListBox#FileItemListBox > ListBoxItem">
            <Setter Property="local:MpAvClassHelperExtension.ClassesToAdd"
                    Value="fli-lbi" />
        </Style>
        <Style Selector="ListBoxItem.fli-lbi">
            <Setter Property="MaxHeight"
                    Value="50" />
            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalContentAlignment"
                    Value="Stretch" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Background"
                    Value="{StaticResource HitTestableTransparent}" />
        </Style>


        <Style Selector="ListBoxItem.fli-lbi Border#InnerLbiContainer">
            <Setter Property="Transitions">
                <Transitions>
                    <BrushTransition Property="Background"
                                     Duration="0:0:0.5" />
                    <BrushTransition Property="BorderBrush"
                                     Duration="0:0:0.5" />
                </Transitions>
            </Setter>
            <Setter Property="Background"
                    Value="{StaticResource HitTestableTransparent}" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ThemeGrayAccent3Brush}" />
            <Setter Property="BorderThickness"
                    Value="1,1,1,1" />
        </Style>

        <Style Selector="ListBoxItem.fli-lbi:nth-last-child() Border#InnerLbiContainer, ListBoxItem.fli-lbi:pointerover Border#InnerLbiContainer, ListBoxItem.fli-lbi:selected Border#InnerLbiContainer">
            <Setter Property="BorderThickness"
                    Value="1" />
        </Style>
        <Style Selector="ListBoxItem.fli-lbi:selected Border#InnerLbiContainer">
            <Setter Property="Background"
                    Value="{DynamicResource ThemeGrayAccent1Brush}" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ThemeAccent2Brush}" />
        </Style>
        <Style Selector="ListBoxItem.fli-lbi:selected:pointerover Border#InnerLbiContainer">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ThemeAccent3Brush}" />
        </Style>

        <Style Selector="ListBoxItem.fli-lbi:nth-child(even):not(:selected) Border#InnerLbiContainer">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource ThemeGrayAccent1Brush}" Opacity="{DynamicResource GlobalBgOpacity}" />
                </Setter.Value>
            </Setter>
        </Style>
        <Style Selector="ListBoxItem.fli-lbi:nth-child(odd):not(:selected) Border#InnerLbiContainer">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource ThemeGrayAccent2Brush}" Opacity="{DynamicResource GlobalBgOpacity}" />
                </Setter.Value>
            </Setter>
        </Style>

        <Style Selector="ListBoxItem.fli-lbi:pointerover:not(:selected) Border#InnerLbiContainer">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ThemeAccent1Brush}" />
        </Style>

        <!--  PATH ICON  -->
        <Style Selector="Border#PathIconBorder">
            <Setter Property="Transitions">
                <Transitions>
                    <BrushTransition Property="Background"
                                     Duration="0:0:0.5" />
                    <BrushTransition Property="BorderBrush"
                                     Duration="0:0:0.5" />
                </Transitions>
            </Setter>
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ThemeGrayAccent3Brush}" />
        </Style>
        <Style Selector="ListBoxItem.fli-lbi:pointerover Border#PathIconBorder">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ThemeAccent1Brush}" />
        </Style>

        <!--  REMOVE BUTTON  -->
        <Style Selector="Button#RemoveButton">
            <Setter Property="Transitions">
                <Transitions>
                    <DoubleTransition Property="Width"
                                      Duration="0:0:0.2" />
                    <BrushTransition Property="Background"
                                     Duration="0:0:0.2" />
                    <BrushTransition Property="BorderBrush"
                                     Duration="0:0:0.2" />
                </Transitions>
            </Setter>
            <Setter Property="Width"
                    Value="0" />
        </Style>

        <Style Selector="Border#FileListContainerBorder.selected ListBox#FileItemListBox.has-multiple Button#RemoveButton">
            <Setter Property="Width"
                    Value="30" />
        </Style>
    </local:MpAvUserControl.Styles>
    <Border x:Name="FileListContainerBorder"
            Classes.can-drop="{Binding CanDrop}"
            Classes.selected="{Binding IsSelected}">
        <!--  FILES LISTBOX  -->
        <ListBox x:Name="FileItemListBox"
                 Margin="5"
                 Classes.has-multiple="{Binding HasMultiple}"
                 Background="Transparent"
                 SelectionMode="Multiple"
                 Selection="{Binding Selection}"
                 BorderThickness="0"
                 DataContext="{Binding FileItemCollectionViewModel}"
                 ItemsSource="{Binding Items}"
                 HorizontalAlignment="Stretch"
                 VerticalAlignment="Stretch">
            <ListBox.Resources>
                <Thickness x:Key="ListBoxItemPadding">0,0,0,0</Thickness>
            </ListBox.Resources>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Border x:Name="InnerLbiContainer">
                        <DockPanel LastChildFill="False">
                            <Border x:Name="PathIconBorder"
                                    DockPanel.Dock="Left"
                                    BorderThickness="0,0,1,0">
                                <Image Margin="2.5"
                                       Width="20"
                                       Height="20"
                                       Stretch="Uniform"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Source="{Binding Path, Converter={x:Static local:MpAvStringFileOrFolderPathToBitmapConverter.Instance}}" />
                            </Border>
                            <StackPanel DockPanel.Dock="Right"
                                        Orientation="Horizontal"
                                        Spacing="0">
                                <Button x:Name="PathNavButton"
                                        Margin="0,0,5,0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Stretch"
                                        Classes="link"
                                        Command="{Binding NavigateToUriCtrlEnforcedCommand, Source={x:Static local:MpAvUriNavigator.Instance}}"
                                        CommandParameter="{Binding Path}">
                                    <!--<local:MpAvMarqueeTextBox HorizontalAlignment="Stretch"
                                                          VerticalAlignment="Center"
                                                          TextAlignment="Right"
                                                          TextWrapping="Wrap"
                                                          MaxWidth="120"
                                                          Effect="{DynamicResource ThemeGlow}"
                                                          FontSize="16"
                                                          Text="{Binding Path, Converter={x:Static local:MpAvAbsoluteToRelativePathStringConverter.Instance}}">
                                    <ToolTip.Tip>
                                        <local:MpAvToolTipView ToolTipText="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.LinkNavigateToolTipText}" />
                                    </ToolTip.Tip>
                                </local:MpAvMarqueeTextBox>-->
                                    <TextBlock HorizontalAlignment="Stretch"
                                               VerticalAlignment="Center"
                                               TextAlignment="Right"
                                               TextWrapping="Wrap"
                                               FontSize="16"
                                               Text="{Binding Path, Converter={x:Static local:MpAvAbsoluteToRelativePathStringConverter.Instance}}">
                                        <ToolTip.Tip>
                                            <local:MpAvToolTipView ToolTipText="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.LinkNavigateToolTipText}" />
                                        </ToolTip.Tip>
                                    </TextBlock>
                                </Button>
                                <Button x:Name="RemoveButton"
                                        DockPanel.Dock="Right"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Stretch"
                                        Command="{Binding RemoveThisFileItemCommand}">
                                    <Button.Resources>
                                        <Thickness x:Key="ButtonBorderThemeThickness">1,0,0,0</Thickness>
                                        <CornerRadius x:Key="ControlCornerRadius">0,0,0,0</CornerRadius>
                                        <SolidColorBrush x:Key="ButtonBackground" Color="{DynamicResource HitTestableTransparent}" />
                                        <SolidColorBrush x:Key="ButtonBorderBrush" Color="{DynamicResource ThemeGrayAccent3Brush}" />
                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver">Salmon</SolidColorBrush>
                                        <SolidColorBrush x:Key="ButtonBorderBrushPointerOver" Color="{DynamicResource ThemeAccent1Brush}" />
                                        <SolidColorBrush x:Key="ButtonBackgroundPressed">Crimson</SolidColorBrush>
                                        <SolidColorBrush x:Key="ButtonBorderBrushPressed" Color="{DynamicResource ThemeAccent1Brush}" />
                                    </Button.Resources>
                                    <ToolTip.Tip>
                                        <local:MpAvToolTipView ToolTipText="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.CommonRemoveLabel}" />
                                    </ToolTip.Tip>
                                    <Image Width="20"
                                           Height="20"
                                           Margin="2.5"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Source="{Binding Source={StaticResource DeleteImage}, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
                                </Button>

                            </StackPanel>
                        </DockPanel>
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Border>
</local:MpAvUserControl>
