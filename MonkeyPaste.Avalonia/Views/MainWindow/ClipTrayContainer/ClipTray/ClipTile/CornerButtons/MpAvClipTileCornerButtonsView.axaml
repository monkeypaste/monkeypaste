<local:MpAvUserControl xmlns="https://github.com/avaloniaui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:sys="clr-namespace:System;assembly=mscorlib"
                       xmlns:local="using:MonkeyPaste.Avalonia"
                       xmlns:pcl="using:MonkeyPaste"
                       x:DataType="local:MpAvClipTileViewModel"
                       x:TypeArguments="local:MpAvClipTileViewModel"
                       x:CompileBindings="True"
                       mc:Ignorable="d"
                       d:DesignWidth="800"
                       d:DesignHeight="450"
                       x:Class="MonkeyPaste.Avalonia.MpAvClipTileCornerButtonsView">
    <local:MpAvUserControl.Styles>
        <Style Selector=":is(Button)">
            <Setter Property="local:MpAvPointerCommandExtension.IsEnabled"
                    Value="True" />
            <Setter Property="local:MpAvPointerCommandExtension.RoutingStrategy"
                    Value="Tunnel" />
            <Setter Property="Padding"
                    Value="0" />
        </Style>
        <Style Selector=":is(Button) /template/ ContentPresenter">
            <Setter Property="Padding"
                    Value="0" />
        </Style>

        <!--  BUTTON PLACEMENT  -->
        <Style Selector=":is(Button).top">
            <Setter Property="VerticalAlignment"
                    Value="Top" />
        </Style>
        <Style Selector=":is(Button).bottom">
            <Setter Property="VerticalAlignment"
                    Value="Bottom" />
        </Style>

        <Style Selector=":is(Button).left">
            <Setter Property="HorizontalAlignment"
                    Value="Left" />
        </Style>
        <Style Selector=":is(Button).right">
            <Setter Property="HorizontalAlignment"
                    Value="Right" />
        </Style>

        <!--  BUTTON ICONS  -->

        <Style Selector=":is(Button).cornerButton Image">
            <Setter Property="Width"
                    Value="10" />
            <Setter Property="Height"
                    Value="10" />
            <Setter Property="local:MpAvImageTintExtension.IsEnabled"
                    Value="True" />
        </Style>

        <!--  BUTTON ICONS TINT  -->

        <Style Selector=":is(Button).cornerButton.top Image">
            <Setter Property="local:MpAvImageTintExtension.Tint"
                    Value="{DynamicResource ThemeInteractiveBgColor}" />
        </Style>

        <Style Selector=":is(Button).cornerButton.bottom Image">
            <Setter Property="local:MpAvImageTintExtension.Tint"
                    Value="{DynamicResource ThemeInteractiveColor}" />
        </Style>

        <Style Selector=":is(Button).cornerButton:pointerover Image">
            <Setter Property="local:MpAvImageTintExtension.Tint"
                    Value="{DynamicResource ThemeAccent1Color}" />
        </Style>

        <Style Selector="ToggleButton.cornerButton:checked.cornerButton Image">
            <Setter Property="local:MpAvImageTintExtension.Tint"
                    Value="{DynamicResource ThemeAccent5BgColor}" />
        </Style>

        <Style Selector="Image.activeHotkey">
            <Setter Property="local:MpAvImageTintExtension.Tint"
                    Value="{DynamicResource ThemeAccent2Color}" />
        </Style>

        <!--  TL PIN IMAGE  -->
        <Style Selector="ToggleButton#PinTileButton Image">
            <Setter Property="Source"
                    Value="{Binding Source={StaticResource PinImage}, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}}" />
        </Style>

        <Style Selector="ToggleButton#PinTileButton:checked Image, ToggleButton#PinTileButton:pointerover Image">
            <Setter Property="Source"
                    Value="{Binding Source={StaticResource PinDownImage}, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}}" />
        </Style>
    </local:MpAvUserControl.Styles>
    <Grid Classes.tileHover="{Binding IsHovering}"
          Classes.subselect="{Binding IsSubSelectionEnabled}"
          HorizontalAlignment="Stretch"
          VerticalAlignment="Stretch"
          Margin="2">

        <!--  TL Pin Tile Button  -->

        <ToggleButton x:Name="PinTileButton"
                      Classes="noBg noHoverBg noBorder cornerButton top left"
                      local:MpAvPointerCommandExtension.LeftPressCommand="{Binding ToggleTileIsPinnedCommand, Source={x:Static local:MpAvClipTrayViewModel.Instance}}"
                      local:MpAvPointerCommandExtension.LeftPressCommandParameter="{Binding}"
                      IsChecked="{Binding IsPinned}"
                      IsVisible="{Binding !IsChildWindowOpen}">
            <ToolTip.Tip>
                <local:MpAvToolTipView ToolTipText="Toggle Pin" />
            </ToolTip.Tip>
            <Image />
        </ToggleButton>

        <!--  TR Pop Out Button  -->

        <Button x:Name="OpenWindowButton"
                Classes="noBg noHoverBg noBorder cornerButton top right"
                local:MpAvPointerCommandExtension.LeftPressCommand="{Binding PinToPopoutWindowCommand}"
                IsVisible="{Binding !IsChildWindowOpen}"
                CommandParameter="{Binding}">
            <ToolTip.Tip>
                <local:MpAvToolTipView ToolTipText="Float" />
            </ToolTip.Tip>
            <Image Source="{Binding Source={StaticResource NewWindowImage}, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />

        </Button>

        <!--  BL Hotkey Button  -->
        <Button x:Name="ClipTileHotkeyButton"
                Classes="noBg noHoverBg noBorder cornerButton bottom left"
                local:MpAvPointerCommandExtension.LeftPressCommand="{Binding ShowAssignShortcutDialogCommand, Source={x:Static local:MpAvShortcutCollectionViewModel.Instance}}"
                local:MpAvPointerCommandExtension.LeftPressCommandParameter="{Binding}">
            <ToolTip.Tip>
                <local:MpAvToolTipView ToolTipText="{Binding ShortcutTooltipText}" />
            </ToolTip.Tip>
            <Image Classes.activeHotkey="{Binding KeyString, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}"
                   Source="{Binding Source={StaticResource HotkeyImage}, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
        </Button>

        <!--  BR Edit Toggle Button  -->
        <ToggleButton x:Name="ClipTileToggleEditButton"
                      Classes="noBg noHoverBg noBorder cornerButton bottom right"
                      IsVisible="{Binding CanEdit}"
                      local:MpAvPointerCommandExtension.LeftPressCommand="{Binding ToggleIsContentReadOnlyCommand}"
                      IsChecked="{Binding !IsContentReadOnly, Mode=OneWay}">
            <ToolTip.Tip>
                <local:MpAvToolTipView ToolTipText="Toggle Edit" />
            </ToolTip.Tip>
            <Image Source="{Binding Source={StaticResource EditImage}, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
        </ToggleButton>
    </Grid>
</local:MpAvUserControl>
