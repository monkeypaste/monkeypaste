<local:MpAvUserControl xmlns="https://github.com/avaloniaui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:sys="clr-namespace:System;assembly=mscorlib"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:local="using:MonkeyPaste.Avalonia"
                       xmlns:pcl="using:MonkeyPaste"
                       x:DataType="local:MpAvClipTrayViewModel"
                       x:TypeArguments="local:MpAvClipTrayViewModel"
                       DataContext="{x:Static local:MpAvClipTrayViewModel.Instance}"
                       mc:Ignorable="d"
                       d:DesignWidth="800"
                       d:DesignHeight="450"
                       x:Class="MonkeyPaste.Avalonia.MpAvQueryTrayView">

    <local:MpAvUserControl.Styles>


        <!--  PIN PLACHOLDER DBL CLICK  -->

        <!--  Requery tile opacity  -->

        <!--<Style Selector="ListBox.queryListBox.notrequerying > ListBoxItem">
            <Setter Property="Opacity"
                    Value="1" />
        </Style>
        <Style Selector="ListBox.queryListBox.requerying > ListBoxItem">
            <Setter Property="Opacity"
                    Value="0" />
        </Style>-->

        <!--  TILE POSIITONING/VISIBILITY  -->

        <Style Selector="ListBox.queryListBox > ListBoxItem"
               x:DataType="local:MpAvClipTileViewModel">
            <Setter Property="Canvas.Left"
                    Value="{Binding TrayX}" />
            <Setter Property="Canvas.Top"
                    Value="{Binding TrayY}" />
            <Setter Property="Opacity"
                    Value="{Binding IsPlaceholder, ConverterParameter=0|1, Converter={x:Static local:MpAvBoolToDoubleConverter.Instance}}" />
            <!--<Setter Property="Opacity">
                <Setter.Value>
                    <MultiBinding Converter="{x:Static local:MpAvMultiBoolToDoubleConverter.Instance}"
                                  ConverterParameter="And|0|1">
                        <Binding Path="IsPlaceholder" />
                        <Binding Path="!IsInPlaceRequerying"
                                 Source="{x:Static local:MpAvClipTrayViewModel.Instance}" />
                    </MultiBinding>
                </Setter.Value>
            </Setter>-->
        </Style>
    </local:MpAvUserControl.Styles>
    <Grid x:Name="QueryTrayContainerGrid"
          Classes.requerying="{Binding IsRequerying}"
          Margin="0"
          Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--  QUERY TRAY  -->

        <Border x:Name="QueryTrayContainerBorder"
                Grid.Row="0"
                Grid.RowSpan="2"
                local:MpAvSizeObserverExtension.IsEnabled="True"
                local:MpAvSizeObserverExtension.ObservedWidth="{Binding ObservedQueryTrayScreenWidth, Mode=TwoWay}"
                local:MpAvSizeObserverExtension.ObservedHeight="{Binding ObservedQueryTrayScreenHeight, Mode=TwoWay}">
            <local:MpAvPagingScrollViewer x:Name="ClipTrayScrollViewer"
                                          HorizontalScrollBarVisibility="{Binding IsQueryHorizontalScrollBarVisible, Converter={x:Static local:MpAvBoolToScrollBarVisibilityConverter.Instance}, ConverterParameter=AUTO|HIDDEN}"
                                          VerticalScrollBarVisibility="{Binding IsQueryVerticalScrollBarVisible, Converter={x:Static local:MpAvBoolToScrollBarVisibilityConverter.Instance}, ConverterParameter=AUTO|HIDDEN}"
                                          IsScrollInertiaEnabled="False"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Top"
                                          AllowAutoHide="True"
                                          Width="{Binding $parent.Bounds.Width}"
                                          Height="{Binding $parent.Bounds.Height}">
                <ListBox x:Name="ClipTrayListBox"
                         Classes="clipTileListBox queryListBox"
                         Classes.bright="{Binding $self.Background, Converter={x:Static local:MpAvBrushToIsBrightBoolConverter.Instance}}"
                         IsTextSearchEnabled="False"
                         Background="{DynamicResource ClipTrayBgColor}"
                         HorizontalAlignment="Left"
                         VerticalAlignment="Top"
                         BorderThickness="0"
                         Margin="0,0,0,0"
                         AutoScrollToSelectedItem="False"
                         SelectedItem="{Binding SelectedClipTrayItem, Mode=TwoWay}"
                         ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                         ScrollViewer.VerticalScrollBarVisibility="Hidden"
                         local:MpAvPagingListBoxExtension.IsEnabled="True"
                         local:MpAvPagingListBoxExtension.FrictionX="{Binding ScrollFrictionX}"
                         local:MpAvPagingListBoxExtension.WheelDampeningX="{Binding ScrollWheelDampeningX}"
                         local:MpAvPagingListBoxExtension.FrictionY="{Binding ScrollFrictionY}"
                         local:MpAvPagingListBoxExtension.WheelDampeningY="{Binding ScrollWheelDampeningY}"
                         local:MpAvPagingListBoxExtension.ScrollOffsetX="{Binding ScrollOffsetX, Mode=TwoWay}"
                         local:MpAvPagingListBoxExtension.ScrollOffsetY="{Binding ScrollOffsetY, Mode=TwoWay}"
                         local:MpAvPagingListBoxExtension.IsThumbDraggingX="{Binding IsThumbDraggingX, Mode=TwoWay}"
                         local:MpAvPagingListBoxExtension.IsThumbDraggingY="{Binding IsThumbDraggingY, Mode=TwoWay}"
                         local:MpAvPagingListBoxExtension.IsThumbDragging="{Binding IsThumbDragging}"
                         local:MpAvPagingListBoxExtension.CanThumbDragX="{Binding CanThumbDragX}"
                         local:MpAvPagingListBoxExtension.CanThumbDragY="{Binding CanThumbDragY}"
                         local:MpAvPagingListBoxExtension.CanThumbDrag="{Binding CanThumbDrag}"
                         local:MpAvPagingListBoxExtension.MaxScrollOffsetX="{Binding MaxScrollOffsetX}"
                         local:MpAvPagingListBoxExtension.MaxScrollOffsetY="{Binding MaxScrollOffsetY}"
                         local:MpAvPagingListBoxExtension.VelocityX="{Binding ScrollVelocityX, Mode=TwoWay}"
                         local:MpAvPagingListBoxExtension.VelocityY="{Binding ScrollVelocityY, Mode=TwoWay}"
                         local:MpAvPagingListBoxExtension.CanScrollX="{Binding CanScrollX}"
                         local:MpAvPagingListBoxExtension.CanScrollY="{Binding CanScrollY}"
                         local:MpAvPagingListBoxExtension.ListOrientation="{Binding ListOrientation}"
                         local:MpAvPagingListBoxExtension.LayoutType="{Binding LayoutType}"
                         local:MpAvPagingListBoxExtension.CanTouchScroll="{Binding CanTouchScroll, Mode=TwoWay}"
                         local:MpAvPagingListBoxExtension.IsTouchScrolling="{Binding IsTouchScrolling, Mode=TwoWay}"
                         Width="{Binding QueryTrayTotalWidth}"
                         Height="{Binding QueryTrayTotalHeight}"
                         ItemsSource="{Binding Items}">
                    <ListBox.Resources>
                        <SolidColorBrush x:Key="SystemControlHighlightListAccentLowBrush">Transparent</SolidColorBrush>
                        <SolidColorBrush x:Key="SystemControlHighlightListAccentMediumBrush">Transparent</SolidColorBrush>
                        <SolidColorBrush x:Key="SystemControlHighlightListAccentHighBrush">Transparent</SolidColorBrush>
                        <SolidColorBrush x:Key="SystemControlHighlightListLowBrush">Transparent</SolidColorBrush>
                        <SolidColorBrush x:Key="SystemControlHighlightListMediumBrush">Transparent</SolidColorBrush>
                        <SolidColorBrush x:Key="SystemControlHighlightListHighBrush">Transparent</SolidColorBrush>
                    </ListBox.Resources>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <local:MpAvClipTileView UseLayoutRounding="True"
                                                    local:MpAvIsHoveringExtension.IsEnabled="True"
                                                    local:MpAvIsHoveringExtension.IsHovering="{Binding IsHovering, Mode=TwoWay}"
                                                    local:MpAvBoundsObserverExtension.IsEnabled="True"
                                                    local:MpAvBoundsObserverExtension.ObservedBounds="{Binding ObservedBounds, Mode=TwoWay}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Canvas x:Name="ClipTrayItemsPanelCanvas"
                                    Width="{Binding QueryTrayTotalWidth}"
                                    Height="{Binding QueryTrayTotalHeight}"
                                    Margin="0,0,20,0" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>
            </local:MpAvPagingScrollViewer>
        </Border>


        <!--  EMPTY OVERLAY  -->

        <Border x:Name="QueryTrayEmptyContainer"
                Grid.Row="1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Center"
                IsHitTestVisible="False"
                Background="Transparent">
            <Border.IsVisible>
                <MultiBinding Converter="{x:Static BoolConverters.And}">
                    <Binding Path="!IsRequerying" />
                    <Binding Path="IsQueryEmpty" />
                    <Binding Path="!IsVisible"
                             ElementName="QueryTrayBusyOuterBorder" />
                </MultiBinding>
            </Border.IsVisible>
            <TextBlock Text="{Binding EmptyQueryTrayText}"
                       Classes="disabled emptyOverlayText" />
        </Border>


        <!--  BUSY OVERLAY  -->

        <Border x:Name="QueryTrayBusyOuterBorder"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Grid.Row="1">
            <Border.IsVisible>
                <MultiBinding Converter="{x:Static BoolConverters.Or}">
                    <Binding Path="IsRequerying" />
                    <Binding Path="IsSelecting"
                             Source="{x:Static local:MpAvTagTrayViewModel.Instance}" />
                </MultiBinding>
            </Border.IsVisible>
            <Border x:Name="QueryTrayBusyInnerBorder"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Width="70"
                    Height="70">
                <local:MpAvBusySpinnerView x:Name="QueryTrayBusySpinner"
                                           HorizontalAlignment="Stretch"
                                           VerticalAlignment="Stretch" />
            </Border>
        </Border>

        <!--  ADVANCED SEARCH  -->
        <Border x:Name="AdvancedSearchContainerBorder"
                Grid.Row="0"
                Padding="0,5,0,0"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                MaxWidth="{Binding Bounds.Width, ElementName=QueryTrayContainerBorder}"
                x:DataType="local:MpAvSearchCriteriaItemCollectionViewModel"
                DataContext="{x:Static local:MpAvSearchCriteriaItemCollectionViewModel.Instance}">
            <Border.IsVisible>
                <MultiBinding Converter="{x:Static BoolConverters.And}">
                    <Binding Path="IsExpanded" />
                    <Binding Path="!IsCriteriaWindowOpen" />
                    <Binding Path="IsAdvSearchActive" />
                </MultiBinding>
            </Border.IsVisible>
            <local:MpAvSearchCriteriaListBoxView x:Name="SearchCriteriaView"
                                                 HorizontalAlignment="Stretch"
                                                 VerticalAlignment="Stretch"
                                                 VerticalContentAlignment="Stretch"
                                                 IsVisible="{Binding HasCriteriaItems}" />
        </Border>

        <GridSplitter x:Name="AdvancedSearchSplitter"
                      Grid.Row="0"
                      Classes="horizontal"
                      Classes.desktop="{Binding IsDesktop, Source={x:Static local:MpAvThemeViewModel.Instance}}"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Bottom">
            <GridSplitter.IsVisible>
                <MultiBinding Converter="{x:Static BoolConverters.And}">
                    <Binding Path="IsVisible"
                             ElementName="SearchCriteriaView" />
                    <Binding Path="IsVisible"
                             ElementName="AdvancedSearchContainerBorder" />
                </MultiBinding>
            </GridSplitter.IsVisible>
        </GridSplitter>
    </Grid>

</local:MpAvUserControl>
