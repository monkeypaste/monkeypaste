<local:MpAvUserControl x:Class="MonkeyPaste.Avalonia.MpAvContentQueryTextBoxView"
                       xmlns="https://github.com/avaloniaui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:local="using:MonkeyPaste.Avalonia"
                       xmlns:pcl="using:MonkeyPaste"
                       x:TypeArguments="pcl:MpIContentQueryTextBoxViewModel"
                       x:DataType="pcl:MpIContentQueryTextBoxViewModel"
                       x:CompileBindings="True"
                       mc:Ignorable="d"
                       d:DesignHeight="450"
                       d:DesignWidth="800">
    <local:MpAvUserControl.Styles>
        <!--  FILTER BUTTON ICON  -->
        <Style Selector="Button#FilterButton Image">
            <Setter Property="Source"
                    Value="{Binding Source={StaticResource FilterImage}, ConverterParameter=ThemeInteractiveColor, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}}" />
        </Style>
        <Style Selector="Button#FilterButton:pointerover Image">
            <Setter Property="Source"
                    Value="{Binding Source={StaticResource FilterImage}, ConverterParameter=ThemeAccent1Color, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}}" />
        </Style>
        <!--  PASSWORD CHAR  -->
        <Style Selector="TextBox.secure">
            <Setter Property="PasswordChar"
                    Value="•" />
            <Setter Property="AcceptsTab"
                    Value="False" />
            <Setter Property="AcceptsReturn"
                    Value="False" />
        </Style>
        <Style Selector="TextBox.secure.dark">
            <!--<Setter Property="PasswordChar"
                    Value="○" />-->
            <Setter Property="PasswordChar"
                    Value="•" />
        </Style>

        <!--  WRAPPING  -->
        <Style Selector="TextBox.multiline">
            <Setter Property="AcceptsReturn"
                    Value="True" />
            <Setter Property="TextWrapping"
                    Value="WrapWithOverflow" />
            <Setter Property="MaxHeight"
                    Value="400" />
        </Style>

        <!--  READ-ONLY  -->
        <Style Selector="TextBox[IsReadOnly=true]">
            <Setter Property="BorderBrush"
                    Value="Transparent" />
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="Effect"
                    Value="drop-shadow(3 3 3 black)" />
        </Style>
        <Style Selector="TextBox[IsReadOnly=true].dark">
            <Setter Property="Effect"
                    Value="drop-shadow(3 3 3 white)" />
        </Style>
    </local:MpAvUserControl.Styles>
    <Border x:Name="QueryItemGridContainer"
            Classes="paramBorder">
        <Grid ColumnDefinitions="*,Auto,Auto"
              Margin="0,0,10,0">

            <!--  TEXTBOX  -->

            <TextBox x:Name="ContentQueryTextBox"
                     Grid.Column="0"
                     Grid.ColumnSpan="2"
                     Classes="dnd param"
                     Classes.dark="{Binding IsThemeDark, Source={x:Static local:MpAvPrefViewModel.Instance}}"
                     Classes.multiline="{Binding IsMultiline}"
                     Classes.secure="{Binding IsSecure}"
                     Classes.revealPasswordButton="{Binding IsSecure}"
                     IsReadOnly="{Binding IsReadOnly}"
                     HorizontalAlignment="Stretch"
                     VerticalAlignment="Stretch"
                     local:MpAvSecureTextBoxExtension.IsEnabled="{Binding IsSecure}"
                     local:MpAvIsFocusedExtension.IsEnabled="True"
                     local:MpAvLostFocusUpdateBindingExtension.IsEnabled="True"
                     local:MpAvLostFocusUpdateBindingExtension.Text="{Binding ContentQuery, Mode=TwoWay}"
                     SelectionStart="{Binding SelectionStart, Mode=TwoWay}"
                     SelectionEnd="{Binding SelectionEnd, Mode=TwoWay}"
                     Watermark="{Binding Watermark}" />

            <!--  CLEAR TEXT BUTTON  -->

            <local:MpAvClearTextButton x:Name="ClearButton"
                                       IsTabStop="false"
                                       Grid.Column="1"
                                       Classes="TextBoxButton square"
                                       Height="20"
                                       ClearCommand="{Binding ClearQueryCommand}"
                                       ClearCommandParameter="{Binding .}"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Center">
                <local:MpAvClearTextButton.IsVisible>
                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                        <Binding Path="Text"
                                 ElementName="ContentQueryTextBox"
                                 Converter="{x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}" />
                        <Binding Path="!IsReadOnly"
                                 ElementName="ContentQueryTextBox" />
                        <Binding Path="!IsSecure" />
                    </MultiBinding>
                </local:MpAvClearTextButton.IsVisible>
            </local:MpAvClearTextButton>

            <!--  FILTER BUTTON  -->

            <Button x:Name="FilterButton"
                    Grid.Column="2"
                    Margin="0,0,5,0"
                    Classes="defaultButton noBg noHoverBg noBorder"
                    IsVisible="{Binding IsFieldButtonVisible}"
                    HorizontalAlignment="Right"
                    local:MpAvPointerCommandExtension.IsEnabled="True"
                    local:MpAvPointerCommandExtension.LeftPressCommand="{Binding ShowQueryMenuCommand}"
                    local:MpAvPointerCommandExtension.LeftPressCommandParameter="{Binding $self}">
                <Image />
            </Button>
        </Grid>
    </Border>
</local:MpAvUserControl>
