<local:MpAvUserControl x:Class="MonkeyPaste.Avalonia.MpAvContentQueryTextBoxView"
                       x:Name="ContentQueryTextBoxView"
                       xmlns="https://github.com/avaloniaui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:local="using:MonkeyPaste.Avalonia"
                       xmlns:pcl="using:MonkeyPaste"
                       x:TypeArguments="pcl:MpIContentQueryTextBoxViewModel"
                       x:DataType="pcl:MpIContentQueryTextBoxViewModel"
                       x:CompileBindings="True"
                       mc:Ignorable="d"
                       d:DesignHeight="450"
                       d:DesignWidth="800">
    <local:MpAvUserControl.Styles>
        <!--  FILTER BUTTON ICON  -->
        <Style Selector="Button#FilterButton Image">
            <Setter Property="Source"
                    Value="{Binding Source={StaticResource FilterImage}, ConverterParameter=ThemeInteractiveColor, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}}" />
        </Style>
        <Style Selector="Button#FilterButton:pointerover Image">
            <Setter Property="Source"
                    Value="{Binding Source={StaticResource FilterImage}, ConverterParameter=ThemeAccent1Color, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}}" />
        </Style>
        <Style Selector="Border#QueryItemGridContainer:not(.popout) TextBox">
            <Setter Property="MaxHeight"
                    Value="400" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                    Value="Hidden" />
            <Setter Property="HorizontalAlignment"
                    Value="Left" />
        </Style>

        <Style Selector="Border#QueryItemGridContainer.popout TextBox">
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="AcceptsTab"
                    Value="True" />
            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
            <Setter Property="Padding"
                    Value="3" />
        </Style>

        <Style Selector="Border.paramBorder.popout">
            <Setter Property="Margin"
                    Value="5" />
        </Style>

        <Style Selector=":is(Button).outerButton">
            <Setter Property="HorizontalAlignment"
                    Value="Left" />
            <Setter Property="Margin"
                    Value="5,0,0,0" />
        </Style>

    </local:MpAvUserControl.Styles>
    <Border x:Name="QueryItemGridContainer"
            Classes.popout="{Binding IsPopOut, ElementName=ContentQueryTextBoxView}"
            Classes="paramBorder">
        <Grid ColumnDefinitions="*,Auto,Auto,Auto">

            <!--  TEXTBOX  -->

            <TextBox x:Name="ContentQueryTextBox"
                     Classes.popout="{Binding IsWindowOpen}"
                     Grid.Column="0"
                     Grid.ColumnSpan="2"
                     IsVisible="{Binding !IsReadOnly}"
                     Classes="dnd param"
                     Classes.password="{Binding IsSecure}"
                     Classes.revealPasswordButton="{Binding IsSecure}"
                     VerticalAlignment="Stretch"
                     TextWrapping="NoWrap"
                     AcceptsReturn="True"
                     local:MpAvIsFocusedExtension.IsEnabled="True"
                     SelectionStart="{Binding SelectionStart, Mode=TwoWay}"
                     SelectionEnd="{Binding SelectionEnd, Mode=TwoWay}"
                     Watermark="{Binding Watermark}"
                     Text="{Binding ContentQuery, Mode=TwoWay}" />

            <SelectableTextBlock x:Name="ReadOnlyBlock"
                                 Grid.Column="0"
                                 Grid.ColumnSpan="2"
                                 FontWeight="SemiBold"
                                 TextWrapping="WrapWithOverflow"
                                 MaxHeight="400"
                                 Text="{Binding ContentQuery}"
                                 Foreground="{DynamicResource ThemeAccent1Color}"
                                 FontSize="{Binding FontSize, ElementName=ContentQueryTextBox}"
                                 IsVisible="{Binding IsReadOnly}"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Stretch">
                <SelectableTextBlock.IsVisible>
                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                        <Binding Path="IsReadOnly" />
                        <Binding Path="!IsPopOut"
                                 ElementName="ContentQueryTextBoxView" />
                    </MultiBinding>
                </SelectableTextBlock.IsVisible>
            </SelectableTextBlock>

            <!--  CLEAR TEXT BUTTON  -->

            <local:MpAvClearTextButton x:Name="ClearButton"
                                       IsTabStop="false"
                                       Grid.Column="1"
                                       Classes="TextBoxButton square"
                                       Height="20"
                                       ClearCommand="{Binding ClearQueryCommand}"
                                       ClearCommandParameter="{Binding .}"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Center">
                <local:MpAvClearTextButton.IsVisible>
                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                        <Binding Path="Text"
                                 ElementName="ContentQueryTextBox"
                                 Converter="{x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}" />
                        <Binding Path="!IsReadOnly" />
                        <Binding Path="!IsSecure" />
                        <Binding Path="!IsPopOut"
                                 ElementName="ContentQueryTextBoxView" />
                    </MultiBinding>
                </local:MpAvClearTextButton.IsVisible>
            </local:MpAvClearTextButton>

            <!--  FILTER BUTTON  -->

            <Button x:Name="FilterButton"
                    Grid.Column="2"
                    Classes="defaultButton noBg noHoverBg noBorder outerButton"
                    IsVisible="{Binding IsFieldButtonVisible}"
                    Command="{Binding ShowQueryMenuCommand}"
                    CommandParameter="{Binding $self}">
                <Button.IsVisible>
                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                        <Binding Path="IsFieldButtonVisible" />
                        <Binding Path="!IsReadOnly" />
                        <Binding Path="!IsSecure" />
                        <Binding Path="!IsPopOut"
                                 ElementName="ContentQueryTextBoxView" />
                    </MultiBinding>
                </Button.IsVisible>
                <Image />
            </Button>

            <!--  POPOUT BUTTON  -->

            <ToggleButton x:Name="PopOutTextBoxButton"
                          Grid.Column="3"
                          Classes="defaultButton noBg noHoverBg noBorder outerButton"
                          IsChecked="{Binding IsWindowOpen, Mode=OneWay}"
                          Command="{Binding OpenPopOutWindowCommand}">
                <ToggleButton.IsVisible>
                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                        <Binding Path="CanPopOut" />
                        <Binding Path="!IsReadOnly" />
                        <Binding Path="!IsPopOut"
                                 ElementName="ContentQueryTextBoxView" />
                    </MultiBinding>
                </ToggleButton.IsVisible>
                <ToolTip.Tip>
                    <local:MpAvToolTipView InputGestureText="{Binding ., ConverterParameter=OpenInWindow, Converter={x:Static local:MpAvShortcutTypeOrCommandObjToKeyStringConverter.Instance}}"
                                           ToolTipText="{x:Static local:UiStrings.CommonFloatWindowLabel}" />
                </ToolTip.Tip>

                <Image Source="{Binding Source={StaticResource NewWindowImage}, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}, ConverterParameter=ThemeInteractiveColor_norand}" />
            </ToggleButton>
        </Grid>
    </Border>
</local:MpAvUserControl>
