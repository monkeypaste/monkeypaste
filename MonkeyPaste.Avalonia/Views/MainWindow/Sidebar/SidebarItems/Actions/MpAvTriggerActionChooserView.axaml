<local:MpAvUserControl x:Class="MonkeyPaste.Avalonia.MpAvTriggerActionChooserView"
                       xmlns="https://github.com/avaloniaui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:sys="clr-namespace:System;assembly=mscorlib"
                       Focusable="True"
                       xmlns:local="using:MonkeyPaste.Avalonia"
                       DataContext="{x:Static local:MpAvTriggerCollectionViewModel.Instance}"
                       x:TypeArguments="local:MpAvTriggerCollectionViewModel"
                       x:DataType="local:MpAvTriggerCollectionViewModel"
                       mc:Ignorable="d"
                       d:DesignHeight="450"
                       d:DesignWidth="800">
    <Design.DataContext>
        <local:DesignTriggerCollectionViewModel />
    </Design.DataContext>
    <local:MpAvUserControl.Resources>
        <sys:Double x:Key="DefMinWidth">0</sys:Double>
        <sys:Double x:Key="DefMinHeight">0</sys:Double>
        <sys:Double x:Key="DefMinInnerHeight">0</sys:Double>
    </local:MpAvUserControl.Resources>
    <local:MpAvUserControl.Styles>
        <!--  MOBILE STUFF  -->
        <Style Selector="Border#ActionDesignerInnerContainerBorder">
            <Setter Property="MinHeight"
                    Value="{StaticResource DefMinInnerHeight}" />
        </Style>
        <Style Selector="Border#TriggerSidebarOuterContainer.mobile Border#ActionDesignerInnerContainerBorder">
            <Setter Property="MinHeight"
                    Value="{StaticResource DefMinHeight}" />
        </Style>

        <Style Selector="Border#ActionPropertyOuterContainer">
            <Setter Property="MinWidth"
                    Value="{StaticResource DefMinWidth}" />
            <Setter Property="HorizontalAlignment"
                    Value="Left" />
        </Style>
        <Style Selector="Border#TriggerSidebarOuterContainer.mobile Border#ActionPropertyOuterContainer">
            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
        </Style>

        <Style Selector="Border#SelectedTriggerContainer">
            <Setter Property="MinWidth"
                    Value="{StaticResource DefMinWidth}" />
        </Style>
        <Style Selector="Border#TriggerSidebarOuterContainer.mobile Border#ActionPropertyOuterContainer">
            <Setter Property="MinWidth"
                    Value="0" />
            <Setter Property="Width"
                    Value="0" />
        </Style>
        <Style Selector="Border#TriggerSidebarOuterContainer.mobile Border#ActionPropertyOuterContainer.expanded">
            <Setter Property="Width">
                <Setter.Value>
                    <MultiBinding Converter="{x:Static local:MpAvMultiDoubleMathConverter.Instance}"
                                  ConverterParameter="*">
                        <Binding Path="$parent[UserControl].Bounds.Width" />
                        <Binding>
                            <Binding.Source>
                                <sys:Double>0.5</sys:Double>
                            </Binding.Source>
                        </Binding>
                    </MultiBinding>
                </Setter.Value>
            </Setter>
        </Style>

        <Style Selector="Grid#TriggerSidebarContainer">
            <Setter Property="local:MpAvOrientedGridExtension.HorizontalRowDefinitions"
                    Value="Auto,*" />
            <Setter Property="local:MpAvOrientedGridExtension.VerticalRowDefinitions"
                    Value="Auto,*" />
        </Style>

        <Style Selector="Border#TriggerSidebarOuterContainer.mobile.popout:not(.vert) Grid#TriggerSidebarContainer">
            <Setter Property="local:MpAvOrientedGridExtension.HorizontalRowDefinitions"
                    Value="*" />
            <Setter Property="local:MpAvOrientedGridExtension.HorizontalColumnDefinitions"
                    Value="Auto,0.5*" />
        </Style>

        <Style Selector="Border#TriggerSidebarOuterContainer:not(.mobile):not(.popout) Grid#TriggerSidebarContainer">
            <Setter Property="local:MpAvOrientedGridExtension.HorizontalRowDefinitions">
                <Setter.Value>
                    <RowDefinitions>
                        <RowDefinition Height="*"
                                       MaxHeight="{Binding ObservedContainerScreenHeight, Source={x:Static local:MpAvClipTrayViewModel.Instance}}" />
                    </RowDefinitions>
                </Setter.Value>
            </Setter>
        </Style>

        <Style Selector="Border#TriggerSidebarOuterContainer Border#ActionDesignerOuterContainerBorder">
            <Setter Property="local:MpAvOrientedGridExtension.HorizontalRow"
                    Value="1" />
            <Setter Property="local:MpAvOrientedGridExtension.HorizontalColumn"
                    Value="0" />
            <Setter Property="local:MpAvOrientedGridExtension.VerticalRow"
                    Value="1" />
        </Style>
        <Style Selector="Border#TriggerSidebarOuterContainer.mobile.popout:not(.vert) Border#ActionDesignerOuterContainerBorder">
            <Setter Property="local:MpAvOrientedGridExtension.HorizontalRow"
                    Value="0" />
            <Setter Property="local:MpAvOrientedGridExtension.HorizontalColumn"
                    Value="1" />
        </Style>

        <Style Selector="Border#TriggerSidebarOuterContainer.mobile.popout:not(.vert) Border#ActionDesignerOuterContainerBorder">
            <Setter Property="MinWidth"
                    Value="{StaticResource DefMinWidth}" />
        </Style>
        <Style Selector="Border#TriggerSidebarOuterContainer:not(.popout) Border#ActionDesignerOuterContainerBorder">
            <Setter Property="MinHeight"
                    Value="{StaticResource DefMinHeight}" />
        </Style>
        <Style Selector="Border#TriggerSidebarOuterContainer:not(.popout):not(.vert) Border#ActionDesignerOuterContainerBorder">
            <!--<Setter Property="MinHeight"
                    Value="0" />-->
        </Style>
        <Style Selector="Border#TriggerSidebarOuterContainer:not(.mobile).popout ScrollViewer#TriggerScrollViewer, Border#TriggerSidebarOuterContainer:not(.mobile).popout ScrollViewer#PropertyScrollViewer">
            <Setter Property="HorizontalScrollBarVisibility"
                    Value="Hidden" />
            <Setter Property="VerticalScrollBarVisibility"
                    Value="Hidden" />
        </Style>
        <Style Selector="Border#TriggerSidebarOuterContainer:not(.mobile).vert ScrollViewer#TriggerScrollViewer">
            <Setter Property="HorizontalScrollBarVisibility"
                    Value="Hidden" />
            <Setter Property="VerticalScrollBarVisibility"
                    Value="Hidden" />
        </Style>
        <Style Selector="Border#TriggerSidebarOuterContainer:not(.mobile).vert ScrollViewer#PropertyScrollViewer">
            <Setter Property="HorizontalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="VerticalScrollBarVisibility"
                    Value="Auto" />
        </Style>
        <Style Selector="Border#TriggerSidebarOuterContainer:not(.mobile) ScrollViewer#TriggerScrollViewer">
            <Setter Property="HorizontalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="VerticalScrollBarVisibility"
                    Value="Auto" />
        </Style>
        <Style Selector="Border#TriggerSidebarOuterContainer:not(.mobile) ScrollViewer#PropertyScrollViewer">
            <Setter Property="HorizontalScrollBarVisibility"
                    Value="Hidden" />
            <Setter Property="VerticalScrollBarVisibility"
                    Value="Hidden" />
        </Style>

        <!--  EXPANDER  -->
        <Style Selector="ToggleButton#ExpandButton local|MpAvTintedImage#ExpanderImage">
            <Setter Property="Source"
                    Value="{Binding Source={StaticResource EdgeArrowRightImage}, ConverterParameter=test, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
        </Style>
        <Style Selector="ToggleButton#ExpandButton:checked local|MpAvTintedImage#ExpanderImage">
            <Setter Property="Source"
                    Value="{Binding Source={StaticResource EdgeArrowLeftImage}, ConverterParameter=test, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
        </Style>

        <!--  HEADER  -->
        <Style Selector="Border#ActionPropertyOuterContainer">
            <Setter Property="MaxHeight"
                    Value="{x:Static sys:Double.PositiveInfinity}" />
        </Style>
        <Style Selector="Border#TriggerSidebarOuterContainer.vert Border#ActionPropertyOuterContainer">
            <Setter Property="MaxHeight"
                    Value="{Binding Bounds.Height, ElementName=TriggerSidebarOuterContainer}" />
        </Style>
        <Style Selector="Label.h1">
            <Setter Property="Margin"
                    Value="0,15,0,0" />
        </Style>

        <Style Selector="Border.headeredBorder">
            <Setter Property="BorderThickness"
                    Value="2" />
            <Setter Property="CornerRadius"
                    Value="10" />
            <Setter Property="Margin"
                    Value="10,10,20,10" />
            <Setter Property="Padding"
                    Value="5,7.5" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ThemeWhiteColor}" />
        </Style>
        <Style Selector="Border#TriggerSidebarOuterContainer.mobile Border.headeredBorder">
            <Setter Property="BorderThickness"
                    Value="0" />
        </Style>

        <!--  SCROLL VIEWERS  -->
        <Style Selector=":is(Control)">
            <Setter Property="ScrollViewer.IsScrollChainingEnabled"
                    Value="False" />
        </Style>
        <Style Selector="Grid#TriggerSidebarContainer.mobile ScrollViewer">
            <Setter Property="VerticalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="HorizontalScrollBarVisibility"
                    Value="Auto" />
        </Style>
        <Style Selector="ScrollViewer#TriggerScrollViewer">
            <Setter Property="HorizontalScrollBarVisibility"
                    Value="Disabled" />
            <Setter Property="VerticalScrollBarVisibility"
                    Value="Auto" />
        </Style>
        <Style Selector="Border#TriggerSidebarOuterContainer.mobile ScrollViewer#TriggerScrollViewer">
            <Setter Property="HorizontalScrollBarVisibility"
                    Value="Disabled" />
            <Setter Property="VerticalScrollBarVisibility"
                    Value="Disabled" />
        </Style>
    </local:MpAvUserControl.Styles>
    <Border x:Name="TriggerSidebarOuterContainer"
            Classes.vert="{Binding IsVerticalOrientation, Source={x:Static local:MpAvMainWindowViewModel.Instance}}"
            Classes.popout="{Binding IsWindowOpen}"
            Classes.mobile="{Binding IsMobileOrWindowed, Source={x:Static local:MpAvThemeViewModel.Instance}}"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch">
        <ScrollViewer x:Name="TriggerScrollViewer">
            <Grid x:Name="TriggerSidebarContainer"
                  Classes="oriented"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch">
                <!--  TRIGGER SELECTOR & SELECTED ACTION PROPERTY COLUMN  -->

                <Border x:Name="ActionPropertyOuterContainer"
                        Classes="expand-width"
                        Classes.expanded="{Binding IsPropertyViewExpanded}"
                        VerticalAlignment="Stretch">
                    <ScrollViewer x:Name="PropertyScrollViewer"
                                  VerticalAlignment="Stretch"
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden">
                        <Grid RowDefinitions="Auto,*"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch">

                            <!--  TRIGGER SELECTOR HEADER  -->
                            <Border Classes="headeredBorder"
                                    VerticalAlignment="Top"
                                    HorizontalAlignment="Stretch">
                                <Grid RowDefinitions="Auto,Auto,Auto"
                                      ColumnDefinitions="*">

                                    <!--  TRIGGER LABEL  -->

                                    <Label x:Name="TriggerLabel"
                                           Grid.Row="0"
                                           Grid.Column="0"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Top"
                                           Classes="h1"
                                           Margin="0"
                                           Content="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SidebarTriggersToolTip}" />

                                    <!--  ADD TRIGGER BUTTON  -->

                                    <Button x:Name="AddTriggerButton"
                                            IsVisible="{Binding !IsMobileOrWindowed, Source={x:Static local:MpAvThemeViewModel.Instance}}"
                                            Grid.Row="0"
                                            HorizontalAlignment="Right"
                                            Cursor="Hand"
                                            Classes="no-bg no-hover-bg outlineOver"
                                            Command="{Binding ShowTriggerSelectorMenuCommand}"
                                            CommandParameter="{Binding $self}">
                                        <ToolTip.Tip>
                                            <local:MpAvToolTipView ToolTipText="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.TriggersAddNewTriggerToolTip}" />
                                        </ToolTip.Tip>
                                        <Image Source="{Binding ., Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}, Source={StaticResource AddGreenImage}}"
                                               Margin="5"
                                               Width="15"
                                               Height="15" />
                                    </Button>

                                    <!--  TRIGGER UNDERLINE  -->

                                    <Border Grid.Row="1"
                                            Grid.Column="0"
                                            Grid.ColumnSpan="2"
                                            Classes="labelUnderline"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Bottom" />

                                    <Grid Grid.Row="2"
                                          ColumnDefinitions="Auto,Auto"
                                          RowDefinitions="Auto,Auto">

                                        <!--  TRIGGER SELECTOR  -->

                                        <Border Classes="iconLabelComboBox"
                                                HorizontalAlignment="Left"
                                                Grid.Row="0"
                                                Grid.Column="0">
                                            <ComboBox x:Name="TriggerComboBox"
                                                      Width="330"
                                                      SelectedIndex="{Binding SelectedTriggerIdx, Mode=TwoWay}"
                                                      ItemsSource="{Binding Triggers}">
                                                <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Border Classes="outerComboBoxItemBorder"
                                                                IsVisible="{Binding ., Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}">
                                                            <DockPanel LastChildFill="True">
                                                                <Image DockPanel.Dock="Left"
                                                                       Source="{Binding IconResourceObj, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}, ConverterParameter=ThemeInteractiveColor}" />
                                                                <TextBlock Text="{Binding Label}" />
                                                            </DockPanel>
                                                        </Border>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>
                                        </Border>

                                        <!--  TRIGGER OPTIONS  -->
                                        <local:MpAvTriggerOptionsView Grid.Row="1"
                                                                      Grid.Column="0"
                                                                      CornerRadius="5"
                                                                      Margin="0,10,0,0"
                                                                      Padding="5"
                                                                      IsVisible="{Binding SelectedTrigger, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}"
                                                                      HorizontalAlignment="Stretch"
                                                                      VerticalAlignment="Center" />
                                    </Grid>
                                </Grid>
                            </Border>


                            <!--  SELECTED TRIGGER ACTION PROPERTY  -->
                            <Border x:Name="SelectedTriggerContainer"
                                    Grid.Row="1"
                                    IsVisible="{Binding IsChecked, ElementName=ExpandButton}"
                                    VerticalAlignment="Top"
                                    HorizontalAlignment="Stretch"
                                    Width="{Binding Bounds.Width, ElementName=TriggerComboBox}"
                                    Classes="headeredBorder"
                                    DataContext="{Binding FocusAction}">
                                <local:MpAvActionPropertyView ClipToBounds="False"
                                                              IsVisible="{Binding ., Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}, FallbackValue=False, TargetNullValue=False}" />
                            </Border>
                        </Grid>

                    </ScrollViewer>
                </Border>


                <!--  EXPAND BUTTON  -->
                <ToggleButton x:Name="ExpandButton"
                              Grid.Row="0"
                              Margin="0,20,0,0"
                              IsVisible="{Binding IsMobileOrWindowed, Source={x:Static local:MpAvThemeViewModel.Instance}}"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Top"
                              Classes="default-button no-bg no-hover-bg no-border"
                              IsChecked="{Binding IsPropertyViewExpanded}">
                    <local:MpAvTintedImage x:Name="ExpanderImage"
                                           Width="25"
                                           Height="25"
                                           Tint="{Binding Foreground, ElementName=TriggerLabel}" />
                </ToggleButton>

                <GridSplitter x:Name="ActionPropertyDesignerHorizontalModeSplitter"
                              IsVisible="False"
                              Classes="vertical"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Stretch">
                    <!--<GridSplitter.IsVisible>
                        <MultiBinding Converter="{x:Static BoolConverters.And}">
                            <Binding Path="IsHorizontal" />
                            <Binding Path="IsWindowOpen" />
                        </MultiBinding>
                    </GridSplitter.IsVisible>-->
                </GridSplitter>

                <!--  SELECTED TRIGGER DESIGNER COLUMN  -->

                <Border x:Name="ActionDesignerOuterContainerBorder"
                        MaxHeight="{Binding Bounds.Height, ElementName=TriggerSidebarOuterContainer}"
                        Margin="10"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch">
                    <Border x:Name="ActionDesignerInnerContainerBorder"
                            ClipToBounds="True"
                            BorderBrush="White"
                            BorderThickness="5"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch">
                        <local:MpAvActionDesignerView HorizontalAlignment="Stretch"
                                                      HorizontalContentAlignment="Stretch"
                                                      VerticalAlignment="Stretch" />
                    </Border>
                </Border>
            </Grid>
        </ScrollViewer>
    </Border>
</local:MpAvUserControl>
