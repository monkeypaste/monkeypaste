<local:MpAvUserControl x:Name="TagView"
                       xmlns="https://github.com/avaloniaui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:sys="clr-namespace:System;assembly=mscorlib"
                       xmlns:local="using:MonkeyPaste.Avalonia"
                       xmlns:pcl="using:MonkeyPaste"
                       x:TypeArguments="local:MpAvTagTileViewModel"
                       x:DataType="local:MpAvTagTileViewModel"
                       x:CompileBindings="True"
                       mc:Ignorable="d"
                       x:Class="MonkeyPaste.Avalonia.MpAvTagView">
    <local:MpAvUserControl.Styles>
        <!--  DEFAULTS  -->
        <Style Selector="Border#TagNameBorder">
            <Setter Property="Background"
                    Value="{DynamicResource TagTileBgColor}" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource TagTileBorderColor}" />
            <!--<Setter Property="BorderDashArray"
                    Value="{x:Null}" />
            <Setter Property="BorderDashOffset"
                    Value="0" />-->
        </Style>
        <Style Selector="Border#TagCountContainer">
            <Setter Property="BoxShadow"
                    Value="0 0 black" />
        </Style>
        <!--  OUTER BORDER SELECTION  -->
        <Style Selector="Border#TagNameBorder.isselected">
            <Setter Property="Background"
                    Value="{DynamicResource TagTileSelectedBgColor}" />
        </Style>
        <Style Selector="Border#TagNameBorder:pointerover:not(.isselected)">
            <Setter Property="Background"
                    Value="{DynamicResource TagTileHoverBgColor}" />
        </Style>
        <Style Selector="Border#TagNameBorder.contextfocus, Border#TagNameBorder:not(.isselected).activeTag">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource TagTileContextFocusBorderColor}" />
        </Style>

        <!--  DND  -->
        <Style Selector="Border#TagNameBorder.drag">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource DragSourceBrush}" />
        </Style>
        <Style Selector="Border#TagNameBorder.dragover">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource DragIntoBrush}" />
        </Style>
        <Style Selector="Border#TagNameBorder.dragover,Border#TagNameBorder.drag">
            <!--<Setter Property="BorderDashArray"
                    Value="2,2" />
            <Setter Property="BorderDashOffset"
                    Value="2" />-->
        </Style>
        <Style Selector="Border#TagNameBorder.dragover.dragover_invalid">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource DragInvalidBrush}" />
        </Style>

        <!--  COUNT BORDER  -->
        <Style Selector="Border#TagNameBorder.isselected Border#TagCountContainer">
            <Setter Property="BoxShadow"
                    Value="1 1 3 black" />
        </Style>

        <!--  PSEUDO TAG COUNT PLACEHOLDER IMAGE  -->
        <Style Selector="Image.isquery"
               x:DataType="local:MpAvTagTileViewModel">
            <Setter Property="Source">
                <Setter.Value>
                    <MultiBinding Converter="{x:Static local:MpAvMultiObjToContrastTintedBitmapConverter.Instance}">
                        <Binding Path="TagHexColor" />
                        <Binding Source="{StaticResource FilterImage}" />
                    </MultiBinding>
                </Setter.Value>
            </Setter>
        </Style>

        <Style Selector="Image.isgroup"
               x:DataType="local:MpAvTagTileViewModel">
            <Setter Property="Source">
                <Setter.Value>
                    <MultiBinding Converter="{x:Static local:MpAvMultiObjToContrastTintedBitmapConverter.Instance}">
                        <Binding Path="TagHexColor" />
                        <Binding Source="{StaticResource FolderSolidImage}" />
                    </MultiBinding>
                </Setter.Value>
            </Setter>
        </Style>

        <Style Selector="Image.istrash"
               x:DataType="local:MpAvTagTileViewModel">
            <Setter Property="Source">
                <Setter.Value>
                    <MultiBinding Converter="{x:Static local:MpAvMultiObjToContrastTintedBitmapConverter.Instance}">
                        <Binding Path="TagHexColor" />
                        <Binding Source="{StaticResource TrashCanImage}" />
                    </MultiBinding>
                </Setter.Value>
            </Setter>
        </Style>

        <!--<Style Selector="Grid#TagViewContainerGrid:pointerover TextBlock.istrash, Border#TagNameBorder.isselected TextBlock.istrash">
            <Setter Property="IsVisible"
                    Value="True" />
        </Style>

        <Style Selector="TextBlock.istrash">
            <Setter Property="IsVisible"
                    Value="False" />
        </Style>-->

    </local:MpAvUserControl.Styles>
    <Grid x:Name="TagViewContainerGrid"
          local:MpAvIsHoveringExtension.IsEnabled="True"
          local:MpAvIsHoveringExtension.IsHovering="{Binding IsHovering, Mode=TwoWay}"
          local:MpAvPointerCommandExtension.IsEnabled="True"
          local:MpAvPointerCommandExtension.RoutingStrategy="Tunnel"
          local:MpAvPointerCommandExtension.LeftReleaseCommand="{Binding SelectThisTagCommand}"
          local:MpAvPointerCommandExtension.LeftReleaseCommandParameter="{Binding $self}"
          local:MpAvPointerCommandExtension.RightPressCommand="{Binding ShowContextMenuCommand}"
          local:MpAvPointerCommandExtension.RightPressCommandParameter="{Binding $self}"
          local:MpAvPointerCommandExtension.DoubleLeftPressCommand="{Binding RenameTagCommand}"
          local:MpAvPointerCommandExtension.DoubleLeftPressCommandParameter="IsPressEvent"
          local:MpAvPointerCommandExtension.IsHoldingEnabled="{Binding !IsDesktop, Source={x:Static local:MpAvThemeViewModel.Instance}}"
          local:MpAvPointerCommandExtension.HoldingCommand="{Binding ShowContextMenuCommand}"
          local:MpAvPointerCommandExtension.HoldingCommandParameter="{Binding $self}"
          Cursor="Hand"
          HorizontalAlignment="Stretch"
          VerticalAlignment="Stretch"
          MaxWidth="130"
          Height="30">
        <Border x:Name="TagNameBorder"
                CornerRadius="7"
                Margin="5,0,0,0"
                Padding="1"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                MinHeight="20"
                Classes.drag="{Binding IsDragging}"
                Classes.islinked="{Binding IsLinkedToSelectedClipTile}"
                Classes.isselected="{Binding IsSelected}"
                Classes.dragover="{Binding IsContentDragOverTag}"
                Classes.dragover_invalid="{Binding !IsContentDragOverTagValid}"
                Classes.contextfocus="{Binding IsContextMenuOpen}"
                Classes.activeTag="{Binding IsActiveTag}"
                BorderThickness="1.5">

            <Border.Transitions>
                <Transitions>
                    <BrushTransition Property="Background"
                                     Duration="0:0:0.3" />
                </Transitions>
            </Border.Transitions>
            <StackPanel Orientation="Horizontal">
                <Grid VerticalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <!--  Tag Count Box  -->
                    <Border x:Name="TagCountContainer"
                            CornerRadius="5"
                            Grid.Column="0"
                            MinWidth="{Binding $self.Bounds.Height}"
                            MinHeight="20"
                            Margin="1"
                            Padding="4,1"
                            BorderThickness="1.5"
                            BorderBrush="{Binding $self.Background, Converter={x:Static local:MpAvBrushToContrastBrushConverter.Instance}}"
                            Background="{Binding TagHexColor, Converter={x:Static local:MpAvStringHexToBrushConverter.Instance}}">
                        <Grid x:Name="CountContainer">
                            <TextBlock x:Name="TagCountTextBlock"
                                       Background="Transparent"
                                       VerticalAlignment="Stretch"
                                       HorizontalAlignment="Center"
                                       TextAlignment="Center"
                                       Text="{Binding TagClipCount, Converter={x:Static local:MpAvNullableToStringConverter.Instance}}"
                                       Foreground="{Binding $parent[Border].BorderBrush}">
                                <TextBlock.IsVisible>
                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                        <Binding Path="TagClipCount"
                                                 Converter="{x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}"
                                                 ConverterParameter="allowzero" />
                                        <Binding Path="!IsVisible"
                                                 ElementName="TagCountBusySpinner" />

                                        <Binding Path="!IsVisible"
                                                 ElementName="TagCountProgressSpinner" />
                                    </MultiBinding>

                                </TextBlock.IsVisible>
                            </TextBlock>
                            <Image x:Name="PseudoTagPlaceholderImage"
                                   Classes="square"
                                   Classes.isgroup="{Binding IsGroupTag}"
                                   Classes.isquery="{Binding IsQueryTag}"
                                   Classes.istrash="{Binding IsTrashTag}"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch"
                                   Stretch="UniformToFill"
                                   Margin="1">
                                <Image.IsVisible>
                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                        <Binding Path="!IsVisible"
                                                 ElementName="TagCountTextBlock" />
                                        <Binding Path="!IsVisible"
                                                 ElementName="TagCountBusySpinner" />
                                        <Binding Path="!IsVisible"
                                                 ElementName="TagCountProgressSpinner" />
                                    </MultiBinding>
                                </Image.IsVisible>
                            </Image>
                            <local:MpAvBusySpinnerView x:Name="TagCountBusySpinner"
                                                       HorizontalAlignment="Stretch"
                                                       VerticalAlignment="Stretch"
                                                       Cursor="Wait">
                                <local:MpAvBusySpinnerView.IsVisible>
                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                        <!--<Binding Path="IsSelected" />-->
                                        <Binding Path="IsActiveTag" />
                                        <Binding Path="IsBusy"
                                                 Source="{x:Static local:MpAvClipTrayViewModel.Instance}" />
                                        <Binding Path="!IsSubQuerying"
                                                 Source="{x:Static local:MpAvClipTrayViewModel.Instance}" />
                                        <Binding Path="!IsVisible"
                                                 ElementName="TagCountProgressSpinner" />
                                    </MultiBinding>
                                </local:MpAvBusySpinnerView.IsVisible>
                            </local:MpAvBusySpinnerView>
                            <local:MpAvProgressSpinner x:Name="TagCountProgressSpinner"
                                                       HorizontalAlignment="Stretch"
                                                       VerticalAlignment="Stretch"
                                                       ArcWidth="1"
                                                       PercentBrush="Lime"
                                                       RingBrush="Red"
                                                       LabelBrush="Transparent"
                                                       IsVisible="{Binding TotalAnalysisCount, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}"
                                                       Percent="{Binding PercentLoaded}" />
                        </Grid>
                    </Border>
                    <!--  Tag Name TextBox/ Marquee  -->
                    <local:MpAvMarqueeTextBox x:Name="TagNameTextBox"
                                              Grid.Column="1"
                                              FocusAdorner="{x:Null}"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Center"
                                              HorizontalContentAlignment="Left"
                                              VerticalContentAlignment="Center"
                                              Margin="5,0,0,0"
                                              FontSize="16"
                                              Padding="0"
                                              MaxWidth="110"
                                              EditOnFocus="False"
                                              FocusOnDisableReadOnly="True"
                                              EnableReadOnlyOnLostFocus="False"
                                              SelectViewModelOnFocus="False"
                                              CancelEditCommand="{Binding CancelRenameTagCommand}"
                                              BeginEditCommand="{Binding FinishRenameTagCommand}"
                                              ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                              ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                              IsReadOnly="{Binding IsTagNameReadOnly, Mode=TwoWay}"
                                              ReadOnlyBackground="Transparent"
                                              ReadOnlyForeground="{Binding TagTextHexColor, Converter={x:Static local:MpAvStringHexToBrushConverter.Instance}}"
                                              Text="{Binding TagName, Mode=TwoWay}" />
                </Grid>
                <local:MpAvOptionsButton x:Name="MobileContextOptionButton"
                                         VerticalAlignment="Stretch"
                                         Margin="3,0"
                                         local:MpAvMenuExtension.IsEnabled="True"
                                         Command="{Binding ShowContextMenuCommand}"
                                         CommandParameter="{Binding $self}">
                    <local:MpAvOptionsButton.IsVisible>
                        <MultiBinding Converter="{x:Static BoolConverters.And}">
                            <Binding Path="IsSelected" />
                            <Binding Path="!IsDesktop"
                                     Source="{x:Static local:MpAvThemeViewModel.Instance}" />
                        </MultiBinding>
                    </local:MpAvOptionsButton.IsVisible>
                </local:MpAvOptionsButton>
            </StackPanel>
        </Border>

        <Border Background="Red"
                ClipToBounds="False"
                MinWidth="15"
                Height="15"
                CornerRadius="7.5"
                BorderThickness="1"
                BorderBrush="White"
                VerticalAlignment="Top"
                HorizontalAlignment="Left"
                IsVisible="{Binding BadgeCount, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}">
            <Grid>
                <!--  NOTE Text won't horizontally align unless in grid  -->
                <TextBlock Foreground="White"
                           FontSize="10"
                           MinWidth="15"
                           Height="15"
                           TextAlignment="Center"
                           HorizontalAlignment="Stretch"
                           VerticalAlignment="Stretch"
                           Text="{Binding BadgeCount}" />
            </Grid>
        </Border>
    </Grid>
</local:MpAvUserControl>
