<local:MpAvUserControl x:Name="TagView"
                       xmlns="https://github.com/avaloniaui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:sys="clr-namespace:System;assembly=mscorlib"
                       xmlns:local="using:MonkeyPaste.Avalonia"
                       xmlns:pcl="using:MonkeyPaste"
                       x:TypeArguments="local:MpAvTagTileViewModel"
                       x:DataType="local:MpAvTagTileViewModel"
                       x:CompileBindings="True"
                       mc:Ignorable="d"
                       x:Class="MonkeyPaste.Avalonia.MpAvTagView">
    <local:MpAvUserControl.Styles>
        <Style Selector="Border#TagNameBorder">
            <Setter Property="Background"
                    Value="{DynamicResource TagTileBgColor}" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource TagTileBorderColor}" />
            <Setter Property="BorderDashArray"
                    Value="{x:Null}" />
            <Setter Property="BorderDashOffset"
                    Value="0" />
        </Style>
        <Style Selector="Border#TagNameBorder.isselected">
            <Setter Property="Background"
                    Value="{DynamicResource TagTileSelectedBgColor}" />
        </Style>
        <Style Selector="Border#TagNameBorder:pointerover:not(.isselected)">
            <Setter Property="Background"
                    Value="{DynamicResource TagTileHoverBgColor}" />
        </Style>
        <Style Selector="Border#TagNameBorder.contextfocus, Border#TagNameBorder:not(.isselected).activeTag">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource TagTileContextFocusBorderColor}" />
        </Style>

        <Style Selector="Border#TagNameBorder.drag">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource DragSourceBrush}" />
        </Style>
        <Style Selector="Border#TagNameBorder.dragover">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource DragIntoBrush}" />
        </Style>
        <Style Selector="Border#TagNameBorder.dragover,Border#TagNameBorder.drag">
            <Setter Property="BorderDashArray"
                    Value="2,2" />
            <Setter Property="BorderDashOffset"
                    Value="2" />
        </Style>
        <Style Selector="Border#TagNameBorder.dragover.dragover_invalid">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource DragInvalidBrush}" />
        </Style>
    </local:MpAvUserControl.Styles>
    <Grid x:Name="TagViewContainerGrid"
          local:MpAvIsHoveringExtension.IsEnabled="True"
          local:MpAvIsHoveringExtension.IsHovering="{Binding IsHovering, Mode=TwoWay}"
          local:MpAvIsHoveringExtension.HoverCursor="Hand"
          local:MpAvPointerPressCommandExtension.IsEnabled="True"
          local:MpAvPointerPressCommandExtension.RoutingStrategy="Tunnel"
          local:MpAvPointerPressCommandExtension.LeftPressCommand="{Binding SelectTagCommand}"
          local:MpAvPointerPressCommandExtension.RightPressCommand="{Binding ShowContextMenuCommand}"
          local:MpAvPointerPressCommandExtension.RightPressCommandParameter="{Binding $self}"
          local:MpAvPointerPressCommandExtension.DoubleLeftPressCommand="{Binding RenameTagCommand}"
          local:MpAvPointerPressCommandExtension.DoubleLeftPressCommandParameter="IsPressEvent"
          local:MpAvPointerPressCommandExtension.IsHoldingEnabled="{Binding !IsDesktop, Source={x:Static local:MpAvThemeViewModel.Instance}}"
          local:MpAvPointerPressCommandExtension.HoldingCommand="{Binding ShowContextMenuCommand}"
          local:MpAvPointerPressCommandExtension.HoldingCommandParameter="{Binding $self}"
          Cursor="Hand"
          HorizontalAlignment="Stretch"
          VerticalAlignment="Stretch"
          MinWidth="100"
          MaxWidth="130"
          Height="30">
        <Border x:Name="TagNameBorder"
                CornerRadius="7"
                Margin="5,0,0,0"
                Padding="1"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                MinHeight="20"
                Classes.drag="{Binding IsDragging}"
                Classes.islinked="{Binding IsLinkedToSelectedClipTile}"
                Classes.isgroup="{Binding IsGroupTag}"
                Classes.isselected="{Binding IsSelected}"
                Classes.dragover="{Binding IsContentDragOverTag}"
                Classes.dragover_invalid="{Binding !IsContentDragOverTagValid}"
                Classes.contextfocus="{Binding IsContextMenuOpen}"
                Classes.activeTag="{Binding IsActiveTag}"
                BorderThickness="1.5">
            <StackPanel Orientation="Horizontal">
                <Grid VerticalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <!--  Tag Count Box  -->
                    <Border CornerRadius="5"
                            Grid.Column="0"
                            MinWidth="{Binding $self.Bounds.Height}"
                            MinHeight="20"
                            Margin="1"
                            Padding="4,1"
                            BorderThickness="0"
                            Background="{Binding TagHexColor, Converter={x:Static local:MpAvStringHexToBrushConverter.Instance}}">
                        <TextBlock x:Name="TagCountTextBlock"
                                   Background="Transparent"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"
                                   Text="{Binding TagClipCount, Converter={x:Static local:MpAvNullableToStringConverter.Instance}}"
                                   Foreground="{Binding $parent.Background, Converter={x:Static local:MpAvBrushToContrastBrushConverter.Instance}}" />
                    </Border>
                    <!--  Tag Name TextBox/ Marquee  -->
                    <local:MpAvMarqueeTextBox x:Name="TagNameTextBox"
                                              Grid.Column="1"
                                              FocusAdorner="{x:Null}"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Center"
                                              HorizontalContentAlignment="Left"
                                              VerticalContentAlignment="Center"
                                              Margin="5,0,0,0"
                                              FontSize="16"
                                              Padding="0"
                                              MinWidth="70"
                                              MaxWidth="100"
                                              EditOnFocus="False"
                                              FocusOnDisableReadOnly="True"
                                              EnableReadOnlyOnLostFocus="False"
                                              SelectViewModelOnFocus="False"
                                              CancelEditCommand="{Binding CancelRenameTagCommand}"
                                              BeginEditCommand="{Binding FinishRenameTagCommand}"
                                              ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                              ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                              IsReadOnly="{Binding IsTagNameReadOnly, Mode=TwoWay}"
                                              FontFamily="Segoe UI"
                                              ReadOnlyBackground="Transparent"
                                              ReadOnlyForeground="{Binding TagTextHexColor, Converter={x:Static local:MpAvStringHexToBrushConverter.Instance}}"
                                              Text="{Binding TagName, Mode=TwoWay}" />
                </Grid>
                <local:MpAvOptionsButton x:Name="MobileContextOptionButton"
                                         VerticalAlignment="Stretch"
                                         Margin="3,0"
                                         local:MpAvMenuExtension.IsEnabled="True"
                                         Command="{Binding ShowContextMenuCommand}"
                                         CommandParameter="{Binding $self}">
                    <local:MpAvOptionsButton.IsVisible>
                        <MultiBinding Converter="{x:Static BoolConverters.And}">
                            <Binding Path="IsSelected" />
                            <Binding Path="!IsDesktop"
                                     Source="{x:Static local:MpAvThemeViewModel.Instance}" />
                        </MultiBinding>
                    </local:MpAvOptionsButton.IsVisible>
                </local:MpAvOptionsButton>
            </StackPanel>
        </Border>

        <Border Background="Red"
                ClipToBounds="False"
                MinWidth="15"
                Height="15"
                CornerRadius="7.5"
                BorderThickness="1"
                BorderBrush="White"
                VerticalAlignment="Top"
                HorizontalAlignment="Left"
                IsVisible="{Binding BadgeCount, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}">
            <TextBlock Foreground="White"
                       FontSize="10"
                       MinWidth="15"
                       Height="15"
                       TextAlignment="Center"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Text="{Binding BadgeCount}" />
        </Border>
    </Grid>
</local:MpAvUserControl>
