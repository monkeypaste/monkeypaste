<local:MpAvUserControl xmlns="https://github.com/avaloniaui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:local="using:MonkeyPaste.Avalonia"
                       xmlns:pcl="using:MonkeyPaste"
                       xmlns:sys="clr-namespace:System;assembly=mscorlib"
                       x:TypeArguments="local:MpAvClipTrayViewModel"
                       x:DataType="local:MpAvClipTrayViewModel"
                       x:CompileBindings="True"
                       DataContext="{x:Static local:MpAvClipTrayViewModel.Instance}"
                       mc:Ignorable="d"
                       d:DesignWidth="800"
                       d:DesignHeight="450"
                       x:Class="MonkeyPaste.Avalonia.MpAvSidebarButtonGroupView">
    <local:MpAvUserControl.Styles>

        <Style Selector="RadioButton.sidebarRadio /template/ Border#RootBorder > Grid > Grid">
            <Setter Property="IsVisible"
                    Value="False" />
        </Style>
        <!--<Style Selector="RadioButton.sidebarRadio">
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TranslateTransform X="-15" />
                </Setter.Value>
            </Setter>
        </Style>-->

        <Style Selector="RadioButton.sidebarRadio">
            <Setter Property="local:MpAvPointerCommandExtension.IsEnabled"
                    Value="True" />
            <Setter Property="local:MpAvPointerCommandExtension.DragEnterCommand"
                    Value="{Binding SidebarButtonDragEnterCommand, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}}" />
            <Setter Property="local:MpAvPointerCommandExtension.DragEnterCommandParameter"
                    Value="{Binding $self}" />
            <Setter Property="Background"
                    Value="{StaticResource HitTestableTransparent}" />
            <Setter Property="Cursor"
                    Value="Hand" />
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Padding"
                    Value="10" />
            <Setter Property="CornerRadius"
                    Value="3" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="ClipToBounds"
                    Value="False" />
        </Style>

        <Style Selector="local|MpAvSidebarButtonGroupView:not(.horizontal) RadioButton.sidebarRadio">
            <Setter Property="Height"
                    Value="{Binding $self.Bounds.Width}" />
        </Style>
        <Style Selector="local|MpAvSidebarButtonGroupView.horizontal RadioButton.sidebarRadio">
            <Setter Property="Width"
                    Value="{Binding $self.Bounds.Height}" />
        </Style>

        <Style Selector="RadioButton.sidebarRadio PathIcon">
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="Width"
                    Value="24" />
            <Setter Property="Height"
                    Value="24" />
        </Style>
        <Style Selector="RadioButton.sidebarRadio:pointerover /template/ ContentPresenter">
            <Setter Property="Background"
                    Value="Transparent" />
        </Style>
        <Style Selector="RadioButton.sidebarRadio PathIcon">
            <Setter Property="Foreground"
                    Value="DimGray" />
        </Style>
        <Style Selector="RadioButton.sidebarRadio:pointerover PathIcon">
            <Setter Property="Foreground"
                    Value="{DynamicResource HoverDefaultBorderBrush}" />
        </Style>
        <Style Selector="RadioButton.sidebarRadio:pointerover:checked PathIcon">
            <Setter Property="Foreground"
                    Value="{DynamicResource SelectedBorderBrush}" />
        </Style>
        <Style Selector="RadioButton.sidebarRadio:checked PathIcon">
            <Setter Property="Foreground"
                    Value="{DynamicResource HoverSelectedBorderBrush}" />
        </Style>
    </local:MpAvUserControl.Styles>
    <Grid x:Name="SidebarButtonGroupContainerGrid"
          Classes.horizontal="{Binding !IsVerticalOrientation, Source={x:Static local:MpAvMainWindowViewModel.Instance}}"
          IsTabStop="True"
          TabIndex="0"
          HorizontalAlignment="Stretch"
          VerticalAlignment="Stretch"
          RowDefinitions="*,*,*,*,*">
        <RadioButton x:Name="TagTreeToggleButton"
                     Grid.Row="0"
                     GroupName="SidebarButtonGroup"
                     Classes="sidebarRadio"
                     Command="{Binding ToggleIsSidebarItemSelectedCommand, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}}"
                     CommandParameter="0"
                     IsChecked="{Binding SelectedItemIdx, Mode=OneWay, ConverterParameter=0, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}, Converter={x:Static local:MpAvIntToBoolConverter.Instance}}">

            <RadioButton.RenderTransform>
                <TransformGroup>
                    <RotateTransform />
                    <TranslateTransform X="-15" />
                </TransformGroup>
            </RadioButton.RenderTransform>
            <ToolTip.Tip>
                <local:MpAvToolTipView ToolTipText="Collection Tree" />
            </ToolTip.Tip>
            <PathIcon Data="{StaticResource BooksSvg}" />
        </RadioButton>
        <RadioButton x:Name="ClipboardHandlerToggleButton"
                     Grid.Row="1"
                     GroupName="SidebarButtonGroup"
                     Classes="sidebarRadio"
                     Command="{Binding ToggleIsSidebarItemSelectedCommand, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}}"
                     CommandParameter="1"
                     IsChecked="{Binding SelectedItemIdx, Mode=OneWay, ConverterParameter=1, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}, Converter={x:Static local:MpAvIntToBoolConverter.Instance}}">

            <RadioButton.RenderTransform>
                <TransformGroup>
                    <RotateTransform />
                    <TranslateTransform X="-15" />
                </TransformGroup>
            </RadioButton.RenderTransform>
            <ToolTip.Tip>
                <local:MpAvToolTipView ToolTipText="Clipboard Handlers" />
            </ToolTip.Tip>
            <PathIcon Data="{StaticResource ClipboardSvg}" />
        </RadioButton>
        <RadioButton x:Name="AnalyzerToggleButton"
                     Grid.Row="2"
                     GroupName="SidebarButtonGroup"
                     Classes="sidebarRadio"
                     Command="{Binding ToggleIsSidebarItemSelectedCommand, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}}"
                     CommandParameter="2"
                     IsChecked="{Binding SelectedItemIdx, Mode=OneWay, ConverterParameter=2, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}, Converter={x:Static local:MpAvIntToBoolConverter.Instance}}">

            <RadioButton.RenderTransform>
                <TransformGroup>
                    <RotateTransform />
                    <TranslateTransform X="-15" />
                </TransformGroup>
            </RadioButton.RenderTransform>
            <ToolTip.Tip>
                <local:MpAvToolTipView ToolTipText="Analyze" />
            </ToolTip.Tip>
            <PathIcon Data="{StaticResource BrainOutlineSvg}" />
        </RadioButton>
        <RadioButton x:Name="ActionsToggleButton"
                     Grid.Row="3"
                     GroupName="SidebarButtonGroup"
                     Classes="sidebarRadio"
                     Command="{Binding ToggleIsSidebarItemSelectedCommand, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}}"
                     CommandParameter="3"
                     IsChecked="{Binding SelectedItemIdx, Mode=OneWay, ConverterParameter=3, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}, Converter={x:Static local:MpAvIntToBoolConverter.Instance}}">

            <RadioButton.RenderTransform>
                <TransformGroup>
                    <RotateTransform />
                    <TranslateTransform X="-15" />
                </TransformGroup>
            </RadioButton.RenderTransform>
            <ToolTip.Tip>
                <local:MpAvToolTipView ToolTipText="Actions" />
            </ToolTip.Tip>
            <PathIcon Data="{StaticResource BoltSvg}" />
        </RadioButton>
        <RadioButton x:Name="AppModeToggleButton"
                     Grid.Row="4"
                     GroupName="SidebarButtonGroup"
                     Classes="sidebarRadio"
                     Command="{Binding ToggleIsSidebarItemSelectedCommand, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}}"
                     CommandParameter="4"
                     IsEnabled="{Binding !IsAppPaused}">
            <RadioButton.RenderTransform>
                <TransformGroup>
                    <RotateTransform />
                    <TranslateTransform X="-15" />
                </TransformGroup>
            </RadioButton.RenderTransform>
            <RadioButton.Resources>
                <SolidColorBrush x:Key="FlyoutPresenterBackground">Transparent</SolidColorBrush>
                <SolidColorBrush x:Key="FlyoutBorderThemeBrush">Transparent</SolidColorBrush>
                <Thickness x:Key="FlyoutContentThemePadding">0,0,0,0</Thickness>
                <Thickness x:Key="FlyoutBorderThemePadding">0,0,0,0</Thickness>
                <sys:Double x:Key="FlyoutThemeMinWidth">0</sys:Double>
                <sys:Double x:Key="FlyoutThemeMinHeight">0</sys:Double>
            </RadioButton.Resources>
            <ToolTip.Tip>
                <local:MpAvToolTipView ToolTipText="Clipboard Modes" />
            </ToolTip.Tip>
            <RadioButton.Flyout>
                <Flyout Placement="RightEdgeAlignedBottom">
                    <Panel Background="Transparent"
                           Width="100"
                           Height="150">
                        <!--<Panel.RenderTransform>
                            <TranslateTransform X="20" />
                        </Panel.RenderTransform>-->

                        <local:MpAvAppModeFlyoutView Background="Transparent"
                                                     HorizontalAlignment="Stretch"
                                                     VerticalAlignment="Stretch" />
                    </Panel>

                </Flyout>
            </RadioButton.Flyout>
            <!--<Grid>
                <Image IsVisible="{Binding IsAutoCopyMode, Source={x:Static local:MpAvClipTrayViewModel.Instance}}"
                       Source="{Binding Source={StaticResource LeftClickImage}, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
                <Image IsVisible="{Binding IsRightClickPasteMode, Source={x:Static local:MpAvClipTrayViewModel.Instance}}"
                       Source="{Binding Source={StaticResource RightClickImage}, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />

                <PathIcon Data="{StaticResource MouseSvg}" />
            </Grid>-->
            <PathIcon Data="{StaticResource MouseSvg}" />
        </RadioButton>
    </Grid>
</local:MpAvUserControl>
