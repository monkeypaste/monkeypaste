<local:MpAvUserControl xmlns="https://github.com/avaloniaui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:local="using:MonkeyPaste.Avalonia"
                       xmlns:pcl="using:MonkeyPaste"
                       xmlns:sys="clr-namespace:System;assembly=mscorlib"
                       x:TypeArguments="local:MpAvClipTrayViewModel"
                       x:DataType="local:MpAvClipTrayViewModel"
                       x:CompileBindings="True"
                       DataContext="{x:Static local:MpAvClipTrayViewModel.Instance}"
                       mc:Ignorable="d"
                       d:DesignWidth="800"
                       d:DesignHeight="450"
                       x:Class="MonkeyPaste.Avalonia.MpAvSidebarButtonGroupView">
    <local:MpAvUserControl.Resources>
        <TransformOperations x:Key="SwitchlessRadioButtonTransformOps">translateX(-15px)</TransformOperations>
    </local:MpAvUserControl.Resources>
    <local:MpAvUserControl.Styles>
        <!--  CNTR ORIENTATION  -->
        <Style Selector="Grid#SidebarButtonGroupContainerGrid">
            <Setter Property="local:MpAvOrientedGridExtension.HorizontalRowDefinitions"
                    Value="*,*,0,*,*,*" />
            <Setter Property="local:MpAvOrientedGridExtension.VerticalColumnDefinitions"
                    Value="*,*,0,*,*,*" />
        </Style>

        <Style Selector="Grid#SidebarButtonGroupContainerGrid.mobile">
            <Setter Property="local:MpAvOrientedGridExtension.HorizontalRowDefinitions"
                    Value="*,*,*,*,*,0" />
            <Setter Property="local:MpAvOrientedGridExtension.VerticalColumnDefinitions"
                    Value="*,*,*,*,*,0" />
        </Style>

        <!--  SIDEBAR RADIO BUTTONS  -->
        <Style Selector="RadioButton.sidebarRadio">
            <Setter Property="local:MpAvDropExtension.IsEnabled"
                    Value="True" />
            <Setter Property="local:MpAvDropExtension.DragEnterCommand"
                    Value="{Binding SidebarButtonDragEnterCommand, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}}" />
            <Setter Property="local:MpAvDropExtension.DragEnterCommandParameter"
                    Value="{Binding $self}" />
            <Setter Property="Background"
                    Value="{StaticResource HitTestableTransparent}" />
            <Setter Property="Cursor"
                    Value="Hand" />
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Padding"
                    Value="10" />
            <Setter Property="CornerRadius"
                    Value="3" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="ClipToBounds"
                    Value="False" />
        </Style>

        <Style Selector="local|MpAvSidebarButtonGroupView:not(.horizontal) RadioButton.sidebarRadio">
            <Setter Property="Height"
                    Value="{Binding $self.Bounds.Width}" />
        </Style>
        <Style Selector="local|MpAvSidebarButtonGroupView.horizontal RadioButton.sidebarRadio">
            <Setter Property="Width"
                    Value="{Binding $self.Bounds.Height}" />
        </Style>

        <Style Selector="RadioButton.sidebarRadio PathIcon, RadioButton.sidebarRadio Image, RadioButton.sidebarRadio Grid.inner-container">
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="Width"
                    Value="24" />
            <Setter Property="Height"
                    Value="24" />
        </Style>
        <Style Selector="RadioButton.sidebarRadio Image">
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="Width"
                    Value="30" />
            <Setter Property="Height"
                    Value="30" />
        </Style>
        <Style Selector="RadioButton.sidebarRadio:pointerover /template/ ContentPresenter">
            <Setter Property="Background"
                    Value="Transparent" />
        </Style>
        <Style Selector="RadioButton.sidebarRadio PathIcon">
            <Setter Property="Foreground"
                    Value="{DynamicResource DefaultBorderBrush}" />
        </Style>
        <Style Selector="RadioButton.sidebarRadio:pointerover PathIcon">
            <Setter Property="Foreground"
                    Value="{DynamicResource HoverDefaultBorderBrush}" />
        </Style>
        <Style Selector="RadioButton.sidebarRadio:pointerover:checked PathIcon">
            <Setter Property="Foreground"
                    Value="{DynamicResource SelectedBorderBrush}" />
        </Style>
        <Style Selector="RadioButton.sidebarRadio:checked PathIcon">
            <Setter Property="Foreground"
                    Value="{DynamicResource HoverSelectedBorderBrush}" />
        </Style>

        <Style Selector="RadioButton#AppModeToggleButton, RadioButton#AppModeToggleButton:unchecked, RadioButton#AppModeToggleButton:not(.mouseMode)">
            <Setter Property="local:MpAvImageTintExtension.Tint"
                    Value="{DynamicResource DefaultBorderBrush}" />
        </Style>
        <Style Selector="RadioButton#AppModeToggleButton:pointerover">
            <Setter Property="local:MpAvImageTintExtension.Tint"
                    Value="{DynamicResource HoverDefaultBorderBrush}" />
        </Style>

        <Style Selector="RadioButton#AppModeToggleButton.mouseMode">
            <Setter Property="local:MpAvImageTintExtension.Tint"
                    Value="{DynamicResource HoverSelectedBorderBrush}" />
        </Style>

        <!--  TRAY TOGGLE  -->

        <Style Selector="ToggleButton#ToggleClipTrayButton">
            <!--<Setter Property="Margin"
                    Value="0,10,0,10" />-->
        </Style>
        <Style Selector="Grid#SidebarButtonGroupContainerGrid.horizontal ToggleButton#ToggleClipTrayButton">
            <!--<Setter Property="Margin"
                    Value="10,0,10,0" />-->
        </Style>
        <Style Selector="ToggleButton#ToggleClipTrayButton Image">
            <Setter Property="Source"
                    Value="{Binding Source={StaticResource FilterImage}, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}, ConverterParameter=ThemeAccent3Color}" />
        </Style>
        <Style Selector="ToggleButton#ToggleClipTrayButton:checked Image">
            <Setter Property="Source"
                    Value="{Binding Source={StaticResource PinImage}, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}, ConverterParameter=ThemeAccent3Color}" />
        </Style>
    </local:MpAvUserControl.Styles>

    <Grid x:Name="SidebarButtonGroupContainerGrid"
          Classes="oriented"
          Classes.mobile="{Binding IsMobileOrWindowed, Source={x:Static local:MpAvThemeViewModel.Instance}}"
          Classes.horizontal="{Binding !IsVerticalOrientation, Source={x:Static local:MpAvMainWindowViewModel.Instance}}"
          HorizontalAlignment="Stretch"
          VerticalAlignment="Stretch">

        <!--  TAGS  -->

        <RadioButton x:Name="TagTreeToggleButton"
                     local:MpAvOrientedGridExtension.HorizontalRow="0"
                     local:MpAvOrientedGridExtension.VerticalColumn="0"
                     GroupName="SidebarButtonGroup"
                     Classes="sidebarRadio switchless"
                     RenderTransform="{DynamicResource SwitchlessRadioButtonTransformOps}"
                     Command="{Binding ToggleIsSidebarItemSelectedCommand, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}}"
                     CommandParameter="0"
                     IsChecked="{Binding SelectedItemIdx, Mode=OneWay, ConverterParameter=eq|0, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}, Converter={x:Static local:MpAvIntCompareToBoolConverter.Instance}}">
            <ToolTip.Tip>
                <local:MpAvToolTipView ToolTipText="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SidebarCollectionsToolTip}" />
            </ToolTip.Tip>
            <Grid Classes="inner-container"
                  ClipToBounds="False">
                <PathIcon Data="{StaticResource BooksSvg}" />
                <!--  BADGE  -->
                <Border Background="Red"
                        ClipToBounds="False"
                        Width="10"
                        Height="10"
                        CornerRadius="7.5"
                        BorderThickness="1"
                        BorderBrush="White"
                        VerticalAlignment="Top"
                        HorizontalAlignment="Left"
                        RenderTransform="translateX(-5px) translateY(-5px)"
                        IsVisible="{Binding BadgeCount, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}, Source={x:Static local:MpAvTagTrayViewModel.Instance}}">
                    <!--<Grid>
                    -->
                    <!--  NOTE Text won't horizontally align unless in grid  -->
                    <!--
                        <TextBlock Foreground="White"
                                   FontSize="10"
                                   MinWidth="15"
                                   Height="15"
                                   TextAlignment="Center"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch"
                                   Text="{Binding BadgeCount}" />
                    </Grid>-->
                </Border>
            </Grid>

        </RadioButton>

        <!--  CLIPBOARD  -->

        <RadioButton x:Name="ClipboardHandlerToggleButton"
                     local:MpAvOrientedGridExtension.HorizontalRow="1"
                     local:MpAvOrientedGridExtension.VerticalColumn="1"
                     GroupName="SidebarButtonGroup"
                     Classes="sidebarRadio switchless"
                     RenderTransform="{DynamicResource SwitchlessRadioButtonTransformOps}"
                     Command="{Binding ToggleIsSidebarItemSelectedCommand, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}}"
                     CommandParameter="1"
                     IsChecked="{Binding SelectedItemIdx, Mode=OneWay, ConverterParameter=eq|1, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}, Converter={x:Static local:MpAvIntCompareToBoolConverter.Instance}}">

            <ToolTip.Tip>
                <local:MpAvToolTipView ToolTipText="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SidebarClipboardHandlersToolTip}" />
            </ToolTip.Tip>
            <PathIcon Data="{StaticResource ClipboardSvg}" />
        </RadioButton>

        <!--  CLIP TRAY TOGGLE  -->

        <ToggleButton x:Name="ToggleClipTrayButton"
                      Classes="noBg noHoverBg noBorder"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      Margin="5"
                      local:MpAvOrientedGridExtension.HorizontalRow="2"
                      local:MpAvOrientedGridExtension.VerticalColumn="2"
                      IsVisible="{Binding IsMobileOrWindowed, Source={x:Static local:MpAvThemeViewModel.Instance}}"
                      Command="{Binding ToggleExpandQueryTrayCommand, Source={x:Static local:MpAvClipTrayViewModel.Instance}}"
                      IsChecked="{Binding IsPinTrayVisible, Mode=OneWay, Source={x:Static local:MpAvClipTrayViewModel.Instance}}">
            <Image />
        </ToggleButton>

        <!--  ANALYZERS  -->

        <RadioButton x:Name="AnalyzerToggleButton"
                     local:MpAvOrientedGridExtension.HorizontalRow="3"
                     local:MpAvOrientedGridExtension.VerticalColumn="3"
                     GroupName="SidebarButtonGroup"
                     Classes="sidebarRadio switchless"
                     RenderTransform="{DynamicResource SwitchlessRadioButtonTransformOps}"
                     Command="{Binding ToggleIsSidebarItemSelectedCommand, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}}"
                     CommandParameter="2"
                     IsChecked="{Binding SelectedItemIdx, Mode=OneWay, ConverterParameter=eq|2, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}, Converter={x:Static local:MpAvIntCompareToBoolConverter.Instance}}">

            <ToolTip.Tip>
                <local:MpAvToolTipView ToolTipText="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.CommonAnalyzeButtonLabel}" />
            </ToolTip.Tip>
            <PathIcon Data="{StaticResource BrainOutlineSvg}" />
        </RadioButton>

        <!--  ACTIONS  -->

        <RadioButton x:Name="ActionsToggleButton"
                     local:MpAvOrientedGridExtension.HorizontalRow="4"
                     local:MpAvOrientedGridExtension.VerticalColumn="4"
                     GroupName="SidebarButtonGroup"
                     Classes="sidebarRadio switchless"
                     RenderTransform="{DynamicResource SwitchlessRadioButtonTransformOps}"
                     Command="{Binding ToggleIsSidebarItemSelectedCommand, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}}"
                     CommandParameter="3"
                     IsChecked="{Binding SelectedItemIdx, Mode=OneWay, ConverterParameter=eq|3, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}, Converter={x:Static local:MpAvIntCompareToBoolConverter.Instance}}">

            <ToolTip.Tip>
                <local:MpAvToolTipView ToolTipText="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SidebarTriggersToolTip}" />
            </ToolTip.Tip>
            <PathIcon Data="{StaticResource BoltSvg}" />
        </RadioButton>

        <!--  MODES  -->

        <RadioButton x:Name="AppModeToggleButton"
                     IsVisible="{Binding !IsMobileOrWindowed, Source={x:Static local:MpAvThemeViewModel.Instance}}"
                     Classes.mouseMode="{Binding IsAnyMouseModeEnabled, Source={x:Static local:MpAvClipTrayViewModel.Instance}}"
                     local:MpAvOrientedGridExtension.HorizontalRow="5"
                     local:MpAvOrientedGridExtension.VerticalColumn="5"
                     local:MpAvImageTintExtension.IsEnabled="True"
                     GroupName="EmptyGroup"
                     Classes="sidebarRadio switchless tt_near_bottom"
                     RenderTransform="{DynamicResource SwitchlessRadioButtonTransformOps}"
                     Command="{Binding ToggleIsSidebarItemSelectedCommand, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}}"
                     CommandParameter="4"
                     IsEnabled="{Binding !IsIgnoringClipboardChanges}">
            <RadioButton.Resources>
                <!--<SolidColorBrush x:Key="FlyoutPresenterBackground">Transparent</SolidColorBrush>
                <SolidColorBrush x:Key="FlyoutBorderThemeBrush">Transparent</SolidColorBrush>-->
                <Thickness x:Key="FlyoutContentThemePadding">0,0,0,0</Thickness>
                <Thickness x:Key="FlyoutBorderThemePadding">0,0,0,0</Thickness>
                <sys:Double x:Key="FlyoutThemeMinWidth">0</sys:Double>
                <sys:Double x:Key="FlyoutThemeMinHeight">0</sys:Double>
            </RadioButton.Resources>
            <ToolTip.Tip>
                <local:MpAvToolTipView ToolTipText="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SidebarMouseModesToolTip}" />
            </ToolTip.Tip>
            <RadioButton.Flyout>
                <Flyout Placement="{Binding MouseModeFlyoutPlacement, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}}"
                        HorizontalOffset="{Binding MouseModeHorizontalOffset, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}}"
                        VerticalOffset="{Binding MouseModeVerticalOffset, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}}">
                    <Panel>
                        <local:MpAvAppModeFlyoutView HorizontalAlignment="Stretch"
                                                     VerticalAlignment="Stretch" />
                    </Panel>
                </Flyout>
            </RadioButton.Flyout>
            <Grid>
                <Image local:MpAvImageTintExtension.ImageResourceObj="{StaticResource MouseNoneClickImage}" />

                <Image IsVisible="{Binding IsAutoCopyMode, Source={x:Static local:MpAvClipTrayViewModel.Instance}}"
                       local:MpAvImageTintExtension.ImageResourceObj="{StaticResource MouseLeftClickImage}" />
                <Image IsVisible="{Binding IsRightClickPasteMode, Source={x:Static local:MpAvClipTrayViewModel.Instance}}"
                       local:MpAvImageTintExtension.ImageResourceObj="{StaticResource MouseRightClickImage}" />
                <Image IsVisible="{Binding IsDropWidgetEnabled, Source={x:Static local:MpAvExternalDropWindowViewModel.Instance}}"
                       local:MpAvImageTintExtension.ImageResourceObj="{StaticResource MouseFilledBaseImage}" />
            </Grid>
        </RadioButton>
    </Grid>
</local:MpAvUserControl>
