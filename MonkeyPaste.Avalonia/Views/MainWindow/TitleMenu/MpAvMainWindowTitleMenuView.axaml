<local:MpAvUserControl xmlns="https://github.com/avaloniaui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:local="using:MonkeyPaste.Avalonia"
                       xmlns:pcl="using:MonkeyPaste"
                       x:TypeArguments="local:MpAvMainWindowTitleMenuViewModel"
                       x:DataType="local:MpAvMainWindowTitleMenuViewModel"
                       x:CompileBindings="True"
                       DataContext="{x:Static local:MpAvMainWindowTitleMenuViewModel.Instance}"
                       mc:Ignorable="d"
                       d:DesignWidth="800"
                       d:DesignHeight="30"
                       x:Class="MonkeyPaste.Avalonia.MpAvMainWindowTitleMenuView">
    <Grid x:Name="TitlePanel"
          Background="{Binding TitleBarBackgroundHexColor, Converter={StaticResource StringHexToBrushConverter}}"
          HorizontalAlignment="Stretch"
          VerticalAlignment="Stretch">
        <Grid.Styles>
            <Style Selector="PathIcon">
                <Setter Property="Foreground"
                        Value="Black" />
            </Style>
            <Style Selector="PathIcon /template/ Path">
                <Setter Property="Margin"
                        Value="0,3,0,3" />
            </Style>
            <Style Selector="ToggleButton:checked /template/ ContentPresenter">
                <Setter Property="Background"
                        Value="Transparent" />
            </Style>
            <Style Selector="ToggleButton:checked PathIcon">
                <Setter Property="Foreground"
                        Value="Lime" />
            </Style>
            <Style Selector=":is(Button):pointerover PathIcon">
                <Setter Property="Foreground"
                        Value="Cornsilk" />
            </Style>
        </Grid.Styles>
        <!--  Left Side  -->

        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Left">
            <!--  Settings Toggle Button  -->

            <ToggleButton x:Name="SettingsToggleButton"
                          IsChecked="{Binding IsVisible, Source={x:Static local:MpAvSettingsWindowViewModel.Instance}}"
                          ToolTip.ShowDelay="500">
                <ToolTip.Tip>
                    <local:MpAvTooltipView ToolTipText="Settings" />
                </ToolTip.Tip>
                <PathIcon Data="{StaticResource CogSvg}" />
            </ToggleButton>

            <!--  Lock Toggle Button  -->

            <ToggleButton x:Name="LockToggleButton"
                          IsChecked="{Binding IsMainWindowLocked, Source={x:Static local:MpAvMainWindowViewModel.Instance}, Mode=TwoWay}"
                          ToolTip.ShowDelay="500">
                <ToolTip.Tip>
                    <local:MpAvTooltipView ToolTipText="Lock" />
                </ToolTip.Tip>
                <PathIcon Data="{StaticResource LockOutlineSvg}" />
            </ToggleButton>
        </StackPanel>

        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Right">
            <!--  Zoom Factor Slider  -->
            <Grid Width="125"
                  Opacity="0.5"
                  local:MpAvIsHoveringExtension.IsEnabled="True"
                  local:MpAvIsHoveringExtension.IsHovering="{Binding IsZoomSliderHovering, Mode=TwoWay}"
                  local:MpAvIsHoveringExtension.HoverCursor="Hand"
                  Height="{Binding Bounds.Height, ElementName=TitlePanel}"
                  Margin="0,0,10,0">
                <Border HorizontalAlignment="Stretch"
                        VerticalAlignment="Center"
                        Margin="0,2,0,0"
                        Height="1"
                        Background="{Binding ZoomSliderHexColor, Converter={StaticResource StringHexToBrushConverter}}" />
                <Border HorizontalAlignment="Left"
                        VerticalAlignment="Stretch"
                        Margin="0,5"
                        Width="1"
                        Background="{Binding ZoomSliderHexColor, Converter={StaticResource StringHexToBrushConverter}}" />
                <Border HorizontalAlignment="Right"
                        VerticalAlignment="Stretch"
                        Margin="0,5"
                        Width="1"
                        Background="{Binding ZoomSliderHexColor, Converter={StaticResource StringHexToBrushConverter}}" />
                <Viewbox Stretch="Fill"
                         VerticalAlignment="Center"
                         Margin="0">
                    <Slider x:Name="ZoomFactorSlider"
                            Value="{Binding ZoomFactor, Mode=TwoWay, Source={x:Static local:MpAvClipTrayViewModel.Instance}}"
                            Minimum="0.25"
                            Maximum="3"
                            TickFrequency="0.1"
                            Width="250"
                            Height="40"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Orientation="Horizontal"
                            IsSnapToTickEnabled="False"
                            Margin="0,0,5,14">
                        <Slider.Styles>
                            <Style Selector="Slider /template/ Thumb">
                                <Setter Property="ToolTip.Tip"
                                        Value="{Binding $parent[Slider].Value, Mode=OneWay, StringFormat='Value \{0:f\}'}" />
                                <Setter Property="ToolTip.Placement"
                                        Value="Top" />
                                <Setter Property="ToolTip.VerticalOffset"
                                        Value="-10" />
                                <Setter Property="ToolTip.HorizontalOffset"
                                        Value="-30" />
                                <Setter Property="Cursor"
                                        Value="SizeWestEast" />
                            </Style>
                            <Style Selector="Slider /template/ RepeatButton">
                                <Setter Property="IsVisible"
                                        Value="False" />
                                <!--<Setter Property="Padding"
                                        Value="0" />-->
                            </Style>
                            <Style Selector="Slider /template/ Thumb.SliderThumbStyle">
                                <Setter Property="Template">
                                    <ControlTemplate>
                                        <Grid>
                                            <Border Width="12"
                                                    local:MpAvIsHoveringExtension.IsEnabled="True"
                                                    local:MpAvIsHoveringExtension.HoverCursor="Hand"
                                                    Height="40"
                                                    CornerRadius="3"
                                                    Background="White" />
                                        </Grid>
                                    </ControlTemplate>
                                </Setter>
                            </Style>
                            <Style Selector="Slider /template/ Thumb.SliderThumbStyle:pointerover">
                                <Setter Property="Template">
                                    <ControlTemplate>
                                        <Grid>
                                            <Border Width="12"
                                                    Height="40"
                                                    local:MpAvIsHoveringExtension.IsEnabled="True"
                                                    local:MpAvIsHoveringExtension.HoverCursor="Hand"
                                                    CornerRadius="3"
                                                    Background="Yellow" />
                                        </Grid>
                                    </ControlTemplate>
                                </Setter>
                            </Style>
                            <Style Selector="Slider /template/ Thumb.SliderThumbStyle:pressed">
                                <Setter Property="Template">
                                    <ControlTemplate>
                                        <Grid>
                                            <Border Width="12"
                                                    Height="40"
                                                    local:MpAvIsHoveringExtension.IsEnabled="True"
                                                    local:MpAvIsHoveringExtension.HoverCursor="Hand"
                                                    CornerRadius="3"
                                                    Background="Red" />
                                        </Grid>
                                    </ControlTemplate>
                                </Setter>
                            </Style>
                        </Slider.Styles>
                    </Slider>
                </Viewbox>
            </Grid>
            <!--  Layout Toggle Button  -->
            <ToggleButton x:Name="GridLayoutToggleButton"
                          IsChecked="{Binding IsGridLayout, Mode=TwoWay, Source={x:Static local:MpAvClipTrayViewModel.Instance}}"
                          ToolTip.ShowDelay="0">
                <Grid>
                    <PathIcon IsVisible="{Binding IsGridLayout, Source={x:Static local:MpAvClipTrayViewModel.Instance}}"
                              Data="{StaticResource StackLayoutSvg}">
                        <ToolTip.Tip>
                            <local:MpAvTooltipView ToolTipText="Stack Layout" />
                        </ToolTip.Tip>
                    </PathIcon>
                    <PathIcon IsVisible="{Binding !IsGridLayout, Source={x:Static local:MpAvClipTrayViewModel.Instance}}"
                              Data="{StaticResource GridLayoutSvg}">
                        <ToolTip.Tip>
                            <local:MpAvTooltipView ToolTipText="Grid Layout" />
                        </ToolTip.Tip>
                    </PathIcon>
                </Grid>

            </ToggleButton>
            <!--  Orientation Cycle CW Button  -->

            <!--<Button x:Name="MainWindowCycleOrientationCwButton"
                    Command="{Binding CycleOrientationCommand}"
                    CommandParameter="CW"
                    ToolTip.ShowDelay="0">
                <ToolTip.Tip>
                    <local:MpAvTooltipView ToolTipText="Cycle Orientation CW" />
                </ToolTip.Tip>

                <PathIcon Data="{StaticResource RotateCcwSvg}">
                    <PathIcon.RenderTransform>
                        <ScaleTransform ScaleX="-1" />
                    </PathIcon.RenderTransform>
                </PathIcon>
            </Button>-->

            <!--  Orientation Cycle CCW Button  -->

            <Button x:Name="MainWindowCycleOrientationCcwButton"
                    Command="{Binding CycleOrientationCommand, Source={x:Static local:MpAvMainWindowViewModel.Instance}}"
                    CommandParameter="CCW"
                    local:MpAvPointerPressCommandExtension.IsEnabled="True"
                    local:MpAvPointerPressCommandExtension.RightPressCommand="{Binding CycleOrientationCommand, Source={x:Static local:MpAvMainWindowViewModel.Instance}}"
                    local:MpAvPointerPressCommandExtension.RightPressCommandParameter="CW"
                    ToolTip.ShowDelay="0">
                <ToolTip.Tip>
                    <local:MpAvTooltipView ToolTipText="Cycle Orientation CCW" />
                </ToolTip.Tip>

                <PathIcon Data="{StaticResource RotateCcwSvg}" />
            </Button>
        </StackPanel>

    </Grid>
</local:MpAvUserControl>
