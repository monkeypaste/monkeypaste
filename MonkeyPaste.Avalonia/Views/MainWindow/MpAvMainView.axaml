<local:MpAvUserControl xmlns="https://github.com/avaloniaui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:local="using:MonkeyPaste.Avalonia"
                       xmlns:pcl="using:MonkeyPaste"
                       x:TypeArguments="local:MpAvMainWindowViewModel"
                       x:DataType="local:MpAvMainWindowViewModel"
                       x:CompileBindings="True"
                       mc:Ignorable="d"
                       d:DesignWidth="800"
                       d:DesignHeight="450"
                       x:Class="MonkeyPaste.Avalonia.MpAvMainView">
    <local:MpAvUserControl.RenderTransform>
        <TranslateTransform />
    </local:MpAvUserControl.RenderTransform>
    <Canvas x:Name="MainWindowCanvas"
            Width="{Binding MainWindowWidth}"
            Height="{Binding MainWindowHeight}">
        <Grid x:Name="MainWindowContainerGrid"
              Width="{Binding MainWindowWidth}"
              Height="{Binding MainWindowHeight}">

            <!--  Filter Menu  -->
            <local:MpAvFilterMenuView x:Name="FilterMenuView"
                                      Grid.Row="1"
                                      local:MpAvSizeObserverExtension.IsEnabled="True"
                                      local:MpAvSizeObserverExtension.ObservedWidth="{Binding ObservedFilterMenuWidth, Source={x:Static local:MpAvFilterMenuViewModel.Instance}, Mode=TwoWay}"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Center" />

            <!--  CONTENT ROW  -->

            <Grid x:Name="MainWindowTrayGrid"
                  Grid.Row="3"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch">

                <!--  CONTENT TRAY CONTAINER  -->

                <local:MpAvClipTrayContainerView x:Name="ClipTrayContainerView"
                                                 Width="{Binding ContainerBoundWidth, Source={x:Static local:MpAvClipTrayViewModel.Instance}}"
                                                 Height="{Binding ContainerBoundHeight, Source={x:Static local:MpAvClipTrayViewModel.Instance}}"
                                                 local:MpAvSizeObserverExtension.IsEnabled="True"
                                                 local:MpAvSizeObserverExtension.ObservedWidth="{Binding ObservedContainerScreenWidth, Source={x:Static local:MpAvClipTrayViewModel.Instance}, Mode=TwoWay}"
                                                 local:MpAvSizeObserverExtension.ObservedHeight="{Binding ObservedContainerScreenHeight, Source={x:Static local:MpAvClipTrayViewModel.Instance}, Mode=TwoWay}"
                                                 HorizontalAlignment="Stretch"
                                                 VerticalAlignment="Stretch" />

                <!--  SELECTED SIDEBAR ITEM  -->
                <local:MpAvSidebarSelectedItemView x:Name="SelectedSidebarContainerBorder"
                                                   Width="{Binding ContainerBoundWidth, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}}"
                                                   Height="{Binding ContainerBoundHeight, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}}"
                                                   HorizontalAlignment="Stretch"
                                                   VerticalAlignment="Stretch" />


                <!--  SIDEBAR SPLITTER  -->

                <local:MpAvMovableGridSplitter x:Name="SidebarGridSplitter"
                                               Grid.Column="1"
                                               ResizeDirection="Columns"
                                               HorizontalAlignment="Right"
                                               VerticalAlignment="Stretch"
                                               Classes.sidebarSplitter="True"
                                               Classes.desktop="{Binding IsDesktop, Source={x:Static local:MpAvThemeViewModel.Instance}}"
                                               Classes.vertical="{Binding !IsVerticalOrientation}"
                                               Classes.horizontal="{Binding IsVerticalOrientation}"
                                               local:MpAvPointerCommandExtension.IsEnabled="True"
                                               local:MpAvPointerCommandExtension.RoutingStrategy="Tunnel"
                                               local:MpAvPointerCommandExtension.DoubleLeftPressCommand="{Binding ResetSelectedSidebarSplitterCommand, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}}"
                                               local:MpAvPointerCommandExtension.DoubleLeftPressCommandParameter="{Binding $self}"
                                               local:MpAvPointerCommandExtension.RouteHoldToRightPress="False"
                                               local:MpAvPointerCommandExtension.RightPressCommand="{Binding ToggleIsSidebarItemSelectedCommand, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}}"
                                               local:MpAvPointerCommandExtension.RightPressCommandParameter="{Binding SelectedItemIdx, Source={x:Static local:MpAvSidebarItemCollectionViewModel.Instance}}">
                    <local:MpAvMovableGridSplitter.IsVisible>
                        <MultiBinding Converter="{x:Static BoolConverters.And}">
                            <Binding Path="SelectedItem"
                                     Source="{x:Static local:MpAvSidebarItemCollectionViewModel.Instance}"
                                     Converter="{x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}" />
                            <Binding Path="IsMultiWindow"
                                     Source="{x:Static local:MpAvThemeViewModel.Instance}" />
                        </MultiBinding>
                    </local:MpAvMovableGridSplitter.IsVisible>
                </local:MpAvMovableGridSplitter>

                <!--  SIDEBAR BUTTONS  -->
                <local:MpAvSidebarButtonGroupView x:Name="SidebarButtonGroup"
                                                  Grid.Column="0"
                                                  Padding="3"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch"
                                                  HorizontalContentAlignment="Stretch"
                                                  VerticalContentAlignment="Stretch">
                    <local:MpAvSidebarButtonGroupView.Background>
                        <SolidColorBrush Color="{DynamicResource ThemeGrayAccent3Color}" Opacity="{DynamicResource GlobalInteractiveOpacity}" />
                    </local:MpAvSidebarButtonGroupView.Background>
                </local:MpAvSidebarButtonGroupView>
            </Grid>


            <!--  Title Menu  -->
            <local:MpAvMainWindowTitleMenuView x:Name="MainWindowTitleView"
                                               Grid.Row="0"
                                               MaxHeight="{Binding TitleMenuHeight, Source={x:Static local:MpAvMainWindowTitleMenuViewModel.Instance}}"
                                               HorizontalAlignment="Stretch"
                                               VerticalAlignment="Stretch" />

            <!--  CHILD WINDOW OVERLAY  -->
            <local:MpAvOverlayContainerView x:Name="OverlayContainer"
                                            Grid.ColumnSpan="3"
                                            Grid.RowSpan="3"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Background="Transparent"
                                            IsVisible="{Binding IsMobileOrWindowed, Source={x:Static local:MpAvThemeViewModel.Instance}}" />
        </Grid>
    </Canvas>
</local:MpAvUserControl>