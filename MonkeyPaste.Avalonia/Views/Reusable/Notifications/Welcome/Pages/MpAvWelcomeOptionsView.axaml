<local:MpAvUserControl xmlns="https://github.com/avaloniaui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:sys="clr-namespace:System;assembly=mscorlib"
                       xmlns:av="clr-namespace:TheArtOfDev.HtmlRenderer.Avalonia;assembly=Avalonia.HtmlRenderer"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:local="using:MonkeyPaste.Avalonia"
                       x:DataType="local:MpAvWelcomeOptionGroupViewModel"
                       x:CompileBindings="True"
                       x:TypeArguments="local:MpAvWelcomeOptionGroupViewModel"
                       x:Class="MonkeyPaste.Avalonia.MpAvWelcomeOptionsView"
                       mc:Ignorable="d"
                       ClipToBounds="False"
                       d:DesignWidth="400"
                       d:DesignHeight="300">
    <local:MpAvUserControl.Styles>
        <!--  OPTION BUTTONS  -->

        <Style Selector="RadioButton.gestureButton">
            <Style.Resources>
                <SolidColorBrush x:Key="ToggleButtonBorderBrush" Color="{DynamicResource ThemeInteractiveBgColor}" />
                <SolidColorBrush x:Key="ToggleButtonBorderBrushPointerOver" Color="{DynamicResource ThemeAccent1Color}" />
                <SolidColorBrush x:Key="ToggleButtonBorderBrushPressed" Color="{DynamicResource ThemeAccent2Color}" />

                <SolidColorBrush x:Key="ToggleButtonBorderBrushChecked" Color="RoyalBlue" />
                <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedPointerOver" Color="{DynamicResource ThemeAccent1Color}" />
                <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedPressed" Color="{DynamicResource ThemeAccent2Color}" />

                <Thickness x:Key="ToggleButtonBorderThemeThickness">2.5</Thickness>
            </Style.Resources>
        </Style>
        <Style Selector="RadioButton.gestureButton:pointerover Image, RadioButton.gestureButton:checked Image">
            <!--<Setter Property="Effect"
                    Value="drop-shadow(5 5 7 black)" />-->
        </Style>
        <Style Selector="RadioButton.gestureButton:pointerover TextBlock">
            <!--<Setter Property="Effect"
                    Value="drop-shadow(0 0 3 white)" />-->
        </Style>
        <Style Selector="RadioButton.gestureButton:checked TextBlock">
            <!--<Setter Property="Effect"
                    Value="drop-shadow(0 0 3 white)" />-->
        </Style>

        <!--  CAPTION COLOR  -->
        <Style Selector="TransitioningContentControl#CaptionContainer TextBlock">
            <Setter Property="Foreground"
                    Value="White" />
        </Style>
        <Style Selector="TransitioningContentControl#CaptionContainer.checked TextBlock.description">
            <Setter Property="Foreground"
                    Value="RoyalBlue" />
        </Style>

        <!--  TRY GESTURE BUTTON  -->
        <Style Selector="Button.try"
               x:DataType="local:MpAvWelcomeNotificationViewModel">
            <Setter Property="MinWidth"
                    Value="150" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="CornerRadius"
                    Value="10" />
            <Setter Property="BorderBrush"
                    Value="White" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="Padding"
                    Value="10,20" />
        </Style>
        <Style Selector="Border.try"
               x:DataType="local:MpAvWelcomeNotificationViewModel">
            <Setter Property="BorderThickness"
                    Value="2" />
            <Setter Property="CornerRadius"
                    Value="10" />
            <Setter Property="BorderBrush"
                    Value="Transparent" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="Padding"
                    Value="10,3" />
        </Style>

        <Style Selector="Border.try:pointerover"
               x:DataType="local:MpAvWelcomeNotificationViewModel">
            <Setter Property="BorderBrush"
                    Value="White" />
        </Style>

        <Style Selector=":is(Button).try TextBlock, Border.try TextBlock"
               x:DataType="local:MpAvWelcomeNotificationViewModel">
            <Setter Property="DockPanel.Dock"
                    Value="Bottom" />
            <Setter Property="FontSize"
                    Value="16" />
            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="TextAlignment"
                    Value="Center" />
        </Style>

        <Style Selector=":is(Button).try Image, Border.try Image"
               x:DataType="local:MpAvWelcomeNotificationViewModel">
            <Setter Property="Width"
                    Value="30" />
            <Setter Property="Height"
                    Value="30" />
            <Setter Property="Margin"
                    Value="10" />
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
        </Style>

        <Style Selector=":is(Button).try Image"
               x:DataType="local:MpAvWelcomeNotificationViewModel">
            <Setter Property="Source"
                    Value="{Binding Source={StaticResource BellImage}, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
        </Style>
    </local:MpAvUserControl.Styles>
    <StackPanel Orientation="Vertical"
                MinHeight="500"
                Spacing="20"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">

        <!--  SPLASH IMAGE  -->

        <Image Width="200"
               Height="200"
               Margin="25"
               Classes="fadeIn"
               HorizontalAlignment="Center"
               VerticalAlignment="Center"
               Stretch="Uniform"
               Effect="drop-shadow(0 0 25 black)"
               Source="{Binding SplashIconSourceObj, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}"
               IsVisible="{Binding SplashIconSourceObj, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}" />

        <!--  CAPTION  -->
        <TextBlock Classes="description"
                   Text="{Binding Caption}" />

        <!--  ACCT MONTLY TOGGLE  -->
        <ToggleSwitch x:Name="MonthlyToggleButton"
                      DataContext="{x:Static local:MpAvWelcomeNotificationViewModel.Instance}"
                      x:DataType="local:MpAvWelcomeNotificationViewModel"
                      Classes="defaultButton"
                      Foreground="Black"
                      FontSize="16"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      IsVisible="{Binding IsAccountOptSelected}"
                      IsChecked="{Binding IsAccountMonthEnabled, Mode=TwoWay}"
                      FontWeight="SemiBold"
                      OnContent="{x:Static local:UiStrings.WelcomeAccountMonthlySwitchEnabled}"
                      OffContent="{x:Static local:UiStrings.WelcomeAccountMonthlySwitchDisabled}">
            <ToggleSwitch.Resources>

            </ToggleSwitch.Resources>
        </ToggleSwitch>

        <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Spacing="50">
            <!--  OPTION BUTTONS  -->
            <ItemsControl DockPanel.Dock="Top"
                          ItemsSource="{Binding Items}"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel ClipToBounds="False"
                                    Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid IsVisible="{Binding IsOptionVisible, Mode=OneWay}">
                            <!--  OPTION BUTTON  -->

                            <Border local:MpAvIsHoveringExtension.IsEnabled="True"
                                    local:MpAvIsHoveringExtension.IsHovering="{Binding IsHovering, Mode=TwoWay}"
                                    Classes="rejectWindowMove"
                                    Background="{StaticResource HitTestableTransparent}">
                                <RadioButton Classes="defaultButton gestureButton effectTrans"
                                             Theme="{StaticResource SwitchlessRadioButton}"
                                             GroupName="GestureProfile"
                                             CornerRadius="7"
                                             Margin="15"
                                             Padding="15,15,15,5"
                                             Width="200"
                                             Height="230"
                                             HorizontalContentAlignment="Center"
                                             VerticalContentAlignment="Center"
                                             Command="{Binding ToggleOptionCommand}"
                                             IsChecked="{Binding IsChecked, Mode=OneWay}">
                                    <DockPanel HorizontalAlignment="Stretch"
                                               VerticalAlignment="Stretch">
                                        <TextBlock DockPanel.Dock="Bottom"
                                                   HorizontalAlignment="Stretch"
                                                   VerticalAlignment="Bottom"
                                                   TextAlignment="Center"
                                                   FontSize="20"
                                                   Text="{Binding LabelText}" />
                                        <Image Width="160"
                                               Height="160"
                                               Margin="0,0,0,10"
                                               Stretch="UniformToFill"
                                               Source="{Binding IconSourceObj, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}}" />
                                    </DockPanel>
                                </RadioButton>
                            </Border>

                            <!--  TRIAL BADGE  -->

                            <Border x:Name="FreeTrialOuterContainer"
                                    Classes="rejectWindowMove"
                                    Margin="0,10,0,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Top"
                                    Background="Crimson"
                                    CornerRadius="7"
                                    IsVisible="{Binding LabelText2, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <!--<TranslateTransform X="0" Y="-50" />-->
                                        <!--<RotateTransform Angle="45" />-->
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Border BorderBrush="White"
                                        BorderThickness="3"
                                        CornerRadius="{Binding $parent.CornerRadius}"
                                        Margin="3"
                                        Padding="7,5">
                                    <TextBlock FontWeight="SemiBold"
                                               FontSize="14"
                                               Foreground="WhiteSmoke"
                                               Text="{Binding LabelText2}"
                                               TextAlignment="Center"
                                               TextWrapping="NoWrap" />
                                </Border>
                            </Border>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <!--  TRY GESTURE BUTTON  -->
            <ToggleButton IsVisible="{Binding IsGestureGroup}"
                          HorizontalAlignment="Right"
                          VerticalAlignment="Center"
                          IsChecked="{Binding IsGestureDemoOpen, Mode=OneWay, Source={x:Static local:MpAvWelcomeNotificationViewModel.Instance}}"
                          Command="{Binding ToggleGestureDemoCommand, Source={x:Static local:MpAvWelcomeNotificationViewModel.Instance}}"
                          Classes="try">
                <DockPanel>
                    <TextBlock Text="{x:Static local:UiStrings.WelcomeScrollToOpenTryButtonLabel}" />
                    <Image />
                </DockPanel>
            </ToggleButton>
            <Border Classes="try rejectWindowMove">
                <Border.IsVisible>
                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                        <Binding Path="IsGestureGroup" />
                        <Binding Path="IsGestureDemoOpen"
                                 Source="{x:Static local:MpAvWelcomeNotificationViewModel.Instance}" />
                        <Binding Path="WelcomePageType"
                                 ConverterParameter="DragToOpen"
                                 Converter="{x:Static local:MpAvEnumToBoolConverter.Instance}" />
                    </MultiBinding>
                </Border.IsVisible>
                <DockPanel>
                    <TextBlock Text="{x:Static local:UiStrings.WelcomeDragToOpenDragSourceLabel}" />
                    <Image x:Name="DragImage"
                           PointerPressed="DragImage_PointerPressed"
                           Classes="shake"
                           Source="{Binding Source={StaticResource BananaImage}, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}">
                        <Image.RenderTransform>
                            <RotateTransform />
                        </Image.RenderTransform>
                    </Image>
                </DockPanel>
            </Border>
        </StackPanel>
        <!--  GESTURE CAPTION  -->

        <TransitioningContentControl x:Name="CaptionContainer"
                                     DockPanel.Dock="Bottom"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Top"
                                     MinHeight="120"
                                     ClipToBounds="False"
                                     Classes.checked="{Binding IsPrimaryChecked, Source={x:Static local:MpAvWelcomeNotificationViewModel.Instance}}"
                                     Content="{Binding PrimaryItem, Source={x:Static local:MpAvWelcomeNotificationViewModel.Instance}}">
            <TransitioningContentControl.PageTransition>
                <CrossFade Duration="0:00:00.500" />
            </TransitioningContentControl.PageTransition>
            <TransitioningContentControl.ContentTemplate>
                <DataTemplate x:DataType="local:MpAvWelcomeOptionItemViewModel">
                    <Grid>
                        <!--  ACCOUNT TYPE DESCRIPTION  -->
                        <StackPanel IsVisible="{Binding Parent.IsAccountOptSelected}">
                            <TextBlock Classes="description"
                                       Text="{Binding DescriptionText}" />
                            <TextBlock Classes="description"
                                       IsVisible="{Binding DescriptionText2, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}"
                                       Text="{Binding DescriptionText2}"
                                       Foreground="Green"
                                       FontWeight="SemiBold" />
                        </StackPanel>


                        <!--  STANDARD DESCRIPTION  -->
                        <TextBlock Classes="description"
                                   IsVisible="{Binding !Parent.IsAccountOptSelected}"
                                   Text="{Binding DescriptionText}" />
                    </Grid>
                </DataTemplate>
            </TransitioningContentControl.ContentTemplate>
        </TransitioningContentControl>
    </StackPanel>

</local:MpAvUserControl>
