<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="using:MonkeyPaste.Avalonia"
        xmlns:pcl="using:MonkeyPaste"
        mc:Ignorable="d"
        d:DesignWidth="800"
        d:DesignHeight="450"
        x:Name="UserActionNotificationWindow"
        x:DataType="pcl:MpUserActionNotificationViewModel"
        x:CompileBindings="True"
        x:Class="MonkeyPaste.Avalonia.MpAvUserActionNotificationWindow"
        Classes.IsClosing="{Binding IsClosing}"
        Classes="notificationWindow fadeIn fadeOut"
        Classes.userActionNotificationWindow="True"
        IsVisible="{Binding IsVisible}"
        Width="350"
        MinHeight="150"
        SizeToContent="Height"
        ShowInTaskbar="False"
        WindowState="Normal"
        SystemDecorations="None"
        TransparencyLevelHint="Transparent"
        Background="Transparent"
        Title="">
    <Border HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          MinHeight="130"
                          BorderThickness="7"
                          Padding="10"
                          BorderBrush="{Binding BorderHexColor, Converter={x:Static local:MpAvStringHexToBrushConverter.Instance}}"
                          Background="{Binding BackgroundHexColor, Converter={x:Static local:MpAvStringHexToBrushConverter.Instance}}"
                          local:MpAvIsHoveringExtension.IsEnabled="True"
                          local:MpAvIsHoveringExtension.IsHovering="{Binding IsHovering, Mode=TwoWay}">
        <Grid x:Name="NotificationWindowContainerGrid"
              ColumnDefinitions="0.35*,0.75*"
              RowDefinitions="Auto,Auto,*,Auto,0.6*">
            <!--  ICON  -->
            <Image Grid.Row="0"
                   Grid.Column="0"
                   Width="64"
                   Height="64"
                   IsVisible="{Binding IconSourceObj, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}"
                   Source="{Binding IconSourceObj, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}"
                   Stretch="Fill"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Top"
                   Margin="10,5,10,0" />

            <!--  TITLE/UNDERLINE  -->
            <StackPanel Grid.Row="0"
                        Grid.Column="1"
                        Orientation="Vertical"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Top">
                <TextBlock Grid.Row="0"
                           Grid.Column="1"
                           VerticalAlignment="Top"
                           HorizontalAlignment="Stretch"
                           TextAlignment="Left"
                           FontSize="24"
                           Foreground="White"
                           FontWeight="SemiBold"
                           TextWrapping="WrapWithOverflow"
                           Text="{Binding Title}" />

                <!--  TITLE UNDERLINE  -->

                <Border Grid.Row="0"
                        Grid.Column="1"
                        VerticalAlignment="Top"
                        HorizontalAlignment="Stretch"
                        Classes="labelUnderline labelUnderline_long"
                        BorderThickness="0" />
            </StackPanel>



            <!--  MESSAGE BODY  -->
            <TextBlock Grid.Row="1"
                       Grid.Column="1"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Top"
                       ScrollViewer.VerticalScrollBarVisibility="Auto"
                       Margin="5,5,5,10"
                       TextWrapping="Wrap"
                       MaxWidth="300"
                       FontSize="14"
                       FontWeight="SemiBold"
                       Background="Transparent"
                       Focusable="True"
                       Foreground="{Binding NotificationTextForegroundColor, Converter={x:Static local:MpAvStringHexToBrushConverter.Instance}}"
                       Text="{Binding Body}" />

            <!--  TEXTBOX (Optional)  -->

            <Border Grid.Row="2"
                    Grid.Column="1"
                    IsVisible="{Binding ShowTextBox}"
                    BorderThickness="2"
                    BorderBrush="White"
                    Background="White"
                    Margin="5,0,10,10"
                    CornerRadius="7"
                    Padding="3"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Center">
                <TextBox Watermark="{Binding Detail}"
                         TextAlignment="Left"
                         FontSize="14"
                         Padding="3"
                         BorderThickness="0"
                         Text="{Binding BoundInputText, Mode=TwoWay}" />
            </Border>

            <!--  BUTTONS ROW  -->

            <StackPanel Grid.Row="3"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Orientation="Horizontal"
                        HorizontalAlignment="Center">
                <!--  Ignore, Retry, Fix, Shutdown states  -->
                <Button Content="IGNORE"
                        IsVisible="{Binding ShowIgnoreButton}"
                        Command="{Binding IgnoreCommand}" />
                <Button x:Name="RetryButton"
                        Content="RETRY"
                        IsVisible="{Binding ShowRetryButton}"
                        Command="{Binding RetryCommand}" />
                <Button x:Name="FixButton"
                        Content="FIX"
                        IsVisible="{Binding ShowFixButton}"
                        VerticalAlignment="Top"
                        Command="{Binding FixWrapperCommand}" />
                <Button Content="SHUTDOWN"
                        IsVisible="{Binding ShowShutdownButton}"
                        Command="{Binding ShutdownCommand}" />
                <!--  Yes, No, Cancel or Ok, Cancel States  -->
                <Button Content="YES"
                        Command="{Binding YesCommand}"
                        IsVisible="{Binding ShowYesButton}" />
                <Button Content="NO"
                        Command="{Binding NoCommand}"
                        IsVisible="{Binding ShowNoButton}" />
                <Button Content="OK"
                        Command="{Binding OkCommand}"
                        IsVisible="{Binding ShowOkButton}" />
                <Button Content="CANCEL"
                        Command="{Binding CancelCommand}"
                        IsVisible="{Binding ShowCancelButton}" />
            </StackPanel>

            <!--  OPTIONS POPUP (Optional)  -->

            <local:MpAvOptionsButton Grid.Row="0"
                                     Grid.Column="1"
                                     HorizontalAlignment="Right"
                                     IsVisible="{Binding ShowOptionsButton}"
                                     local:MpAvIsHoveringExtension.IsEnabled="True"
                                     local:MpAvIsHoveringExtension.IsHovering="{Binding IsOverOptionsButton, Mode=TwoWay}"
                                     local:MpAvMenuExtension.IsEnabled="True"
                                     local:MpAvMenuExtension.PlacementMode="Left" />
        </Grid>
    </Border>
</Window>
