<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="using:MonkeyPaste.Avalonia"
        xmlns:pcl="using:MonkeyPaste"
        mc:Ignorable="d"
        d:DesignWidth="800"
        d:DesignHeight="450"
        x:Name="UserActionNotificationWindow"
        x:DataType="pcl:MpUserActionNotificationViewModel"
        x:CompileBindings="True"
        x:Class="MonkeyPaste.Avalonia.MpAvUserActionNotificationWindow"
        Classes.IsClosing="{Binding IsClosing}"
        Classes.notificationWindow="True"
        Classes.userActionNotificationWindow="True"
        IsVisible="{Binding IsVisible}"
        Width="350"
        MinHeight="150"
        SizeToContent="Height"
        ShowInTaskbar="False"
        WindowState="Normal"
        SystemDecorations="None"
        TransparencyLevelHint="Transparent"
        Background="Transparent"
        Title="">
    <Border HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            MinHeight="130"
            BorderThickness="7"
            BorderBrush="{Binding BorderHexColor, Converter={StaticResource StringHexToBrushConverter}}"
            Background="{Binding BackgroundHexColor, Converter={StaticResource StringHexToBrushConverter}}"
            local:MpAvIsHoveringExtension.IsEnabled="True"
            local:MpAvIsHoveringExtension.IsHovering="{Binding IsHovering, Mode=TwoWay}">
        <Grid x:Name="NotificationWindowContainerGrid"
              ColumnDefinitions="0.35*,0.75*">
            <Image Grid.Row="0"
                   Grid.Column="0"
                   Width="72"
                   Height="72"
                   IsVisible="{Binding IconSourceObj, Converter={StaticResource IsNotNullOrZeroToBoolConverter}}"
                   Source="{Binding IconSourceObj, Converter={StaticResource IconSourceObjToBitmapConverter}}"
                   Stretch="Fill"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Top"
                   Margin="10,5,0,0" />
            <local:MpAvOptionsButton Grid.Row="0"
                                     Grid.Column="1"
                                     local:MpAvIsHoveringExtension.IsEnabled="True"
                                     local:MpAvIsHoveringExtension.IsHovering="{Binding IsOverOptionsButton, Mode=TwoWay}"
                                     local:MpAvMenuExtension.PlacementMode="Left" />
            <Grid Grid.Column="1"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  RowDefinitions="Auto,*,0.6*">
                <StackPanel Grid.Row="0"
                            Orientation="Vertical">

                    <TextBlock VerticalAlignment="Bottom"
                               HorizontalAlignment="Left"
                               Margin="10,10,0,1"
                               FontSize="20"
                               Foreground="White"
                               FontWeight="SemiBold"
                               TextWrapping="NoWrap"
                               Text="{Binding Title}" />
                    <Border Classes="labelUnderline"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Bottom"
                            BorderThickness="0" />
                </StackPanel>

                <TextBlock Grid.Row="1"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Top"
                           ScrollViewer.VerticalScrollBarVisibility="Auto"
                           Margin="5,5,5,10"
                           TextWrapping="Wrap"
                           MaxWidth="300"
                           FontSize="14"
                           FontWeight="SemiBold"
                           Background="Transparent"
                           Focusable="True"
                           Foreground="{Binding NotificationTextForegroundColor, Converter={StaticResource StringHexToBrushConverter}}"
                           Text="{Binding Body}" />
                <StackPanel Grid.Row="2"
                            Orientation="Horizontal"
                            HorizontalAlignment="Center">
                    <!--  Ignore, Retry, Fix, Shutdown states  -->
                    <Button Content="IGNORE"
                            IsVisible="{Binding ShowIgnoreButton}"
                            Command="{Binding IgnoreCommand}" />
                    <Button x:Name="RetryButton"
                            Content="RETRY"
                            IsVisible="{Binding ShowRetryButton}"
                            Command="{Binding RetryCommand}" />
                    <Button x:Name="FixButton"
                            Content="FIX"
                            IsVisible="{Binding ShowFixButton}"
                            VerticalAlignment="Top"
                            Command="{Binding FixWrapperCommand}" />
                    <Button Content="SHUTDOWN"
                            IsVisible="{Binding ShowShutdownButton}"
                            Command="{Binding ShutdownCommand}" />
                    <!--  Yes, No, Cancel or Ok, Cancel States  -->
                    <Button Content="YES"
                            Command="{Binding YesCommand}"
                            IsVisible="{Binding ShowYesButton}" />
                    <Button Content="NO"
                            Command="{Binding NoCommand}"
                            IsVisible="{Binding ShowNoButton}" />
                    <Button Content="OK"
                            Command="{Binding OkCommand}"
                            IsVisible="{Binding ShowOkButton}" />
                    <Button Content="CANCEL"
                            Command="{Binding CancelCommand}"
                            IsVisible="{Binding ShowCancelButton}" />
                </StackPanel>

            </Grid>
        </Grid>
    </Border>
</Window>
