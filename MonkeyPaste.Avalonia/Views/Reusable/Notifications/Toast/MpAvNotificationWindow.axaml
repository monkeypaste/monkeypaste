<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="using:MonkeyPaste.Avalonia"
        xmlns:pcl="using:MonkeyPaste"
        mc:Ignorable="d"
        d:DesignWidth="800"
        d:DesignHeight="450"
        x:Name="NotificationWindow"
        x:DataType="pcl:MpNotificationViewModelBase"
        x:CompileBindings="True"
        x:Class="MonkeyPaste.Avalonia.MpAvNotificationWindow"
        Classes.IsClosing="{Binding IsClosing}"
        IsVisible="{Binding IsVisible, Mode=TwoWay}"
        Topmost="True"
        Width="350"
        SizeToContent="Height"
        ShowInTaskbar="False"
        WindowState="Normal"
        SystemDecorations="None"
        TransparencyLevelHint="Transparent"
        Background="Transparent"
        Title="">
    <Window.Styles>
        <Style Selector="Button">
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="CornerRadius"
                    Value="3" />
            <Setter Property="BorderThickness"
                    Value="2" />
            <Setter Property="Padding"
                    Value="5" />
            <Setter Property="Background"
                    Value="Silver" />
            <Setter Property="BorderBrush"
                    Value="DimGray" />
            <Setter Property="Foreground"
                    Value="White" />

        </Style>
        <Style Selector="Button:pointerover">
            <Setter Property="BorderBrush"
                    Value="Yellow" />
            <Setter Property="Background"
                    Value="Silver" />
        </Style>
        <Style Selector="Button:pressed">
            <Setter Property="BorderBrush"
                    Value="Lime" />
        </Style>
        <Style Selector="Window[IsVisible=true] > Border">
            <Style.Animations>
                <Animation Duration="0:0:0.4"
                           FillMode="Forward">
                    <KeyFrame Cue="0%">
                        <Setter Property="Opacity"
                                Value="0" />
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="Opacity"
                                Value="1" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>
        <Style Selector="Window.IsClosing > Border">
            <Style.Animations>
                <Animation Duration="0:0:0.4"
                           FillMode="Forward">
                    <KeyFrame Cue="0%">
                        <Setter Property="Opacity"
                                Value="1" />
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="Opacity"
                                Value="0" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>
        <Style Selector="Window.IsClosing">
            <Style.Animations>
                <Animation Duration="0:0:1.4"
                           FillMode="Forward">
                    <KeyFrame Cue="100%">
                        <Setter Property="IsVisible"
                                Value="False" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>

    </Window.Styles>
    <Border HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            MinHeight="130"
            BorderThickness="7"
            BorderBrush="{Binding BorderHexColor, Converter={StaticResource StringHexToBrushConverter}}"
            Background="{Binding BackgroundHexColor, Converter={StaticResource StringHexToBrushConverter}}"
            local:MpAvIsHoveringExtension.IsEnabled="True"
            local:MpAvIsHoveringExtension.IsHovering="{Binding IsHovering, Mode=TwoWay}">
        <Grid x:Name="NotificationWindowContainerGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.35*" />
                <ColumnDefinition Width="0.75*" />
            </Grid.ColumnDefinitions>
            <Image Grid.Row="0"
                   Grid.Column="0"
                   Width="72"
                   Height="72"
                   IsVisible="{Binding IconSourceStr, Converter={StaticResource IsNotNullOrZeroToBoolConverter}}"
                   Source="{Binding IconSourceStr, Converter={StaticResource IconSourceObjToBitmapConverter}}"
                   Stretch="Fill"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Top"
                   Margin="10,5,0,0" />
            <CheckBox Grid.Column="0"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Bottom"
                      VerticalContentAlignment="Center"
                      Margin="7,0,0,5"
                      IsVisible="{Binding CanChooseNotShowAgain}"
                      IsChecked="{Binding DoNotShowAgain, Mode=TwoWay}">
                <CheckBox.Content>
                    <TextBlock MaxWidth="100"
                               Foreground="White"
                               FontSize="9"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Right"
                               TextWrapping="Wrap"
                               Text="Do Not Show Again" />
                </CheckBox.Content>
            </CheckBox>
            <Button x:Name="CloseButton"
                    Grid.Column="1"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Margin="5"
                    Background="Transparent"
                    BorderThickness="0">
                <Image Width="15"
                       Height="15"
                       Stretch="Fill"
                       Source="{Binding ., Converter={StaticResource StringResourceConverter}, Source={StaticResource CloseImage}}" />
            </Button>
            <ContentControl x:Name="NotificationContentControl"
                            Grid.Column="1"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            DataContext="{Binding}"
                            DataContextChanged="ContentControl_DataContextChanged"
                            Content="{Binding}">
                <ContentControl.DataTemplates>
                    <local:MpAvNotificationTemplateSelector>
                        <DataTemplate x:Key="LoaderTemplate"
                                      DataType="pcl:MpLoaderNotificationViewModel">
                            <local:MpAvLoaderNotificationView DataContext="{Binding}" />
                        </DataTemplate>
                        <DataTemplate x:Key="MessageTemplate"
                                      DataType="pcl:MpMessageNotificationViewModel">
                            <local:MpAvMessageNotificationView DataContext="{Binding}" />
                        </DataTemplate>
                        <DataTemplate x:Key="UserActionTemplate"
                                      DataType="pcl:MpUserActionNotificationViewModel">
                            <local:MpAvUserActionNotificationView DataContext="{Binding}" />
                        </DataTemplate>
                    </local:MpAvNotificationTemplateSelector>
                </ContentControl.DataTemplates>
            </ContentControl>
        </Grid>
    </Border>
</Window>
