<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:pcl="clr-namespace:MonkeyPaste;assembly=MonkeyPaste"
        xmlns:local="clr-namespace:MonkeyPaste.Avalonia;assembly=MonkeyPaste.Avalonia"
        xmlns:dd="clr-namespace:My.Namespace;assembly=MonkeyPaste.Avalonia"
        mc:Ignorable="d"
        d:DesignWidth="800"
        d:DesignHeight="450"
        x:Name="LoaderNotificationWindow"
        x:DataType="local:MpAvLoaderNotificationViewModel"
        x:CompileBindings="True"
        x:Class="MonkeyPaste.Avalonia.MpAvLoaderNotificationWindow"
        Classes="notificationWindow loader"
        Width="350"
        Height="140">
    <Window.Resources>
        <LinearGradientBrush x:Key="OuterGradientBrush" SpreadMethod="Repeat" TransformOrigin="50%,50%" StartPoint="0%,0%" EndPoint="100%,100%">
            <LinearGradientBrush.GradientStops>
                <GradientStop Offset="0" Color="{DynamicResource ThemeInteractiveBgColor}" />
                <GradientStop Offset="0.36" Color="{DynamicResource ThemeInteractiveColor}" />
                <GradientStop Offset="0.77" Color="{DynamicResource ThemeInteractiveColor}" />
                <GradientStop Offset="1" Color="{DynamicResource ThemeInteractiveBgColor}" />


                <!--<GradientStop Offset="0"
                              Color="Red" />
                <GradientStop Offset="0.5"
                              Color="Green" />
                <GradientStop Offset="1"
                              Color="Blue" />-->


                <!--<GradientStop Offset="0"
                              Color="{DynamicResource ThemeAccent1Color}" />
                <GradientStop Offset="0.25"
                              Color="{DynamicResource ThemeAccent2Color}" />
                <GradientStop Offset="0.5"
                              Color="{DynamicResource ThemeAccent3Color}" />
                <GradientStop Offset="0.75"
                              Color="{DynamicResource ThemeAccent4Color}" />
                <GradientStop Offset="1.0"
                              Color="{DynamicResource ThemeAccent5Color}" />-->
            </LinearGradientBrush.GradientStops>
            <LinearGradientBrush.Transform>
                <RotateTransform />
                <!--<TranslateTransform />-->
            </LinearGradientBrush.Transform>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ShineBrush" StartPoint="0%,0%" EndPoint="100%,0%">
            <LinearGradientBrush.GradientStops>
                <GradientStop Offset="0" Color="Transparent" />
                <GradientStop Offset="0.3" Color="White" />
                <GradientStop Offset="0.6" Color="White" />
                <GradientStop Offset="1" Color="Transparent" />
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
    </Window.Resources>
    <Window.Styles>
        <Style Selector="Rectangle#ProgressShine1">
            <Style.Animations>
                <Animation Duration="0:0:10"
                           FillMode="Backward"
                           Easing="ExponentialEaseIn"
                           IterationCount="Infinite">
                    <KeyFrame Cue="0%">
                        <Setter Property="Canvas.Left"
                                Value="-50" />
                    </KeyFrame>

                    <KeyFrame Cue="40%">
                        <Setter Property="Canvas.Left"
                                Value="-50" />
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="Canvas.Left"
                                Value="280" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>
        <Style Selector="Rectangle#ProgressShine2">
            <Style.Animations>
                <Animation Duration="0:0:5"
                           FillMode="Backward"
                           Easing="ExponentialEaseIn"
                           IterationCount="Infinite">
                    <KeyFrame Cue="0%">
                        <Setter Property="Canvas.Left"
                                Value="-50" />
                    </KeyFrame>
                    <KeyFrame Cue="40%">
                        <Setter Property="Canvas.Left"
                                Value="-50" />
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="Canvas.Left"
                                Value="280" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>
    </Window.Styles>
    <Border x:Name="OuterBorder"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            BorderThickness="7"
            BorderBrush="{Binding BorderHexColor, Converter={x:Static local:MpAvStringHexToBrushConverter.Instance}}"
            Background="{DynamicResource ThemeColor}">
        <Grid x:Name="NotificationWindowContainerGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.35*" />
                <ColumnDefinition Width="0.75*" />
            </Grid.ColumnDefinitions>
            <Image x:Name="LogoImage"
                   Grid.Row="0"
                   Grid.Column="0"
                   Classes="applogo shakeOnce shakeOnceOver"
                   Width="72"
                   Height="72"
                   IsVisible="{Binding IconSourceObj, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Top"
                   Margin="10,10,0,10">
                <Image.RenderTransform>
                    <RotateTransform />
                </Image.RenderTransform>
            </Image>
            <Grid Grid.Column="1"
                  x:DataType="pcl:MpIProgressLoaderViewModel"
                  DataContext="{Binding ProgressLoader}"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  RowDefinitions="0.2*,0.3*,0.1*">
                <TextBlock Grid.Row="0"
                           FontSize="26"
                           VerticalAlignment="Bottom"
                           HorizontalAlignment="Left"
                           Foreground="{Binding $parent[Border].Background, Converter={x:Static local:MpAvColorToContrastColorConverter.Instance}}"
                           FontWeight="SemiBold"
                           Text="{Binding Title, Converter={x:Static local:MpAvStringToUpperCaseStringConverter.Instance}}" />
                <Border Grid.Row="0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Bottom"
                        BorderThickness="0"
                        IsVisible="False"
                        Margin="5,0,5,0"
                        Classes="labelUnderline"
                        Height="1" />
                <Grid Grid.Row="1">
                    <!--  PLEASE WAIT SPINNER  -->
                    <Border x:Name="QueryTrayBusyInnerBorder"
                            IsVisible="{Binding ShowSpinner}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch">
                        <local:MpAvBusySpinnerView x:Name="QueryTrayBusySpinner"
                                                   Foreground="White"
                                                   IsVisible="True"
                                                   RenderTransform="translateX(-50px)"
                                                   Width="25"
                                                   Height="25" />
                    </Border>
                    <!--  PROGRESS BAR  -->
                    <Border x:Name="ProgressBarContainer"
                            IsVisible="{Binding !ShowSpinner}"
                            CornerRadius="5"
                            Grid.Row="1"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Height="30"
                            Width="220"
                            ClipToBounds="True"
                            BorderThickness="1"
                            BorderBrush="{Binding $parent[Border].Background, Converter={x:Static local:MpAvColorToContrastColorConverter.Instance}}"
                            Background="Transparent"
                            Margin="0"
                            Padding="0">
                        <Canvas x:Name="ProgressCanvas"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Top"
                                ClipToBounds="True"
                                MaxWidth="218"
                                MinWidth="0"
                                Height="28">
                            <Canvas.Width>
                                <MultiBinding Converter="{x:Static local:MpAvMultiSliderValueToLengthConverter.Instance}">
                                    <Binding>
                                        <Binding.Source>
                                            <sys:Double>0</sys:Double>
                                        </Binding.Source>
                                    </Binding>
                                    <Binding>
                                        <Binding.Source>
                                            <sys:Double>1</sys:Double>
                                        </Binding.Source>
                                    </Binding>
                                    <Binding Path="PercentLoaded" />
                                    <Binding ElementName="ProgressCanvas"
                                             Path="MaxWidth" />
                                </MultiBinding>
                            </Canvas.Width>
                            <Border x:Name="ProgressRectangle"
                                    Canvas.Left="0"
                                    Canvas.Top="0"
                                    CornerRadius="5"
                                    BorderThickness="1"
                                    BorderBrush="Transparent"
                                    Width="{Binding $parent.Bounds.Width}"
                                    Height="{Binding $parent.Bounds.Height}"
                                    Background="{DynamicResource ThemeAccent3Color}" />
                            <Rectangle x:Name="ProgressShine1"
                                       Fill="{StaticResource ShineBrush}"
                                       Width="30"
                                       Height="{Binding $parent.Bounds.Height}"
                                       RenderTransform="skewX(-45deg)" />
                            <Rectangle x:Name="ProgressShine2"
                                       Fill="{StaticResource ShineBrush}"
                                       Width="30"
                                       Height="{Binding $parent.Bounds.Height}"
                                       RenderTransform="skewX(-45deg)" />
                        </Canvas>
                    </Border>

                </Grid>

                <TransitioningContentControl x:Name="ProgressInfoTransitioningContentControl"
                                             Grid.Row="2"
                                             ClipToBounds="False"
                                             Margin="0,0,8,3"
                                             VerticalAlignment="Bottom"
                                             HorizontalAlignment="Right"
                                             Content="{Binding Body}">
                    <TransitioningContentControl.PageTransition>
                        <CrossFade Duration="0:00:00.500" />
                    </TransitioningContentControl.PageTransition>
                    <TransitioningContentControl.ContentTemplate>
                        <DataTemplate DataType="sys:String">
                            <TextBlock x:Name="ProgressInfoBlock"
                                       ClipToBounds="False"
                                       Width="200"
                                       FontSize="12"
                                       VerticalAlignment="Bottom"
                                       TextAlignment="Right"
                                       Foreground="{Binding $parent[Border].Background, Converter={x:Static local:MpAvColorToContrastColorConverter.Instance}}"
                                       Text="{Binding}" />
                        </DataTemplate>
                    </TransitioningContentControl.ContentTemplate>
                </TransitioningContentControl>
            </Grid>

            <local:MpAvOptionsButton x:Name="OptsButton"
                                     Grid.Column="1"
                                     Classes="loader"
                                     Foreground="{Binding $parent[Border].Background, Converter={x:Static local:MpAvColorToContrastColorConverter.Instance}}"
                                     Command="{Binding ShowOptionsPopupCommand}"
                                     CommandParameter="{Binding $self}" />
        </Grid>
    </Border>
</Window>
