<local:MpAvMenuView xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:local="using:MonkeyPaste.Avalonia"
                    xmlns:pcl="using:MonkeyPaste"
                    mc:Ignorable="d"
                    d:DesignWidth="800"
                    d:DesignHeight="450"
                    x:DataType="local:MpAvIMenuItemViewModel"
                    x:CompileBindings="True"
                    x:Class="MonkeyPaste.Avalonia.MpAvMenuView">
    <local:MpAvMenuView.Styles>
        <Style Selector="MenuItem">
            <Setter Property="Padding"
                    Value="10,5,15,5" />
        </Style>
        <Style Selector="MenuItem.hasGesture">
            <Setter Property="Padding"
                    Value="10,5,5,5" />
        </Style>
        <Style Selector="MenuItem"
               x:DataType="local:MpAvIMenuItemViewModel">
            <Setter Property="IsSubMenuOpen"
                    Value="{Binding IsSubMenuOpen, Mode=TwoWay}" />
            <Setter Property="StaysOpenOnClick"
                    Value="{Binding StaysOpenOnClick}" />
            <Setter Property="InputGesture"
                    Value="{Binding InputGestureText, Converter={x:Static local:MpAvKeyStringToKeyGestureConverter.Instance}}" />
            <Setter Property="Theme"
                    Value="{StaticResource GestureLabelMenuItem}" />
        </Style>
        <Style Selector="MenuItem:not(.checkable)"
               x:DataType="local:MpAvIMenuItemViewModel">
            <Setter Property="Command"
                    Value="{Binding Command}" />
            <Setter Property="CommandParameter"
                    Value="{Binding CommandParameter}" />
        </Style>

        <Style Selector="MenuItem.checkable /template/ Viewbox#PART_IconPresenter">
            <Setter Property="Width"
                    Value="24" />
            <Setter Property="Height"
                    Value="24" />
        </Style>
        <Style Selector="MenuItem:not(.checkWithIcon)"
               x:DataType="local:MpAvIMenuItemViewModel">
            <Setter Property="Header"
                    Value="{Binding Header}" />
        </Style>

        <Style Selector="MenuItem CheckBox"
               x:DataType="local:MpAvIMenuItemViewModel">
            <Setter Property="Command"
                    Value="{Binding Command}" />
            <Setter Property="CommandParameter"
                    Value="{Binding CommandParameter}" />
            <Setter Property="Theme"
                    Value="{StaticResource MenuItemCheckBox}" />
        </Style>

        <Style Selector="MenuItem Image"
               x:DataType="local:MpAvIMenuItemViewModel">
            <Setter Property="IsVisible"
                    Value="{Binding IconSourceObj, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}" />
            <Setter Property="Source"
                    Value="{Binding IconSourceObj, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}, ConverterParameter=ThemeInteractiveColor}" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
            <Setter Property="Width"
                    Value="16" />
            <Setter Property="Height"
                    Value="16" />
            <!--<Setter Property="Effect"
                    Value="drop-shadow(0 0 5 black)" />-->
        </Style>

        <Style Selector="MenuItem.dark Image"
               x:DataType="local:MpAvIMenuItemViewModel">
            <!--<Setter Property="Effect"
                    Value="drop-shadow(0 0 5 white)" />-->
        </Style>
        <Style Selector="Separator">
            <Style.Resources>
                <LinearGradientBrush x:Key="SystemControlForegroundBaseMediumLowBrush" StartPoint="0%,0%" EndPoint="100%,0%">
                    <GradientStop Offset="0" Color="Transparent" />
                    <GradientStop Offset="0.5" Color="{DynamicResource ThemeGrayAccent2Color}" />
                    <GradientStop Offset="1" Color="Transparent" />
                </LinearGradientBrush>
            </Style.Resources>
        </Style>
        <Style Selector="MenuItem TextBlock"
               x:DataType="local:MpAvIMenuItemViewModel">
            <Setter Property="TextWrapping"
                    Value="WrapWithOverflow" />
            <Setter Property="MaxWidth"
                    Value="200" />
            <Setter Property="Text"
                    Value="{Binding Header}" />
        </Style>
    </local:MpAvMenuView.Styles>
    <local:MpAvMenuView.ItemsSource>
        <Binding Path="SubItems">
            <Binding.Converter>
                <local:MpAvTemplateDictionaryToItemsSourceConverter>
                    <!--  DEFAULT  -->
                    <DataTemplate x:Key="Default"
                                  x:DataType="local:MpAvIMenuItemViewModel">
                        <MenuItem Classes.dark="{Binding IsThemeDark, Source={x:Static local:MpAvPrefViewModel.Instance}}"
                                  Classes.hasGesture="{Binding InputGestureText, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}">
                            <MenuItem.Resources>
                                <Thickness x:Key="MenuIconPresenterMargin">0,0,6,0</Thickness>

                            </MenuItem.Resources>
                            <MenuItem.Icon>
                                <Image Classes="icon" />
                            </MenuItem.Icon>
                            <MenuItem.Header>
                                <TextBlock Classes="header" />
                            </MenuItem.Header>
                        </MenuItem>
                    </DataTemplate>

                    <!--  CHECKABLE  -->
                    <DataTemplate x:Key="Checkable"
                                  x:DataType="local:MpAvIMenuItemViewModel">
                        <MenuItem Classes="checkable"
                                  Classes.hasGesture="{Binding InputGestureText, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}"
                                  Classes.dark="{Binding IsThemeDark, Source={x:Static local:MpAvPrefViewModel.Instance}}">
                            <MenuItem.Icon>
                                <CheckBox Classes="icon"
                                          IsChecked="{Binding IsChecked, Mode=OneWay}"
                                          IsThreeState="{Binding IsThreeState}" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </DataTemplate>

                    <!--  CHECKABLE W/ ICON  -->
                    <DataTemplate x:Key="CheckableWithIcon"
                                  x:DataType="local:MpAvIMenuItemViewModel">
                        <MenuItem Classes="checkable checkWithIcon"
                                  Classes.hasGesture="{Binding InputGestureText, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}"
                                  Classes.dark="{Binding IsThemeDark, Source={x:Static local:MpAvPrefViewModel.Instance}}">
                            <MenuItem.Icon>
                                <CheckBox Classes="icon"
                                          IsChecked="{Binding IsChecked, Mode=OneWay}"
                                          IsThreeState="{Binding IsThreeState}" />
                            </MenuItem.Icon>
                            <MenuItem.Header>
                                <StackPanel Orientation="Horizontal"
                                            Spacing="10">
                                    <Image Classes="icon" />
                                    <TextBlock Classes="header" />
                                </StackPanel>
                            </MenuItem.Header>
                        </MenuItem>
                    </DataTemplate>

                    <!--  SEPERATOR  -->
                    <DataTemplate x:Key="Separator">
                        <Separator Classes.dark="{Binding IsThemeDark, Source={x:Static local:MpAvPrefViewModel.Instance}}" />
                    </DataTemplate>

                    <!--  SEPERATOR  -->
                    <DataTemplate x:Key="ColorPalette"
                                  x:DataType="local:MpAvMenuItemViewModel">
                        <MenuItem Classes="colorPalette"
                                  Theme="{StaticResource ColorPaletteMenuItem}">
                            <MenuItem.Header>

                                <local:MpAvColorPaletteListBoxView />
                            </MenuItem.Header>
                        </MenuItem>
                    </DataTemplate>
                </local:MpAvTemplateDictionaryToItemsSourceConverter>
            </Binding.Converter>
        </Binding>
    </local:MpAvMenuView.ItemsSource>
</local:MpAvMenuView>
