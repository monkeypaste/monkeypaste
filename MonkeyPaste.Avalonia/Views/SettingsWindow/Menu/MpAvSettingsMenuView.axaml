<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="using:MonkeyPaste.Avalonia"
             mc:Ignorable="d"
             x:CompileBindings="True"
             d:DesignWidth="800"
             d:DesignHeight="450"
             x:DataType="local:MpAvSettingsViewModel"
             x:Class="MonkeyPaste.Avalonia.MpAvSettingsMenuView">
    <UserControl.Styles>
        <!--  TABS  -->
        <Style Selector="RadioButton.tab">
            <Style.Resources>
                <SolidColorBrush x:Key="ToggleButtonBackground" Color="{DynamicResource ThemeAccent5BgColor}" />
                <SolidColorBrush x:Key="ToggleButtonBackgroundPointerOver" Color="{DynamicResource ThemeAccent5Color}" />
                <SolidColorBrush x:Key="ToggleButtonBackgroundPressed" Color="{DynamicResource ThemeAccent4Color}" />
                <SolidColorBrush x:Key="ToggleButtonBorderBrush" Color="{DynamicResource ThemeInteractiveBgColor}" />
                <SolidColorBrush x:Key="ToggleButtonBorderBrushPointerOver" Color="{DynamicResource ThemeAccent1Color}" />
                <SolidColorBrush x:Key="ToggleButtonBorderBrushPressed" Color="{DynamicResource ThemeAccent2Color}" />
                <SolidColorBrush x:Key="ToggleButtonForeground" Color="{DynamicResource ThemeInteractiveBgColor}" />
                <SolidColorBrush x:Key="ToggleButtonForegroundPointerOver" Color="{DynamicResource ThemeInteractiveBgColor}" />
                <SolidColorBrush x:Key="ToggleButtonForegroundPressed" Color="{DynamicResource ThemeInteractiveBgColor}" />

                <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="{DynamicResource ThemeAccent3BgColor}" />
                <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="{DynamicResource ThemeAccent3BgColor}" />
                <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="{DynamicResource ThemeAccent4BgColor}" />
                <SolidColorBrush x:Key="ToggleButtonBorderBrushChecked" Color="{DynamicResource ThemeInteractiveColor}" />
                <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedPointerOver" Color="{DynamicResource ThemeAccent1Color}" />
                <SolidColorBrush x:Key="ToggleButtonBorderBrushCheckedPressed" Color="{DynamicResource ThemeAccent2Color}" />
                <SolidColorBrush x:Key="ToggleButtonForegroundChecked" Color="{DynamicResource ThemeInteractiveBgColor}" />
                <SolidColorBrush x:Key="ToggleButtonForegroundCheckedPointerOver" Color="{DynamicResource ThemeInteractiveBgColor}" />
                <SolidColorBrush x:Key="ToggleButtonForegroundCheckedPressed" Color="{DynamicResource ThemeInteractiveBgColor}" />
            </Style.Resources>
            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalAlignment"
                    Value="Stretch" />
            <!--<Setter Property="CornerRadius"
                    Value="10" />
            <Setter Property="Margin"
                    Value="2.5,5,2.5,0" />-->
            <Setter Property="CornerRadius"
                    Value="0" />
            <Setter Property="Margin"
                    Value="0" />
            <Setter Property="Padding"
                    Value="0" />
        </Style>
        <Style Selector="RadioButton.tab.first">
            <Style.Resources>
                <Thickness x:Key="ToggleButtonBorderThemeThickness">6,3,3,3</Thickness>
            </Style.Resources>
        </Style>
        <Style Selector="RadioButton.tab.last">
            <Style.Resources>
                <Thickness x:Key="ToggleButtonBorderThemeThickness">3,3,6,3</Thickness>
            </Style.Resources>
        </Style>
        <Style Selector="RadioButton.tab:not(.first):not(.last)">
            <Style.Resources>
                <Thickness x:Key="ToggleButtonBorderThemeThickness">3,3,3,3</Thickness>
            </Style.Resources>
        </Style>

        <Style Selector="RadioButton.tab.omitted">
            <Setter Property="Cursor"
                    Value="Arrow" />
            <Setter Property="IsEnabled"
                    Value="False" />
            <Setter Property="Opacity"
                    Value="0" />
        </Style>

        <Style Selector="RadioButton.tab Image">
            <!--<Setter Property="MinWidth"
                    Value="30" />
            <Setter Property="MinHeight"
                    Value="30" />-->
            <Setter Property="MaxWidth"
                    Value="60" />
            <Setter Property="MaxHeight"
                    Value="60" />
            <Setter Property="Stretch"
                    Value="Uniform" />
            <Setter Property="Margin"
                    Value="0,10,0,0" />
        </Style>

        <Style Selector="RadioButton.tab Label">
            <Setter Property="DockPanel.Dock"
                    Value="Bottom" />
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
            <Setter Property="FontWeight"
                    Value="SemiBold" />
            <Setter Property="Margin"
                    Value="5" />
            <Setter Property="FontSize"
                    Value="18" />
        </Style>
    </UserControl.Styles>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="{Binding IsDesktop, ConverterParameter=*|0, Converter={x:Static local:MpAvBoolToGridLengthConverter.Instance}, Source={x:Static local:MpAvThemeViewModel.Instance}}" />
            <ColumnDefinition Width="{Binding IsDesktop, ConverterParameter=*|0, Converter={x:Static local:MpAvBoolToGridLengthConverter.Instance}, Source={x:Static local:MpAvThemeViewModel.Instance}}" />
            <ColumnDefinition Width="{Binding IsHelpSettingsTabVisible, ConverterParameter=*|0, Converter={x:Static local:MpAvBoolToGridLengthConverter.Instance}, Source={x:Static local:MpAvHelpViewModel.Instance}}" />
        </Grid.ColumnDefinitions>

        <!--  ACCOUNT  -->

        <RadioButton Grid.Column="0"
                     Classes.omitted="{Binding !IsTabButtonVisible0}"
                     Theme="{StaticResource SwitchlessRadioButton}"
                     Classes="tab fade first"
                     IsChecked="{Binding IsTabSelected[0], Mode=OneWay}"
                     Command="{Binding SelectTabCommand}"
                     CommandParameter="0">
            <DockPanel>
                <Label Content="{x:Static local:UiStrings.SettingsAccountTabLabel}" />
                <Image Source="{Binding Source={StaticResource UserImage}, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
            </DockPanel>
        </RadioButton>

        <!--  PREFS  -->

        <RadioButton Grid.Column="1"
                     Classes.omitted="{Binding !IsTabButtonVisible1}"
                     Theme="{StaticResource SwitchlessRadioButton}"
                     Classes="tab fade"
                     IsChecked="{Binding IsTabSelected[1], Mode=OneWay}"
                     Command="{Binding SelectTabCommand}"
                     CommandParameter="1">
            <DockPanel>
                <Label Content="{x:Static local:UiStrings.SettingsPrefTabLabel}" />
                <Image Source="{Binding Source={StaticResource SlidersImage}, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
            </DockPanel>
        </RadioButton>

        <!--  INTEROP  -->

        <RadioButton Grid.Column="2"
                     Classes.omitted="{Binding !IsTabButtonVisible2}"
                     Theme="{StaticResource SwitchlessRadioButton}"
                     Classes="tab fade"
                     IsChecked="{Binding IsTabSelected[2], Mode=OneWay}"
                     Command="{Binding SelectTabCommand}"
                     CommandParameter="2">
            <DockPanel>
                <Label Content="{x:Static local:UiStrings.SettingsInteropTabLabel}" />
                <Image Source="{Binding Source={StaticResource ClipboardBwImage}, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
            </DockPanel>
        </RadioButton>

        <!--  SHORTCUTS  -->

        <RadioButton Grid.Column="3"
                     Classes.omitted="{Binding !IsTabButtonVisible3}"
                     Theme="{StaticResource SwitchlessRadioButton}"
                     Classes="tab fade last"
                     IsChecked="{Binding IsTabSelected[3], Mode=OneWay}"
                     Command="{Binding SelectTabCommand}"
                     CommandParameter="3">
            <DockPanel>
                <Label Content="{x:Static local:UiStrings.SettingsShortcutTabLabel}" />
                <Image Source="{Binding Source={StaticResource JoystickImage}, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
            </DockPanel>
        </RadioButton>
    </Grid>

</UserControl>
