<local:MpAvUserControl xmlns="https://github.com/avaloniaui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:dd="clr-namespace:MonkeyPaste.Avalonia;assembly=MonkeyPaste.Avalonia"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:sys="clr-namespace:System;assembly=mscorlib"
                       xmlns:local="using:MonkeyPaste.Avalonia"
                       xmlns:pcl="using:MonkeyPaste"
                       mc:Ignorable="d"
                       d:DesignWidth="800"
                       d:DesignHeight="450"
                       x:TypeArguments="local:MpAvSettingsViewModel"
                       x:DataType="local:MpAvSettingsViewModel"
                       x:CompileBindings="True"
                       DataContext="{x:Static local:MpAvSettingsViewModel.Instance}"
                       Background="{DynamicResource SettingsWindowBgBrush}"
                       x:Class="MonkeyPaste.Avalonia.MpAvSettingsView">
    <local:MpAvUserControl.Resources>
        <SolidColorBrush x:Key="DataGridCellFocusVisualPrimaryBrush">Transparent</SolidColorBrush>
        <SolidColorBrush x:Key="DataGridCellFocusVisualSecondaryBrush">Transparent</SolidColorBrush>

    </local:MpAvUserControl.Resources>

    <local:MpAvUserControl.Styles>

        <Style Selector="Button.footer">
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="Padding"
                    Value="5,3" />
            <Setter Property="Margin"
                    Value="10,0" />
        </Style>

        <!--  FRAMES  -->
        <Style Selector="local|MpAvSettingsFrameView">
            <Setter Property="Margin"
                    Value="10" />
            <Setter Property="MinWidth"
                    Value="300" />
            <Setter Property="MinHeight"
                    Value="50" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ThemeWhiteBrush}" />
        </Style>

        <!--  EXPANDERS  -->
        <Style Selector="Expander.header">
            <Style.Resources>
                <HorizontalAlignment x:Key="ExpanderHeaderHorizontalContentAlignment">Stretch</HorizontalAlignment>
                <!--<SolidColorBrush x:Key="ExpanderHeaderForeground" Color="{Binding Source={DynamicResource ExpanderHeaderBackground}, Converter={x:Static local:MpAvBrushToContrastBrushConverter.Instance}}" />-->
                <SolidColorBrush x:Key="ExpanderHeaderForeground" Color="White" Opacity="{DynamicResource GlobalInteractiveOpacity}" />
                <SolidColorBrush x:Key="ExpanderContentBackground" Color="{DynamicResource ThemeGrayAccent2Color}" Opacity="0.3" />

                <!--<SolidColorBrush x:Key="ExpanderHeaderForegroundPointerOver" Color="{Binding Source={DynamicResource ExpanderHeaderBackgroundPointerOver}, Converter={x:Static local:MpAvBrushToContrastBrushConverter.Instance}}" Opacity="{DynamicResource GlobalInteractiveOpacity}" />-->
                <!--<SolidColorBrush x:Key="ExpanderHeaderForegroundPressed" Color="{Binding Source={DynamicResource ExpanderHeaderBackgroundPressed}, Converter={x:Static local:MpAvBrushToContrastBrushConverter.Instance}}" Opacity="{DynamicResource GlobalInteractiveOpacity}" />-->

                <SolidColorBrush x:Key="ExpanderChevronForeground" Color="White" Opacity="{DynamicResource GlobalInteractiveOpacity}" />
                <SolidColorBrush x:Key="ExpanderChevronForegroundPointerOver" Color="{DynamicResource ThemeAccent1Color}" Opacity="{DynamicResource GlobalInteractiveOpacity}" />
                <SolidColorBrush x:Key="ExpanderChevronBackgroundPointerOver" Color="Transparent" Opacity="{DynamicResource GlobalInteractiveOpacity}" />

                <!--<SolidColorBrush x:Key="ExpanderHeaderBackground" Color="{DynamicResource ThemeCompliment2DarkColor}" Opacity="{DynamicResource GlobalInteractiveOpacity}" />
                <SolidColorBrush x:Key="ExpanderHeaderBackgroundPointerOver" Color="{DynamicResource ThemeCompliment2DarkColor}" Opacity="{DynamicResource GlobalInteractiveOpacity}" />
                <SolidColorBrush x:Key="ExpanderHeaderBackgroundPressed" Color="{DynamicResource ThemeCompliment2DarkColor}" Opacity="{DynamicResource GlobalInteractiveOpacity}" />-->

                <SolidColorBrush x:Key="ExpanderHeaderBorderBrush" Color="White" Opacity="{DynamicResource GlobalInteractiveOpacity}" />
                <!--<SolidColorBrush x:Key="ExpanderHeaderBorderBrushPointerOver" Color="{DynamicResource ThemeAccent1Color}" Opacity="{DynamicResource GlobalInteractiveOpacity}" />
                <SolidColorBrush x:Key="ExpanderHeaderBorderBrushPressed" Color="{DynamicResource ThemeAccent2Color}" Opacity="{DynamicResource GlobalInteractiveOpacity}" />-->

            </Style.Resources>
            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Stretch" />
            <Setter Property="ExpandDirection"
                    Value="Down" />
            <Setter Property="CornerRadius"
                    Value="10" />
            <Setter Property="Margin"
                    Value="10,0,20,0" />
        </Style>


        <Style Selector="Expander /template/ ToggleButton#ExpanderHeader">
            <Setter Property="HorizontalContentAlignment"
                    Value="Left" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="FontSize"
                    Value="20" />
        </Style>

        <!--  EXPANDER CONTENT CONTAINER  -->
        <Style Selector="DockPanel.dataPanel">
            <Setter Property="VerticalAlignment"
                    Value="Top" />
        </Style>


        <!--  HEADERS  -->
        <Style Selector="StackPanel.header.frame">
            <Setter Property="Margin"
                    Value="0,0,0,3" />
        </Style>
        <Style Selector="StackPanel.header">
            <Setter Property="Spacing"
                    Value="5" />
            <Setter Property="Orientation"
                    Value="Horizontal" />
        </Style>
        <Style Selector="TextBlock.header">
            <!--<Setter Property="Foreground"
                    Value="{Binding $parent[local:MpAvSettingsView].Background, Converter={x:Static local:MpAvBrushToContrastBrushConverter.Instance}}" />-->
            <Setter Property="Foreground"
                    Value="{DynamicResource ThemeWhiteBrush}" />
            <Setter Property="VerticalAlignment"
                    Value="Bottom" />
        </Style>
        <Style Selector="TextBlock.expander.header">
            <!--<Setter Property="Foreground"
                    Value="{Binding $parent[ToggleButton].Background, Converter={x:Static local:MpAvBrushToContrastBrushConverter.Instance}}" />-->

            <Setter Property="VerticalAlignment"
                    Value="Bottom" />
            <Setter Property="FontSize"
                    Value="22" />
        </Style>

        <Style Selector="TextBlock.header.frame">
            <Setter Property="FontSize"
                    Value="18" />
            <Setter Property="FontWeight"
                    Value="SemiBold" />
        </Style>

        <Style Selector="Image.expander.header.icon">
            <Setter Property="Width"
                    Value="30" />
            <Setter Property="Height"
                    Value="30" />
        </Style>

        <Style Selector="Image.frame.header.icon">
            <Setter Property="Width"
                    Value="20" />
            <Setter Property="Height"
                    Value="20" />
        </Style>

        <Style Selector="Border.header.labelUnderline">
            <Setter Property="Margin"
                    Value="0,5" />
        </Style>

        <!--  EMPTY GRID TEXTBLOCKS  -->
        <Style Selector="TextBlock.emptyTextBlock">
            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="FontStyle"
                    Value="Italic" />
            <Setter Property="FontWeight"
                    Value="SemiBold" />
            <Setter Property="TextAlignment"
                    Value="Center" />
            <Setter Property="FontSize"
                    Value="24" />
            <Setter Property="Effect"
                    Value="{DynamicResource ThemeGlow}" />
        </Style>


        <!--  DATAGRIDS  -->
        <Style Selector=":is(Border).filterDataGridContainer">
            <Setter Property="CornerRadius"
                    Value="10" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ThemeInteractiveColor}" />
            <Setter Property="BorderThickness"
                    Value="1" />
        </Style>
        <Style Selector="DataGrid">
            <Setter Property="Background"
                    Value="{DynamicResource ThemeCompliment4Color}" />
            <Setter Property="GridLinesVisibility"
                    Value="All" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                    Value="Disabled" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                    Value="Hidden" />
            <Setter Property="VerticalScrollBarVisibility"
                    Value="Hidden" />
            <Setter Property="HorizontalScrollBarVisibility"
                    Value="Hidden" />
            <Setter Property="RowHeight"
                    Value="40" />
            <Setter Property="SelectionMode"
                    Value="Single" />
            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalAlignment"
                    Value="Stretch" />
            <Setter Property="AutoGenerateColumns"
                    Value="False" />
            <Setter Property="CanUserResizeColumns"
                    Value="True" />
            <Setter Property="CanUserSortColumns"
                    Value="True" />
            <Setter Property="IsReadOnly"
                    Value="False" />
        </Style>

        <!--  DATAGRID ROW BG  -->
        <Style Selector="DataGridRow:nth-child(odd)">
            <Setter Property="Background"
                    Value="{DynamicResource ThemeCompliment3Color}" />
        </Style>
        <Style Selector="DataGridRow:nth-child(even)">
            <Setter Property="Background"
                    Value="{DynamicResource ThemeCompliment3DarkColor}" />
        </Style>
        <!--  DATAGRID MARQUEE TEXTBOX  -->
        <Style Selector="local|MpAvMarqueeTextBox">
            <Setter Property="EditOnFocus"
                    Value="False" />
            <Setter Property="DropShadowBrush"
                    Value="Transparent" />
            <Setter Property="SelectViewModelOnFocus"
                    Value="False" />
            <Setter Property="ReadOnlyForeground"
                    Value="{Binding $parent[DataGridRow].Background, Converter={x:Static local:MpAvBrushToContrastBrushConverter.Instance}}" />
        </Style>

        <Style Selector="DataGrid Grid.marqueeContainer">
            <Setter Property="ClipToBounds"
                    Value="True" />
            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalAlignment"
                    Value="Stretch" />
        </Style>

        <Style Selector="DataGrid :is(TextBox)">
            <Setter Property="MinHeight"
                    Value="20" />
            <Setter Property="Margin"
                    Value="5,0,0,0" />
            <Setter Property="FontSize"
                    Value="14" />
            <Setter Property="IsReadOnly"
                    Value="True" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Left" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
        </Style>

        <!--  DATAGRID ICONS  -->
        <Style Selector="DataGridCell Image">
            <Setter Property="Width"
                    Value="15" />
            <Setter Property="Height"
                    Value="15" />
        </Style>

        <!--  DATAGRID CHECKBOXES  -->
        <Style Selector="DataGrid CheckBox">
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Stretch" />
        </Style>

        <!--  DATAGRID SHORTCUT  -->
        <Style Selector="DataGrid local|MpAvShortcutView">
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="Margin"
                    Value="5" />
            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalAlignment"
                    Value="Stretch" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
        </Style>

        <!--  DATAGRID COMBOBOXES  -->

        <Style Selector="DataGrid ComboBox">
            <Setter Property="VerticalAlignment"
                    Value="Center" />
        </Style>
        <Style Selector="DataGrid ComboBox ComboBoxItem">

            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalContentAlignment"
                    Value="Stretch" />
        </Style>


        <!--  DATA GRID ADD BUTTON  -->

        <Style Selector=":is(Button).dataGridAddButton">
            <Setter Property="DockPanel.Dock"
                    Value="Bottom" />
            <Setter Property="HorizontalAlignment"
                    Value="Right" />
            <Setter Property="Margin"
                    Value="0,10,0,0" />
            <Setter Property="CornerRadius"
                    Value="5" />

        </Style>
        <Style Selector=":is(Button).dataGridAddButton DockPanel Image">
            <Setter Property="DockPanel.Dock"
                    Value="Left" />
            <Setter Property="Margin"
                    Value="2" />
        </Style>

        <!--  SECURITY/SHORTCUT CONTAINER PANELS  -->
        <Style Selector="StackPanel.expandersContainer">
            <Setter Property="Margin"
                    Value="0,20,0,0" />
            <Setter Property="Spacing"
                    Value="25" />
            <Setter Property="Orientation"
                    Value="Vertical" />

        </Style>

        <!--  PREF FRAME BG  -->
        <Style Selector="local|MpAvSettingsFrameView">
            <Setter Property="CornerRadius"
                    Value="10" />
            <Setter Property="Padding"
                    Value="10,5" />
        </Style>
        <Style Selector="local|MpAvSettingsFrameView:pointerover,local|MpAvSettingsFrameView:focus-within">
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="White" Opacity="0.05" />
                </Setter.Value>
            </Setter>
        </Style>

        <!--  PARAM LBI CORNER RADIUS  -->
        <Style Selector="ListBox#PluginParameterListBox > ListBoxItem:nth-child(1):nth-last-child(1)">
            <Setter Property="CornerRadius"
                    Value="10,10,10,10" />
        </Style>
        <Style Selector="ListBox#PluginParameterListBox > ListBoxItem:nth-child(1):not(:nth-last-child(1))">
            <Setter Property="CornerRadius"
                    Value="10,10,0,0" />
        </Style>
        <Style Selector="ListBox#PluginParameterListBox > ListBoxItem:nth-last-child(1):not(:nth-child(1))">
            <Setter Property="CornerRadius"
                    Value="0,0,10,10" />
        </Style>
    </local:MpAvUserControl.Styles>
    <DockPanel LastChildFill="True">
        <StackPanel x:Name="TabAndFilterPanel"
                    IsVisible="{Binding !IsLoginOnly}"
                    DockPanel.Dock="Top"
                    Orientation="Vertical">

            <!--  TABS PANEL  -->
            <local:MpAvSettingsMenuView x:Name="TabMenu"
                                        MaxHeight="200"
                                        BorderThickness="0,0,0,1.5"
                                        BorderBrush="Silver" />

            <!--  FILTER TEXTBOX  -->
            <Border Height="50"
                    HorizontalAlignment="Stretch"
                    BorderThickness="0,0,0,1.5"
                    BorderBrush="Silver">
                <local:MpAvClipBorder Grid.Row="1"
                                      Grid.ColumnSpan="6"
                                      Margin="10,0"
                                      Padding="0"
                                      CornerRadius="10"
                                      BorderBrush="{DynamicResource ThemeGrayAccent2Color}"
                                      BorderThickness="1"
                                      Background="{DynamicResource ThemeInteractiveBgColor}"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Center"
                                      VerticalContentAlignment="Center">
                    <Grid>

                        <!--  FILTER TEXTBOX  -->

                        <AutoCompleteBox MinWidth="150"
                                         MinHeight="30"
                                         VerticalAlignment="Stretch"
                                         BorderThickness="0"
                                         Margin="0"
                                         Padding="10,0,0,0"
                                         IsTextCompletionEnabled="False"
                                         MinimumPrefixLength="0"
                                         MinimumPopulateDelay="0.25"
                                         ItemsSource="{Binding RecentSettingsSearches}"
                                         local:MpAvDelayedTextChangedExtension.IsEnabled="True"
                                         local:MpAvDelayedTextChangedExtension.DelayMs="500"
                                         local:MpAvDelayedTextChangedExtension.Text="{Binding FilterText, Source={x:Static local:MpAvSettingsViewModel.Instance}, Mode=TwoWay}"
                                         Watermark="{x:Static local:UiStrings.SettingsSearchWatermark}" />


                        <!--  CLEAR FILTER BUTTON  -->

                        <local:MpAvClearTextButton x:Name="ClearSearchTextButton"
                                                   Classes="TextBoxButton square"
                                                   Height="20"
                                                   Margin="5"
                                                   IsVisible="{Binding FilterText, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}"
                                                   ClearCommand="{Binding ClearFilterTextCommand}"
                                                   HorizontalAlignment="Right"
                                                   VerticalAlignment="Center" />
                    </Grid>
                </local:MpAvClipBorder>
            </Border>

        </StackPanel>

        <!--  Footer  -->
        <Border x:Name="FooterContainer"
                IsVisible="{Binding !IsLoginOnly}"
                DockPanel.Dock="Bottom"
                HorizontalAlignment="Stretch"
                BorderThickness="0,1.5,0,0"
                BorderBrush="Silver"
                MinHeight="48"
                Background="{DynamicResource ThemeCompliment2Color}">
            <DockPanel>
                <Button x:Name="ResetButton"
                        IsVisible="{Binding IsPrefTabSelected}"
                        Classes="defaultButton textOnlyButton footer"
                        Margin="10"
                        DockPanel.Dock="Left"
                        Content="{x:Static local:UiStrings.PrefRestoreDefaultsLabel}"
                        Command="{Binding RestoreDefaultsCommand}" />
            </DockPanel>
        </Border>
        <!--  Content  -->
        <ScrollViewer x:Name="BodyScrollViewer"
                      BringIntoViewOnFocusChange="False">
            <ScrollViewer.Transitions>
                <Transitions>
                    <VectorTransition Property="Offset"
                                      Duration="0:0:0.5" />
                </Transitions>

            </ScrollViewer.Transitions>
            <TransitioningContentControl x:Name="SettingsTransitioningContentControl"
                                         Margin="10,5,20,5"
                                         DataContext="{Binding}"
                                         Content="{Binding SelectedTabIdx}">
                <TransitioningContentControl.PageTransition>
                    <CrossFade Duration="0:00:00.500" />
                </TransitioningContentControl.PageTransition>
                <TransitioningContentControl.DataTemplates>

                    <local:MpAvSettingsTabDataTemplateSelector>
                        <DataTemplate x:Key="AccountTemplate">
                            <!--<local:MpAvSettingsFrameCollectionView DataContext="{Binding FilteredAccountFrames, Source={x:Static local:MpAvSettingsViewModel.Instance}}" />-->
                            <local:MpAvAccountView />
                        </DataTemplate>
                        <DataTemplate x:Key="PreferencesTemplate"
                                      x:DataType="local:MpAvSettingsViewModel">
                            <local:MpAvSettingsFrameCollectionView DataContext="{Binding FilteredPreferenceFrames, Source={x:Static local:MpAvSettingsViewModel.Instance}}" />
                        </DataTemplate>
                        <DataTemplate x:Key="SecurityTemplate">
                            <local:MpAvInteropView />
                        </DataTemplate>
                        <DataTemplate x:Key="ShortcutsTemplate">
                            <local:MpAvShortcutsView />
                        </DataTemplate>
                        <DataTemplate x:Key="HelpTemplate">
                            <local:MpAvWebPageView DataContext="{x:Static local:MpAvHelpViewModel.Instance}" />
                        </DataTemplate>
                    </local:MpAvSettingsTabDataTemplateSelector>
                </TransitioningContentControl.DataTemplates>
            </TransitioningContentControl>
        </ScrollViewer>

    </DockPanel>
</local:MpAvUserControl>
