<local:MpAvUserControl xmlns="https://github.com/avaloniaui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       mc:Ignorable="d"
                       d:DesignWidth="800"
                       d:DesignHeight="750"
                       xmlns:sys="clr-namespace:System;assembly=mscorlib"
                       xmlns:local="using:MonkeyPaste.Avalonia"
                       xmlns:cefnet="clr-namespace:CefNet.Avalonia;assembly=CefNet.Avalonia"
                       xmlns:pcl="using:MonkeyPaste"
                       x:TypeArguments="local:MpAvSubscriptionPurchaseViewModel"
                       x:DataType="local:MpAvSubscriptionPurchaseViewModel"
                       x:CompileBindings="True"
                       DataContext="{x:Static local:MpAvSubscriptionPurchaseViewModel.Instance}"
                       x:Class="MonkeyPaste.Avalonia.MpAvSubscriptionView">
    <local:MpAvUserControl.Resources>
    </local:MpAvUserControl.Resources>
    <local:MpAvUserControl.Styles>
        <!--  ACCOUNT TYPE LBI  -->
        <Style Selector="ListBox#AccountTypeListBox > ListBoxItem"
               x:DataType="local:MpAvSubscriptionItemViewModel">
            <Setter Property="IsVisible"
                    Value="{Binding IsVisible}" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Transitions">
                <Setter.Value>
                    <Transitions>
                        <TransformOperationsTransition Property="RenderTransform"
                                                       Duration="0:0:.075" />
                    </Transitions>
                </Setter.Value>
            </Setter>
        </Style>

        <Style Selector="ListBox#AccountTypeListBox > ListBoxItem:pressed">
            <Setter Property="RenderTransform"
                    Value="scale(0.98)" />
        </Style>

        <!--  OUTER BORDER  -->
        <Style Selector="Border#OuterBorder">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ThemeWhiteBrush}" />
            <Setter Property="Background"
                    Value="{StaticResource HitTestableTransparent}" />
        </Style>

        <Style Selector="Border#OuterBorder.unlimited">
            <Setter Property="local:MpAvIsHoveringExtension.IsBorderTimerEnabled"
                    Value="True" />
        </Style>

        <Style Selector="ListBoxItem:pointerover:not(:selected) Border#OuterBorder">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ThemeAccent1Color}" />
        </Style>

        <Style Selector="ListBoxItem:pointerover:not(:selected) Border#OuterBorder.unlimited">
            <Setter Property="BorderBrush"
                    Value="{StaticResource GoldBrush}" />
        </Style>

        <Style Selector="ListBoxItem:selected Border#OuterBorder">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ThemeAccent3Color}" />
        </Style>

        <Style Selector="ListBoxItem:not(:selected) Border#OuterBorder.unlimited">
            <Setter Property="BorderBrush"
                    Value="{StaticResource RainbowBrush}" />
        </Style>

        <!--  ICON BORDER  -->
        <Style Selector="ListBox#AccountTypeListBox > ListBoxItem Border.acctIcon">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ThemeInteractiveColor}" />
        </Style>

        <Style Selector="ListBox#AccountTypeListBox > ListBoxItem:pointerover Border.acctIcon">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ThemeAccent1Color}" />
        </Style>

        <Style Selector="ListBox#AccountTypeListBox > ListBoxItem:checked Border.acctIcon">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ThemeAccent3Color}" />
        </Style>

        <!--  HIDE RESTORE OPT  -->
        <Style Selector="TextBlock">
            <Setter Property="Foreground"
                    Value="{Binding $parent[local:MpAvSettingsView].Background, Converter={x:Static local:MpAvBrushToContrastBrushConverter.Instance}}" />
        </Style>
    </local:MpAvUserControl.Styles>
    <Grid>
        <!--  SUBSCRIPTION CONTAINER  -->

        <Grid RowDefinitions="Auto,*,Auto"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Top"
              Margin="10">
            <Grid.IsVisible>
                <MultiBinding Converter="{x:Static BoolConverters.And}">
                    <Binding Path="!IsBusy" />
                    <Binding Path="IsStoreAvailable" />
                </MultiBinding>
            </Grid.IsVisible>

            <!--  ACCT MONTLY TOGGLE  -->
            <ToggleSwitch x:Name="MonthlyToggleButton"
                          Grid.Row="0"
                          Classes="defaultButton"
                          HorizontalAlignment="Right"
                          VerticalAlignment="Center"
                          IsChecked="{Binding IsMonthlyEnabled, Mode=TwoWay, FallbackValue=True, TargetNullValue=True}"
                          FontWeight="SemiBold"
                          OnContent="{x:Static local:UiStrings.AccountMonthlyLabel}"
                          OffContent="{x:Static local:UiStrings.AccountYearlyLabel}" />

            <!--  SUBSCRIPTION ITEMS  -->

            <ListBox x:Name="AccountTypeListBox"
                     Grid.Row="1"
                     Background="Transparent"
                     ItemsSource="{Binding Items}"
                     SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                     HorizontalAlignment="Stretch"
                     VerticalAlignment="Top">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.Resources>
                    <SolidColorBrush x:Key="SystemControlHighlightListAccentLowBrush">Transparent</SolidColorBrush>
                    <SolidColorBrush x:Key="SystemControlHighlightListAccentMediumBrush">Transparent</SolidColorBrush>
                    <SolidColorBrush x:Key="SystemControlHighlightListAccentHighBrush">Transparent</SolidColorBrush>
                    <SolidColorBrush x:Key="SystemControlHighlightListLowBrush">Transparent</SolidColorBrush>
                    <SolidColorBrush x:Key="SystemControlHighlightListMediumBrush">Transparent</SolidColorBrush>
                    <SolidColorBrush x:Key="SystemControlHighlightListHighBrush">Transparent</SolidColorBrush>
                    <Thickness x:Key="ListBoxItemPadding">0,1,5,10</Thickness>
                </ListBox.Resources>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Viewbox Stretch="UniformToFill"
                                 ClipToBounds="False">
                            <!--  ACCOUNT TYPE ITEM OUTER BORDER  -->
                            <Border x:Name="OuterBorder"
                                    Height="85"
                                    Padding="10,0,10,0"
                                    IsEnabled="{Binding CanBuy}"
                                    Classes.pulse="{Binding DoFocusPulse}"
                                    Classes.unlimited="{Binding IsUnlimited}"
                                    local:MpAvIsHoveringExtension.IsEnabled="True"
                                    local:MpAvIsHoveringExtension.IsHovering="{Binding IsHovering, Mode=TwoWay}"
                                    local:MpAvIsHoveringExtension.IsBorderFollowEnabled="False"
                                    CornerRadius="7"
                                    BorderThickness="2.5">

                                <DockPanel HorizontalAlignment="Stretch"
                                           VerticalAlignment="Stretch">

                                    <!--  ACCOUNT TYPE ICON BORDER  -->
                                    <Grid RowDefinitions="*,Auto"
                                          DockPanel.Dock="Left"
                                          VerticalAlignment="Center">
                                        <Border Classes="acctIcon squareByHeight"
                                                CornerRadius="7"
                                                BorderThickness="2"
                                                Padding="5">
                                            <Image Width="30"
                                                   Height="30"
                                                   Stretch="UniformToFill"
                                                   Source="{Binding IconSourceObj, ConverterParameter=test, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}}" />
                                        </Border>

                                        <!--  IS ACTIVE LABEL  -->
                                        <Border Grid.Row="1"
                                                HorizontalAlignment="Stretch"
                                                IsVisible="{Binding MatchesAccount}"
                                                Margin="0,3,0,0"
                                                CornerRadius="7"
                                                Background="Blue">
                                            <TextBlock Grid.Row="1"
                                                       HorizontalAlignment="Center"
                                                       TextAlignment="Center"
                                                       FontWeight="SemiBold"
                                                       FontSize="8"
                                                       Foreground="White"
                                                       Text="{x:Static local:UiStrings.AccountActiveLabel}" />
                                        </Border>

                                    </Grid>




                                    <!--  RATE  -->
                                    <TransitioningContentControl DockPanel.Dock="Right"
                                                                 VerticalAlignment="Center"
                                                                 Content="{Binding IsMonthlyEnabled}">
                                        <TransitioningContentControl.PageTransition>
                                            <PageSlide Orientation="Vertical"
                                                       SlideOutEasing="BounceEaseOut"
                                                       SlideInEasing="BounceEaseIn"
                                                       Duration="0:00:00.500" />
                                        </TransitioningContentControl.PageTransition>
                                        <TransitioningContentControl.ContentTemplate>
                                            <DataTemplate>
                                                <Border>
                                                    <TextBlock x:DataType="local:MpAvSubscriptionItemViewModel"
                                                               DataContext="{Binding $parent[ListBoxItem].DataContext}"
                                                               HorizontalAlignment="Left"
                                                               VerticalAlignment="Center"
                                                               TextWrapping="NoWrap"
                                                               TextAlignment="Right"
                                                               FontWeight="SemiBold"
                                                               FontStyle="Italic"
                                                               FontSize="20"
                                                               MinWidth="100"
                                                               Text="{Binding RateText}" />
                                                </Border>
                                            </DataTemplate>
                                        </TransitioningContentControl.ContentTemplate>
                                    </TransitioningContentControl>

                                    <StackPanel Orientation="Horizontal"
                                                Spacing="15">
                                        <!--  ACCOUNT TYPE NAME  -->

                                        <TextBlock HorizontalAlignment="Stretch"
                                                   VerticalAlignment="Center"
                                                   TextAlignment="Right"
                                                   Width="120"
                                                   FontSize="20"
                                                   FontWeight="SemiBold"
                                                   Text="{Binding LabelText}" />

                                        <!--  ACCOUNT TYPE INFO  -->
                                        <TextBlock HorizontalAlignment="Stretch"
                                                   VerticalAlignment="Center"
                                                   TextWrapping="WrapWithOverflow"
                                                   MaxWidth="200"
                                                   TextAlignment="Left"
                                                   FontSize="13"
                                                   Text="{Binding DescriptionText}" />

                                    </StackPanel>
                                </DockPanel>
                            </Border>
                        </Viewbox>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <!--  BUY BUTTON  -->
            <Button x:Name="BuyButton"
                    Grid.Row="2"
                    Loaded="BuyButton_Loaded"
                    Classes="defaultButton"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top"
                    IsVisible="{Binding SelectedItem, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}"
                    Opacity="{Binding SelectedItem.CanBuy, ConverterParameter=1|0, Converter={x:Static local:MpAvBoolToDoubleConverter.Instance}, FallbackValue=0, TargetNullValue=0}"
                    Command="{Binding PurchaseSubscriptionCommand}">
                <Button.RenderTransform>
                    <RotateTransform />
                </Button.RenderTransform>
                <Button.Transitions>
                    <Transitions>
                        <DoubleTransition Property="Opacity"
                                          Duration="0:0:1.0" />
                    </Transitions>
                </Button.Transitions>
                <Button.Resources>
                    <Thickness x:Key="ButtonPadding">20,5,20,5</Thickness>

                    <SolidColorBrush x:Key="ButtonBackground">Green</SolidColorBrush>
                    <SolidColorBrush x:Key="ButtonBackgroundPointerOver">Lime</SolidColorBrush>
                    <SolidColorBrush x:Key="ButtonBackgroundPressed">White</SolidColorBrush>

                    <SolidColorBrush x:Key="ButtonForegroundPointerOver">Black</SolidColorBrush>
                    <SolidColorBrush x:Key="ButtonForegroundPressed">Black</SolidColorBrush>
                </Button.Resources>
                <DockPanel DataContext="{Binding SelectedItem}"
                           x:DataType="local:MpAvSubscriptionItemViewModel">
                    <Image DockPanel.Dock="Left"
                           Width="30"
                           Height="30"
                           Margin="5"
                           VerticalAlignment="Center"
                           Source="{Binding Source={StaticResource BoltImage}, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}, ConverterParameter=yellow}" />
                    <TextBlock Text="{x:Static local:UiStrings.AccountUpgradeButtonText}"
                               FontSize="20"
                               VerticalAlignment="Center"
                               Foreground="White"
                               FontWeight="SemiBold" />
                </DockPanel>
            </Button>

        </Grid>

        <!--  OFFLINE OVERLAY  -->
        <Grid RowDefinitions="Auto,*"
              HorizontalAlignment="Center"
              VerticalAlignment="Top">
            <Grid.IsVisible>
                <MultiBinding Converter="{x:Static BoolConverters.And}">
                    <Binding Path="!IsBusy" />
                    <Binding Path="!IsStoreAvailable" />
                </MultiBinding>
            </Grid.IsVisible>
            <TextBlock Text="{x:Static local:UiStrings.CommonConnectionFailedCaption}"
                       Classes="emptyOverlayText" />
            <Button Grid.Row="1"
                    Classes="defaultButton textOnlyButton"
                    HorizontalAlignment="Center"
                    IsVisible="{Binding !IsBusy}"
                    Command="{Binding ReinitializeCommand}">
                <Button.Resources>
                    <Thickness x:Key="ButtonPadding">10,3,10,3</Thickness>
                </Button.Resources>
                <TextBlock Text="{x:Static local:UiStrings.CommonRetryLabel}" />
            </Button>
        </Grid>

        <!--  BUSY OVERLAY  -->
        <Grid RowDefinitions="Auto,*"
              IsVisible="{Binding IsBusy}"
              HorizontalAlignment="Center"
              VerticalAlignment="Top">
            <TextBlock Text="{x:Static local:UiStrings.CommonBusyLabel}"
                       Classes="emptyOverlayText" />
            <local:MpAvBusySpinnerView Grid.Row="1"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       IsVisible="{Binding IsBusy}"
                                       Width="70"
                                       Height="70" />
        </Grid>
    </Grid>
</local:MpAvUserControl>
