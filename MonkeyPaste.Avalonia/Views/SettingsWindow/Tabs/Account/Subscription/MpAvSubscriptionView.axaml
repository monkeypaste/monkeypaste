<local:MpAvUserControl xmlns="https://github.com/avaloniaui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       mc:Ignorable="d"
                       d:DesignWidth="800"
                       d:DesignHeight="750"
                       xmlns:sys="clr-namespace:System;assembly=mscorlib"
                       xmlns:local="using:MonkeyPaste.Avalonia"
                       xmlns:cefnet="clr-namespace:CefNet.Avalonia;assembly=CefNet.Avalonia"
                       xmlns:pcl="using:MonkeyPaste"
                       x:TypeArguments="local:MpAvSubscriptionPurchaseViewModel"
                       x:DataType="local:MpAvSubscriptionPurchaseViewModel"
                       x:CompileBindings="True"
                       DataContext="{x:Static local:MpAvSubscriptionPurchaseViewModel.Instance}"
                       x:Class="MonkeyPaste.Avalonia.MpAvSubscriptionView">
    <local:MpAvUserControl.Resources>
        <sys:Double x:Key="SubLbiBg_opacity">0.25</sys:Double>
        <SolidColorBrush x:Key="SubLbiBg_hover" Color="{DynamicResource ThemeWhiteColor}" Opacity="0.2" />
        <SolidColorBrush x:Key="SubLbiBg_selected" Color="Lime" Opacity="0.2" />
    </local:MpAvUserControl.Resources>
    <local:MpAvUserControl.Styles>
        <!--  ACCOUNT TYPE LBI  -->
        <Style Selector="ListBox#AccountTypeListBox > ListBoxItem"
               x:DataType="local:MpAvSubscriptionItemViewModel">
            <Setter Property="local:MpAvMutableClassesExtension.IsEnabled"
                    Value="True" />
            <Setter Property="local:MpAvMutableClassesExtension.MutableClasses"
                    Value="waddup" />
            <Setter Property="IsVisible"
                    Value="{Binding IsVisible}" />
            <Setter Property="Cursor"
                    Value="Hand" />
            <Setter Property="CornerRadius"
                    Value="7" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Margin"
                    Value="0,0,0,10" />
            <!--<Setter Property="Height"
                    Value="100" />-->
            <Setter Property="Background"
                    Value="{StaticResource HitTestableTransparent}" />
            <Setter Property="Transitions">
                <Setter.Value>
                    <Transitions>
                        <TransformOperationsTransition Property="RenderTransform"
                                                       Duration="0:0:0.2" />
                    </Transitions>
                </Setter.Value>
            </Setter>
        </Style>

        <Style Selector="ListBox#AccountTypeListBox > ListBoxItem:pressed">
            <Setter Property="RenderTransform"
                    Value="scale(0.74)" />
        </Style>

        <!--  OUTER BORDER  -->
        <Style Selector="local|MpAvClipBorder#OuterBorder">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ThemeWhiteBrush}" />
            <Setter Property="Background"
                    Value="{StaticResource HitTestableTransparent}" />
            <Setter Property="Transitions">
                <Setter.Value>
                    <Transitions>
                        <BrushTransition Property="Background"
                                         Duration="0:0:0.25" />
                    </Transitions>
                </Setter.Value>
            </Setter>
        </Style>

        <Style Selector="local|MpAvClipBorder#OuterBorder.unlimited">
            <Setter Property="BorderBrush">
                <Setter.Value>

                    <LinearGradientBrush SpreadMethod="Repeat" TransformOrigin="0%,0%" StartPoint="0%,0%" EndPoint="100%,100%">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Offset="0" Color="Red" />
                            <GradientStop Offset="0.14" Color="Orange" />
                            <GradientStop Offset="0.28" Color="Yellow" />
                            <GradientStop Offset="0.42" Color="Green" />
                            <GradientStop Offset="0.56" Color="Blue" />
                            <GradientStop Offset="0.7" Color="Indigo" />
                            <GradientStop Offset="0.8" Color="Violet" />
                            <GradientStop Offset="0.94" Color="Red" />
                        </LinearGradientBrush.GradientStops>
                        <LinearGradientBrush.Transform>
                            <RotateTransform />
                        </LinearGradientBrush.Transform>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>


        <Style Selector="ListBox#AccountTypeListBox > ListBoxItem:pointerover local|MpAvClipBorder#OuterBorder">
            <Setter Property="Background"
                    Value="{DynamicResource SubLbiBg_hover}" />
        </Style>

        <Style Selector="ListBox#AccountTypeListBox > ListBoxItem:selected local|MpAvClipBorder#OuterBorder">
            <Setter Property="Background"
                    Value="{DynamicResource SubLbiBg_selected}" />
        </Style>

        <!--  ICON BORDER  -->
        <Style Selector="ListBox#AccountTypeListBox > ListBoxItem Border.acctIcon">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ThemeInteractiveColor}" />
        </Style>

        <Style Selector="ListBox#AccountTypeListBox > ListBoxItem:pointerover Border.acctIcon">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ThemeAccent1Color}" />
        </Style>

        <Style Selector="ListBox#AccountTypeListBox > ListBoxItem:checked Border.acctIcon">
            <Setter Property="BorderBrush"
                    Value="{DynamicResource ThemeAccent3Color}" />
        </Style>

        <!--  TEXT COLOR  -->
        <Style Selector="TextBlock">
            <!--<Setter Property="Foreground"
                    Value="{Binding $parent[local:MpAvSettingsView].Background, Converter={x:Static local:MpAvBrushToContrastBrushConverter.Instance}}" />-->
            <Setter Property="Foreground"
                    Value="{DynamicResource ThemeWhiteBrush}" />
        </Style>

        <!--  BADGE  -->
        <Style Selector="Border.badge">
            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
            <Setter Property="Margin"
                    Value="0,7,0,0" />
            <Setter Property="CornerRadius"
                    Value="7" />
            <Setter Property="MinHeight"
                    Value="0" />
            <Setter Property="MinWidth"
                    Value="0" />
        </Style>

        <Style Selector="Border.active">
            <Setter Property="Background"
                    Value="Blue" />
        </Style>
        <Style Selector="Border.expired">
            <Setter Property="Background"
                    Value="Yellow" />
        </Style>

        <Style Selector="Border.badge TextBlock">
            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
            <Setter Property="TextAlignment"
                    Value="Center" />
            <Setter Property="FontWeight"
                    Value="SemiBold" />
            <Setter Property="FontSize"
                    Value="8" />
            <Setter Property="MinHeight"
                    Value="0" />
            <Setter Property="MinWidth"
                    Value="0" />
        </Style>
        <Style Selector="Border.badge:not(.expired) TextBlock">
            <Setter Property="Foreground"
                    Value="White" />
        </Style>
        <Style Selector="Border.badge.trial TextBlock">
            <Setter Property="VerticalAlignment"
                    Value="Top" />
        </Style>
        <Style Selector="Border.badge.expired TextBlock">
            <Setter Property="Foreground"
                    Value="Black" />
            <Setter Property="Text"
                    Value="{x:Static local:UiStrings.AccountExpiredLabel}" />
        </Style>
        <Style Selector="Border.badge.active TextBlock">
            <Setter Property="Text"
                    Value="{x:Static local:UiStrings.AccountActiveLabel}" />
        </Style>

        <!--  ACCOUNT INFO INLINES  -->

        <Style Selector="TextBlock.sub-info">
            <Setter Property="FontSize"
                    Value="12" />
            <Setter Property="TextWrapping"
                    Value="NoWrap" />
        </Style>
        <Style Selector="Run.bullet">
            <Setter Property="Text"
                    Value="● " />
        </Style>
        <Style Selector="Run.limited">
            <Setter Property="Foreground"
                    Value="Gold" />
            <Setter Property="Text"
                    Value="{x:Static local:UiStrings.AccountLimitedLabel}" />
        </Style>
        <Style Selector="Run.unlimited">
            <Setter Property="Foreground"
                    Value="Lime" />
            <Setter Property="Text"
                    Value="{x:Static local:UiStrings.AccountUnlimitedLabel}" />
        </Style>
        <Style Selector="Run.storage">
            <Setter Property="Text"
                    Value="{x:Static local:UiStrings.AccountStorageLabel}" />
        </Style>
        <Style Selector="Run.trash">
            <Setter Property="Text"
                    Value="{x:Static local:UiStrings.AccountTrashLabel}" />
        </Style>
        <Style Selector="Run.cap">
            <Setter Property="Foreground"
                    Value="Red" />
        </Style>
    </local:MpAvUserControl.Styles>
    <Grid>
        <!--  SUBSCRIPTION CONTAINER  -->

        <Grid RowDefinitions="Auto,*,Auto"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Top"
              Margin="10">
            <Grid.IsVisible>
                <MultiBinding Converter="{x:Static BoolConverters.And}">
                    <Binding Path="!IsBusy" />
                    <Binding Path="IsStoreAvailable" />
                </MultiBinding>
            </Grid.IsVisible>

            <!--  ACCT MONTLY TOGGLE  -->
            <ToggleSwitch x:Name="MonthlyToggleButton"
                          Grid.Row="0"
                          Margin="0,0,0,5"
                          Classes="defaultButton"
                          HorizontalAlignment="Right"
                          VerticalAlignment="Center"
                          IsChecked="{Binding IsMonthlyEnabled, Mode=TwoWay, FallbackValue=True, TargetNullValue=True}"
                          FontWeight="SemiBold"
                          OnContent="{x:Static local:UiStrings.AccountMonthlyLabel}"
                          OffContent="{x:Static local:UiStrings.AccountYearlyLabel}" />

            <!--  SUBSCRIPTION ITEMS  -->

            <ListBox x:Name="AccountTypeListBox"
                     Grid.Row="1"
                     Background="Transparent"
                     ItemsSource="{Binding Items}"
                     SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                     HorizontalAlignment="Stretch"
                     VerticalAlignment="Top">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Vertical" />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.Resources>
                    <SolidColorBrush x:Key="SystemControlHighlightListAccentLowBrush">Transparent</SolidColorBrush>
                    <SolidColorBrush x:Key="SystemControlHighlightListAccentMediumBrush">Transparent</SolidColorBrush>
                    <SolidColorBrush x:Key="SystemControlHighlightListAccentHighBrush">Transparent</SolidColorBrush>
                    <SolidColorBrush x:Key="SystemControlHighlightListLowBrush">Transparent</SolidColorBrush>
                    <SolidColorBrush x:Key="SystemControlHighlightListMediumBrush">Transparent</SolidColorBrush>
                    <SolidColorBrush x:Key="SystemControlHighlightListHighBrush">Transparent</SolidColorBrush>
                    <!--<Thickness x:Key="ListBoxItemPadding">0,1,5,10</Thickness>-->
                    <Thickness x:Key="ListBoxItemPadding">0,0,0,0</Thickness>
                </ListBox.Resources>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Viewbox Stretch="UniformToFill"
                                 ClipToBounds="False">
                            <!--  ACCOUNT TYPE ITEM OUTER BORDER  -->
                            <local:MpAvClipBorder x:Name="OuterBorder"
                                                  Effect="{DynamicResource ThemeBlackDropShadow}"
                                                  Height="60"
                                                  Padding="10,0,10,0"
                                                  Classes.pulse="{Binding DoFocusPulse}"
                                                  Classes.unlimited="{Binding IsUnlimited}"
                                                  local:MpAvIsHoveringExtension.IsEnabled="True"
                                                  local:MpAvIsHoveringExtension.IsHovering="{Binding IsHovering, Mode=TwoWay}"
                                                  CornerRadius="7"
                                                  BorderThickness="1.5">
                                <Grid ColumnDefinitions="45,100,150,45">

                                    <!--  ACCOUNT TYPE ICON BORDER  -->
                                    <StackPanel Grid.Column="0"
                                                VerticalAlignment="Center"
                                                Spacing="3">
                                        <Border Classes="acctIcon squareByHeight"
                                                VerticalAlignment="Center"
                                                CornerRadius="7"
                                                BorderThickness="2"
                                                Padding="5">
                                            <Image Width="20"
                                                   Height="20"
                                                   Stretch="UniformToFill"
                                                   Source="{Binding IconSourceObj, ConverterParameter=test, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}}" />
                                        </Border>

                                        <!--  IS ACTIVE LABEL  -->
                                        <Border Margin="0"
                                                Classes="badge"
                                                IsVisible="{Binding MatchesAccount}"
                                                Padding="0,3,0,0"
                                                Classes.active="{Binding !IsExpired, Source={x:Static local:MpAvAccountViewModel.Instance}}"
                                                Classes.expired="{Binding IsExpired, Source={x:Static local:MpAvAccountViewModel.Instance}}">
                                            <TextBlock />
                                        </Border>

                                    </StackPanel>

                                    <!--  ACCOUNT TYPE NAME  -->

                                    <TextBlock Grid.Column="1"
                                               Margin="0,0,15,0"
                                               HorizontalAlignment="Stretch"
                                               VerticalAlignment="Center"
                                               TextAlignment="Right"
                                               FontSize="16"
                                               FontWeight="SemiBold"
                                               Text="{Binding LabelText}" />
                                    <!--  ACCOUNT TYPE INFO  -->

                                    <ContentControl Grid.Column="2"
                                                    Margin="0,0,0,0"
                                                    Content="{Binding}"
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Center">
                                        <ContentControl.DataTemplates>
                                            <local:MpAvSubscriptionDetailTemplateSelector>
                                                <!--  FREE TEMPLATE  -->
                                                <DataTemplate x:Key="FreeTemplate"
                                                              x:DataType="local:MpAvSubscriptionItemViewModel">
                                                    <TextBlock Classes="sub-info"
                                                               TextWrapping="WrapWithOverflow"
                                                               TextAlignment="Left">
                                                        <TextBlock.Inlines>
                                                            <!--  Clip line  -->
                                                            <Run Classes="bullet" />
                                                            <Run Classes="limited" />
                                                            <Run Classes="storage" />
                                                            <Run Text="(" />
                                                            <Run Text="{Binding ClipCapCount}"
                                                                 Classes="cap" />
                                                            <Run Text=")" />
                                                            <LineBreak />
                                                            <!--  Trash line  -->
                                                            <Run Classes="bullet" />
                                                            <Run Classes="limited" />
                                                            <Run Classes="trash" />
                                                            <Run Text="(" />
                                                            <Run Text="{Binding TrashCapCount}"
                                                                 Classes="cap" />
                                                            <Run Text=")" />
                                                        </TextBlock.Inlines>
                                                    </TextBlock>
                                                </DataTemplate>

                                                <!--  BASIC TEMPLATE  -->
                                                <DataTemplate x:Key="BasicTemplate"
                                                              x:DataType="local:MpAvSubscriptionItemViewModel">
                                                    <TextBlock Classes="sub-info"
                                                               TextWrapping="WrapWithOverflow"
                                                               TextAlignment="Left">
                                                        <TextBlock.Inlines>
                                                            <!--  Clip line  -->
                                                            <Run Classes="bullet" />
                                                            <Run Classes="limited" />
                                                            <Run Classes="storage" />
                                                            <Run Text="(" />
                                                            <Run Text="{Binding ClipCapCount}"
                                                                 Classes="cap" />
                                                            <Run Text=")" />
                                                            <LineBreak />
                                                            <!--  Trash line  -->
                                                            <Run Classes="bullet" />
                                                            <Run Classes="unlimited" />
                                                            <Run Classes="trash" />
                                                        </TextBlock.Inlines>
                                                    </TextBlock>
                                                </DataTemplate>

                                                <!--  UNLIMITED TEMPLATE  -->
                                                <DataTemplate x:Key="UnlimitedTemplate"
                                                              x:DataType="local:MpAvSubscriptionItemViewModel">
                                                    <TextBlock Classes="sub-info"
                                                               TextWrapping="WrapWithOverflow"
                                                               TextAlignment="Left">
                                                        <TextBlock.Inlines>
                                                            <!--  Clip line  -->
                                                            <Run Classes="bullet" />
                                                            <Run Classes="unlimited" />
                                                            <Run Classes="storage" />
                                                            <LineBreak />
                                                            <!--  Trash line  -->
                                                            <Run Classes="bullet" />
                                                            <Run Classes="unlimited" />
                                                            <Run Classes="trash" />
                                                        </TextBlock.Inlines>
                                                    </TextBlock>
                                                </DataTemplate>

                                            </local:MpAvSubscriptionDetailTemplateSelector>
                                        </ContentControl.DataTemplates>
                                    </ContentControl>

                                    <!--  RATE  -->
                                    <TransitioningContentControl Grid.Column="3"
                                                                 VerticalAlignment="Center"
                                                                 Content="{Binding IsMonthlyEnabled}">
                                        <TransitioningContentControl.PageTransition>
                                            <PageSlide Orientation="Vertical"
                                                       SlideOutEasing="BounceEaseOut"
                                                       SlideInEasing="BounceEaseIn"
                                                       Duration="0:00:00.500" />
                                        </TransitioningContentControl.PageTransition>
                                        <TransitioningContentControl.ContentTemplate>
                                            <DataTemplate>
                                                <StackPanel VerticalAlignment="Center"
                                                            x:DataType="local:MpAvSubscriptionItemViewModel"
                                                            DataContext="{Binding $parent[ListBoxItem].DataContext}"
                                                            Spacing="3">
                                                    <!--  RATE TEXT  -->
                                                    <TextBlock HorizontalAlignment="Left"
                                                               VerticalAlignment="Center"
                                                               TextWrapping="NoWrap"
                                                               TextAlignment="Right"
                                                               FontWeight="SemiBold"
                                                               FontStyle="Italic"
                                                               FontSize="16"
                                                               Text="{Binding RateText}" />
                                                    <!--  TRIAL BADGE  -->
                                                    <Border Grid.Row="1"
                                                            Margin="0"
                                                            Classes="badge trial"
                                                            HorizontalAlignment="Right"
                                                            Padding="5,3,5,0"
                                                            IsVisible="{Binding TrialText, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}"
                                                            Background="Crimson">
                                                        <TextBlock Foreground="White"
                                                                   TextWrapping="WrapWithOverflow"
                                                                   Text="{Binding TrialText}" />
                                                    </Border>
                                                </StackPanel>
                                            </DataTemplate>
                                        </TransitioningContentControl.ContentTemplate>
                                    </TransitioningContentControl>
                                </Grid>
                            </local:MpAvClipBorder>
                        </Viewbox>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <!--
                BUY BUTTON
            -->
            <Button x:Name="BuyButton"
                    Margin="0,3,0,0"
                    Grid.Row="2"
                    Loaded="BuyButton_Loaded"
                    Classes="defaultButton"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top"
                    Command="{Binding PurchaseSubscriptionCommand}"
                    IsVisible="{Binding SelectedItem, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}"
                    Opacity="{Binding SelectedItem.CanBuy, ConverterParameter=1|0, Converter={x:Static local:MpAvBoolToDoubleConverter.Instance}, FallbackValue=0, TargetNullValue=0}">
                <Button.RenderTransform>
                    <RotateTransform />
                </Button.RenderTransform>
                <Button.Transitions>
                    <Transitions>
                        <DoubleTransition Property="Opacity"
                                          Duration="0:0:1.0" />
                    </Transitions>
                </Button.Transitions>
                <Button.Resources>
                    <Thickness x:Key="ButtonPadding">20,5,20,5</Thickness>

                    <SolidColorBrush x:Key="ButtonBackground">Green</SolidColorBrush>
                    <SolidColorBrush x:Key="ButtonBackgroundPointerOver">Lime</SolidColorBrush>
                    <SolidColorBrush x:Key="ButtonBackgroundPressed">White</SolidColorBrush>

                    <SolidColorBrush x:Key="ButtonForegroundPointerOver">Black</SolidColorBrush>
                    <SolidColorBrush x:Key="ButtonForegroundPressed">Black</SolidColorBrush>
                </Button.Resources>
                <DockPanel DataContext="{Binding SelectedItem}"
                           x:DataType="local:MpAvSubscriptionItemViewModel">
                    <Image DockPanel.Dock="Left"
                           Width="30"
                           Height="30"
                           Margin="5"
                           VerticalAlignment="Center"
                           Source="{Binding Source={StaticResource BoltImage}, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}, ConverterParameter=yellow1}" />
                    <TextBlock Text="{x:Static local:UiStrings.AccountUpgradeButtonText}"
                               FontSize="20"
                               VerticalAlignment="Center"
                               Foreground="White"
                               FontWeight="SemiBold" />
                </DockPanel>
            </Button>

        </Grid>

        <!--  OFFLINE OVERLAY  -->
        <Grid RowDefinitions="Auto,*"
              HorizontalAlignment="Center"
              VerticalAlignment="Center">
            <Grid.IsVisible>
                <MultiBinding Converter="{x:Static BoolConverters.And}">
                    <Binding Path="!IsBusy" />
                    <Binding Path="!IsStoreAvailable" />
                </MultiBinding>
            </Grid.IsVisible>
            <TextBlock Text="{x:Static local:UiStrings.CommonConnectionFailedCaption}"
                       Classes="emptyOverlayText" />
            <Button Grid.Row="1"
                    Classes="defaultButton textOnlyButton"
                    HorizontalAlignment="Center"
                    IsVisible="{Binding !IsBusy}"
                    Command="{Binding ReinitializeCommand}">
                <Button.Resources>
                    <Thickness x:Key="ButtonPadding">10,3,10,3</Thickness>
                </Button.Resources>
                <TextBlock Text="{x:Static local:UiStrings.CommonRetryLabel}" />
            </Button>
        </Grid>

        <!--  BUSY OVERLAY  -->
        <Grid RowDefinitions="Auto,*"
              IsVisible="{Binding IsBusy}"
              HorizontalAlignment="Center"
              VerticalAlignment="Center">
            <TextBlock Text="{x:Static local:UiStrings.CommonBusyLabel}"
                       Classes="emptyOverlayText" />
            <local:MpAvBusySpinnerView Grid.Row="1"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       IsVisible="{Binding IsBusy}"
                                       Width="70"
                                       Height="70" />
        </Grid>
    </Grid>
</local:MpAvUserControl>
