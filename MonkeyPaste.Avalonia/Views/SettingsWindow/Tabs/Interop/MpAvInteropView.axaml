<local:MpAvUserControl xmlns="https://github.com/avaloniaui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       mc:Ignorable="d"
                       d:DesignWidth="800"
                       d:DesignHeight="750"
                       xmlns:sys="clr-namespace:System;assembly=mscorlib"
                       xmlns:local="using:MonkeyPaste.Avalonia"
                       xmlns:pcl="using:MonkeyPaste"
                       x:TypeArguments="local:MpAvSettingsViewModel"
                       x:DataType="local:MpAvSettingsViewModel"
                       x:CompileBindings="True"
                       DataContext="{x:Static local:MpAvSettingsViewModel.Instance}"
                       x:Class="MonkeyPaste.Avalonia.MpAvInteropView">
    <local:MpAvUserControl.Styles>


        <!--  OLE FORMAT BUTTON  -->

        <Style Selector="DropDownButton.oleFormatButton /template/ PathIcon#DropDownGlyph">
            <Setter Property="IsVisible"
                    Value="False" />
        </Style>
        <Style Selector="DropDownButton.oleFormatButton:pointerover /template/ PathIcon#DropDownGlyph">
            <Setter Property="IsVisible"
                    Value="True" />
        </Style>

        <Style Selector="DropDownButton.oleFormatButton">
            <Style.Resources>
                <CornerRadius x:Key="ControlCornerRadius">0</CornerRadius>
                <Thickness x:Key="ButtonBorderThemeThickness">1.5</Thickness>
            </Style.Resources>

            <Setter Property="FontWeight"
                    Value="SemiBold" />
        </Style>

        <!--  FORMAT STRIP CMD ARG  -->

        <Style Selector="local|MpAvOleFormatStripView.read Button">
            <Setter Property="CommandParameter"
                    Value="{Binding $self, ConverterParameter=read, Converter={x:Static local:MpAvObjectToObjectArrayConverter.Instance}}" />
        </Style>
        <Style Selector="local|MpAvOleFormatStripView.write Button">
            <Setter Property="CommandParameter"
                    Value="{Binding $self, ConverterParameter=write, Converter={x:Static local:MpAvObjectToObjectArrayConverter.Instance}}" />
        </Style>

    </local:MpAvUserControl.Styles>
    <StackPanel>

        <!--  APPS  -->
        <Expander Classes="header">
            <Expander.Header>
                <StackPanel Classes="header expander"
                            Orientation="Horizontal">
                    <Image Classes="expander header icon"
                           Source="{Binding Source={StaticResource AppFrameImage}, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}, ConverterParameter=ThemeInteractiveColor}" />
                    <TextBlock Classes="expander header"
                               Text="{x:Static local:UiStrings.SettingsInteropAppsLabel}" />
                </StackPanel>
            </Expander.Header>
            <Expander.Content>
                <DockPanel Classes="dataPanel"
                           VerticalAlignment="Top"
                           x:DataType="local:MpAvAppCollectionViewModel"
                           DataContext="{x:Static local:MpAvAppCollectionViewModel.Instance}">

                    <!--  ADD APP BUTTON  -->

                    <DropDownButton DockPanel.Dock="Bottom"
                                    HorizontalAlignment="Right"
                                    Classes="defaultButton iconTextButton dataGridAddButton"
                                    Command="{Binding AddAppCommand}">
                        <DockPanel>
                            <Image DockPanel.Dock="Left"
                                   Source="{Binding Source={StaticResource AddImage}, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
                            <Label Content="{x:Static local:UiStrings.SettingsInteropAddAppButtonLabel}" />
                        </DockPanel>
                    </DropDownButton>
                    <local:MpAvClipBorder Classes="filterDataGridContainer">
                        <!--  APP DATA GRID  -->
                        <DataGrid Grid.Row="1"
                                  x:Name="ExcludedAppDatagrid"
                                  ItemsSource="{Binding FilteredExternalItems}"
                                  SelectedItem="{Binding SelectedItem, Mode=TwoWay}">

                            <DataGrid.Columns>

                                <!--  ICON  -->

                                <DataGridTemplateColumn Width="30"
                                                        CanUserResize="False">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="local:MpAvAppViewModel">
                                            <Image Width="15"
                                                   Height="15"
                                                   Source="{Binding IconId, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <!--  APP NAME  -->
                                <DataGridTemplateColumn Header="{x:Static local:UiStrings.SettingsInteropAppNameHeaderLabel}"
                                                        CanUserSort="True"
                                                        SortMemberPath="AppName"
                                                        Width="0.2*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="local:MpAvAppViewModel">
                                            <Grid Classes="marqueeContainer">
                                                <local:MpAvMarqueeTextBox EditOnFocus="False"
                                                                          DropShadowBrush="Transparent"
                                                                          ReadOnlyForeground="Black"
                                                                          SelectViewModelOnFocus="False"
                                                                          NavigateUriCommand="{Binding NavigateToUriCommand, Source={x:Static local:MpAvUriNavigator.Instance}}"
                                                                          NavigateUriCommandParameter="{Binding AppPath, Converter={x:Static local:MpAvFileToFolderPathConverter.Instance}}"
                                                                          NavigateUriRequiredKeyString="Alt"
                                                                          Text="{Binding AppName}">

                                                    <ToolTip.Tip>
                                                        <local:MpAvToolTipView ToolTipText="{Binding AppPath, StringFormat='Alt Click to browse to \n {0}'}" />
                                                    </ToolTip.Tip>
                                                </local:MpAvMarqueeTextBox>
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <!--  COPY SHORTCUT  -->

                                <DataGridTemplateColumn CanUserSort="True"
                                                        SortMemberPath="CopyShortcutViewModel.ShortcutCmdKeyString"
                                                        Width="Auto">
                                    <DataGridTemplateColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal"
                                                        Spacing="5">
                                                <TextBlock Text="{x:Static local:UiStrings.SettingsInteropAppCopyShortcutHeaderLabel}" />
                                                <local:MpAvToolTipInfoHintView ToolTipHtml="{x:Static local:UiStrings.SettingsInteropAppCopyShortcutHeaderHint}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.HeaderTemplate>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="local:MpAvAppViewModel">
                                            <Grid DataContext="{Binding CopyShortcutViewModel}"
                                                  x:DataType="local:MpAvAppClipboardShortcutViewModel">
                                                <local:MpAvShortcutView Classes="active"
                                                                        Background="Transparent"
                                                                        Margin="5"
                                                                        HorizontalAlignment="Stretch"
                                                                        VerticalAlignment="Stretch"
                                                                        HorizontalContentAlignment="Center"
                                                                        VerticalContentAlignment="Center"
                                                                        RecordCommand="{Binding RecordShortcutCommand}" />
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <!--  PASTE SHORTCUT  -->

                                <DataGridTemplateColumn CanUserSort="True"
                                                        SortMemberPath="PasteShortcutViewModel.ShortcutCmdKeyString"
                                                        Width="Auto">
                                    <DataGridTemplateColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal"
                                                        Spacing="5">
                                                <TextBlock Text="{x:Static local:UiStrings.SettingsInteropAppPasteShortcutHeaderLabel}" />
                                                <local:MpAvToolTipInfoHintView ToolTipHtml="{x:Static local:UiStrings.SettingsInteropAppPasteShortcutHeaderHint}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.HeaderTemplate>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="local:MpAvAppViewModel">
                                            <Grid DataContext="{Binding PasteShortcutViewModel}"
                                                  x:DataType="local:MpAvAppClipboardShortcutViewModel">
                                                <local:MpAvShortcutView Classes="active"
                                                                        Background="Transparent"
                                                                        Margin="5"
                                                                        HorizontalAlignment="Stretch"
                                                                        VerticalAlignment="Stretch"
                                                                        HorizontalContentAlignment="Center"
                                                                        VerticalContentAlignment="Center"
                                                                        RecordCommand="{Binding RecordShortcutCommand}" />
                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <!--  READER FORMATS  -->

                                <DataGridTemplateColumn CanUserSort="False"
                                                        Width="Auto">
                                    <DataGridTemplateColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal"
                                                        Spacing="5">
                                                <TextBlock Text="{x:Static local:UiStrings.SettingsInteropAppReadHeaderLabel}" />
                                                <local:MpAvToolTipInfoHintView ToolTipHtml="{x:Static local:UiStrings.SettingsInteropAppOleFormatsHeaderHint}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.HeaderTemplate>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="local:MpAvAppViewModel">
                                            <Grid Classes="oleFormatContainer"
                                                  x:DataType="local:MpAvAppOleFormatInfoCollectionViewModel"
                                                  Margin="3"
                                                  DataContext="{Binding OleFormatInfos}">

                                                <!--  READER CUSTOM STRIP  -->

                                                <local:MpAvOleFormatStripView Classes="read"
                                                                              Cursor="Hand"
                                                                              HorizontalAlignment="Center"
                                                                              DataContext="{Binding Readers}">
                                                    <local:MpAvOleFormatStripView.IsVisible>
                                                        <MultiBinding Converter="{x:Static BoolConverters.And}">
                                                            <Binding Path="!IsVisible"
                                                                     ElementName="DefaultOleButton" />
                                                            <Binding Path="!IsVisible"
                                                                     ElementName="NoopOleButton" />
                                                        </MultiBinding>
                                                    </local:MpAvOleFormatStripView.IsVisible>
                                                </local:MpAvOleFormatStripView>

                                                <!--  READER DEFAULT BUTTON  -->

                                                <DropDownButton x:Name="DefaultOleButton"
                                                                Classes="oleFormatButton"
                                                                Classes.noop="{Binding IsReadersOnlyNoOp}"
                                                                HorizontalAlignment="Center"
                                                                IsVisible="{Binding IsReaderDefault}"
                                                                Command="{Binding ShowOleFormatMenuCommand}"
                                                                CommandParameter="{Binding $self, ConverterParameter=read, Converter={x:Static local:MpAvObjectToObjectArrayConverter.Instance}}">
                                                    <DropDownButton.Resources>
                                                        <SolidColorBrush x:Key="ButtonForeground">Blue</SolidColorBrush>
                                                        <SolidColorBrush x:Key="ButtonBorderBrush">Blue</SolidColorBrush>

                                                        <SolidColorBrush x:Key="ButtonBackground">Transparent</SolidColorBrush>
                                                        <SolidColorBrush x:Key="ComboBoxDropDownGlyphForeground">White</SolidColorBrush>

                                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver">Blue</SolidColorBrush>
                                                        <SolidColorBrush x:Key="ButtonBackgroundPressed">White</SolidColorBrush>

                                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver">White</SolidColorBrush>
                                                        <SolidColorBrush x:Key="ButtonForegroundPressed">Black</SolidColorBrush>
                                                    </DropDownButton.Resources>
                                                    <DropDownButton.IsVisible>
                                                        <MultiBinding Converter="{x:Static BoolConverters.And}">
                                                            <Binding Path="IsReaderDefault" />
                                                            <Binding Path="!IsReadersOnlyNoOp" />
                                                        </MultiBinding>
                                                    </DropDownButton.IsVisible>

                                                    <TextBlock Text="{x:Static local:UiStrings.SettingsInteropAppOleFormatDefaultButtonLabel}" />
                                                </DropDownButton>

                                                <!--  READER NOOP BUTTON  -->

                                                <DropDownButton x:Name="NoopOleButton"
                                                                Classes="oleFormatButton"
                                                                HorizontalAlignment="Center"
                                                                Command="{Binding ShowOleFormatMenuCommand}"
                                                                CommandParameter="{Binding $self, ConverterParameter=read, Converter={x:Static local:MpAvObjectToObjectArrayConverter.Instance}}">
                                                    <DropDownButton.Resources>
                                                        <SolidColorBrush x:Key="ButtonForeground">Red</SolidColorBrush>
                                                        <SolidColorBrush x:Key="ButtonBorderBrush">Red</SolidColorBrush>

                                                        <SolidColorBrush x:Key="ButtonBackground">Transparent</SolidColorBrush>
                                                        <SolidColorBrush x:Key="ComboBoxDropDownGlyphForeground">Black</SolidColorBrush>

                                                        <SolidColorBrush x:Key="ButtonBackgroundPointerOver">Red</SolidColorBrush>
                                                        <SolidColorBrush x:Key="ButtonBackgroundPressed">Black</SolidColorBrush>

                                                        <SolidColorBrush x:Key="ButtonForegroundPointerOver">Black</SolidColorBrush>
                                                        <SolidColorBrush x:Key="ButtonForegroundPressed">Black</SolidColorBrush>
                                                    </DropDownButton.Resources>

                                                    <DropDownButton.IsVisible>
                                                        <MultiBinding Converter="{x:Static BoolConverters.And}">
                                                            <Binding Path="!IsReaderDefault" />
                                                            <Binding Path="IsReadersOnlyNoOp" />
                                                        </MultiBinding>
                                                    </DropDownButton.IsVisible>
                                                    <TextBlock Text="{x:Static local:UiStrings.SettingsInteropAppOleFormatNoopButtonLabel}" />
                                                </DropDownButton>

                                            </Grid>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>

                                <DataGridTemplateColumn Width="100"
                                                        CanUserSort="True"
                                                        CanUserResize="False"
                                                        SortMemberPath="IsRejected">

                                    <DataGridTemplateColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal"
                                                        Spacing="5">
                                                <TextBlock Text="{x:Static local:UiStrings.SettingsInteropAppBlockHeaderLabel}" />
                                                <local:MpAvToolTipInfoHintView ToolTipHtml="{x:Static local:UiStrings.SettingsInteropAppRejectHeaderHint}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.HeaderTemplate>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="local:MpAvAppViewModel">
                                            <CheckBox Command="{Binding ToggleIsRejectedCommand}"
                                                      IsChecked="{Binding IsRejected, Mode=OneWay}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>


                            </DataGrid.Columns>
                        </DataGrid>
                    </local:MpAvClipBorder>
                </DockPanel>
            </Expander.Content>
        </Expander>

        <!--  WEBSITES  -->
        <Expander Classes="header">
            <Expander.Header>
                <StackPanel Classes="header expander"
                            Orientation="Horizontal">
                    <Image Classes="expander header icon"
                           Source="{Binding Source={StaticResource WebImage}, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}, ConverterParameter=ThemeInteractiveColor}" />
                    <TextBlock Classes="expander header"
                               Text="{x:Static local:UiStrings.SettingsInteropUrlsLabel}" />
                    <local:MpAvToolTipInfoHintView Classes="expander header warning"
                                                   ToolTipText="{x:Static local:UiStrings.SettingsInteropUrlHintText}" />
                </StackPanel>
            </Expander.Header>
            <DockPanel Classes="dataPanel"
                       VerticalAlignment="Top"
                       x:DataType="local:MpAvUrlCollectionViewModel"
                       DataContext="{x:Static local:MpAvUrlCollectionViewModel.Instance}">
                <Button DockPanel.Dock="Bottom"
                        HorizontalAlignment="Right"
                        Classes="defaultButton iconTextButton dataGridAddButton"
                        Command="{Binding AddUrlCommand}">
                    <DockPanel>
                        <Image DockPanel.Dock="Left"
                               Source="{Binding Source={StaticResource AddImage}, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
                        <Label Content="{x:Static local:UiStrings.SettingsInteropAddUrlButtonLabel}" />
                    </DockPanel>
                </Button>

                <local:MpAvClipBorder Classes="filterDataGridContainer">
                    <DataGrid x:Name="ExcludedUrlDatagrid"
                              CanUserResizeColumns="True"
                              ItemsSource="{Binding FilteredItems}"
                              SelectedItem="{Binding SelectedItem, Mode=TwoWay}">
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Width="30"
                                                    CanUserResize="False">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="local:MpAvUrlViewModel">
                                        <Image Width="15"
                                               Height="15"
                                               Source="{Binding IconId, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="{x:Static local:UiStrings.SettingsInteropUrlNameHeaderLabel}"
                                                    CanUserSort="True"
                                                    SortMemberPath="UrlPath"
                                                    Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="local:MpAvUrlViewModel">
                                        <Grid Classes="marqueeContainer">
                                            <local:MpAvMarqueeTextBox EditOnFocus="False"
                                                                      DropShadowBrush="Transparent"
                                                                      ReadOnlyForeground="Black"
                                                                      Text="{Binding UrlPath}"
                                                                      NavigateUriCommand="{Binding NavigateToUriCommand, Source={x:Static local:MpAvUriNavigator.Instance}}"
                                                                      NavigateUriCommandParameter="{Binding UrlPath}" />
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Header="{x:Static local:UiStrings.SettingsInteropUrlDomainHeaderLabel}"
                                                    CanUserSort="True"
                                                    SortMemberPath="UrlDomainPath"
                                                    Width="Auto">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="local:MpAvUrlViewModel">
                                        <Grid Classes="marqueeContainer">
                                            <local:MpAvMarqueeTextBox EditOnFocus="False"
                                                                      DropShadowBrush="Transparent"
                                                                      ReadOnlyForeground="Black"
                                                                      Text="{Binding UrlDomainPath}" />
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Width="120"
                                                    CanUserResize="False"
                                                    SortMemberPath="IsUrlRejected">

                                <DataGridTemplateColumn.HeaderTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal"
                                                    Spacing="5">
                                            <TextBlock Text="{x:Static local:UiStrings.SettingsInteropUrlBlockUrlHeaderLabel}" />

                                        </StackPanel>
                                    </DataTemplate>
                                </DataGridTemplateColumn.HeaderTemplate>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="local:MpAvUrlViewModel">
                                        <CheckBox Command="{Binding ToggleIsUrlRejectedCommand}"
                                                  IsChecked="{Binding IsUrlRejected, Mode=OneWay}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn Width="120"
                                                    CanUserResize="False"
                                                    SortMemberPath="IsDomainRejected"
                                                    Header="{x:Static local:UiStrings.SettingsInteropUrlBlockDomainHeaderLabel}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate DataType="local:MpAvUrlViewModel">
                                        <CheckBox Command="{Binding ToggleIsDomainRejectedCommand}"
                                                  IsChecked="{Binding IsDomainRejected, Mode=OneWay}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </local:MpAvClipBorder>
            </DockPanel>
        </Expander>
    </StackPanel>
</local:MpAvUserControl>
