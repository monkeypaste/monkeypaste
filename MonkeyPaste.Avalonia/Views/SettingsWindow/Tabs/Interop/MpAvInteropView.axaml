<local:MpAvUserControl xmlns="https://github.com/avaloniaui"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       mc:Ignorable="d"
                       d:DesignWidth="800"
                       d:DesignHeight="750"
                       xmlns:sys="clr-namespace:System;assembly=mscorlib"
                       xmlns:local="using:MonkeyPaste.Avalonia"
                       xmlns:pcl="using:MonkeyPaste"
                       x:TypeArguments="local:MpAvSettingsViewModel"
                       x:DataType="local:MpAvSettingsViewModel"
                       x:CompileBindings="True"
                       DataContext="{x:Static local:MpAvSettingsViewModel.Instance}"
                       x:Class="MonkeyPaste.Avalonia.MpAvInteropView">
    <local:MpAvUserControl.Styles>

        <!--  OLE FORMAT BUTTON  -->

        <Style Selector="DropDownButton.oleFormatButton /template/ PathIcon#DropDownGlyph">
            <Setter Property="IsVisible"
                    Value="False" />
        </Style>
        <Style Selector="DropDownButton.oleFormatButton:pointerover /template/ PathIcon#DropDownGlyph">
            <Setter Property="IsVisible"
                    Value="True" />
        </Style>

        <Style Selector="DropDownButton.oleFormatButton">
            <Style.Resources>
                <!--<CornerRadius x:Key="ControlCornerRadius">0</CornerRadius>-->
                <Thickness x:Key="ButtonBorderThemeThickness">1.5</Thickness>
            </Style.Resources>

            <Setter Property="FontWeight"
                    Value="SemiBold" />
        </Style>

        <!--  FORMAT STRIP CMD ARG  -->

        <Style Selector="local|MpAvOleFormatStripView.read Button">
            <Setter Property="CommandParameter"
                    Value="{Binding $self, ConverterParameter=read, Converter={x:Static local:MpAvObjectToObjectArrayConverter.Instance}}" />
        </Style>
        <Style Selector="local|MpAvOleFormatStripView.write Button">
            <Setter Property="CommandParameter"
                    Value="{Binding $self, ConverterParameter=write, Converter={x:Static local:MpAvObjectToObjectArrayConverter.Instance}}" />
        </Style>

        <!--  PULSE ROW  -->
        <Style Selector="DataGrid#OleFormatsDataGrid DataGridRow:not(:selected)">
            <Setter Property="local:MpAvClassHelperExtension.ClassesToRemove"
                    Value="pulse" />

        </Style>
        <Style Selector="DataGrid#OleFormatsDataGrid.pulse-selection DataGridRow:selected">
            <Setter Property="local:MpAvClassHelperExtension.ClassesToAdd"
                    Value="pulse" />

        </Style>
    </local:MpAvUserControl.Styles>
    <StackPanel x:DataType="local:MpAvAppCollectionViewModel"
                Classes="expandersContainer"
                DataContext="{x:Static local:MpAvAppCollectionViewModel.Instance}">

        <!--  CLIPBOARD FORMATS  -->

        <Expander Classes="header"
                  IsExpanded="{Binding IsCustomClipboardDataGridExpanded, Mode=TwoWay}">
            <Expander.IsVisible>
                <MultiBinding Converter="{x:Static BoolConverters.Or}">
                    <Binding Path="FilterText"
                             Source="{x:Static local:MpAvSettingsViewModel.Instance}"
                             Converter="{x:Static StringConverters.IsNullOrEmpty}" />
                    <Binding Path="CustomClipboardFormatItems"
                             Source="{x:Static local:MpAvAppCollectionViewModel.Instance}"
                             Converter="{x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}" />
                </MultiBinding>
            </Expander.IsVisible>
            <Expander.Header>
                <StackPanel Classes="header expander"
                            Orientation="Horizontal">
                    <Image Classes="expander header icon"
                           Source="{Binding Source={StaticResource ClipboardImage}, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}, ConverterParameter=ThemeInteractiveColor}" />
                    <TextBlock Classes="expander header"
                               Text="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropFormatsHeaderTitle}" />

                    <local:MpAvToolTipHintView IsHtml="True"
                                               ToolTipText="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropAppOleFormatsHeaderHint}" />
                </StackPanel>
            </Expander.Header>

            <Expander.Content>
                <DockPanel Classes="dataPanel">

                    <!--  ADD APP BUTTON  -->

                    <DropDownButton Classes="defaultButton iconTextButton dataGridAddButton"
                                    Command="{Binding ShowAddAppPopupMenuCommand}"
                                    CommandParameter="{Binding $self, ConverterParameter=formats, Converter={x:Static local:MpAvObjectToObjectArrayConverter.Instance}}">
                        <DockPanel>
                            <Image Source="{Binding Source={StaticResource AddGreenImage}, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
                            <Label Content="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropAddAppButtonLabel}" />
                        </DockPanel>
                    </DropDownButton>

                    <!--  FORMATS DATAGRID  -->

                    <local:MpAvClipBorder Classes="filterDataGridContainer">
                        <Grid>
                            <DataGrid x:Name="OleFormatsDataGrid"
                                      local:MpAvDataGridRefreshExtension.IsEnabled="False"
                                      Classes.pulse-selection="{Binding DoSelectedPulse}"
                                      SelectedItem="{Binding SelectedCustomClipboardFormatItem, Mode=TwoWay}"
                                      IsVisible="{Binding CustomClipboardFormatItems, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}"
                                      ItemsSource="{Binding CustomClipboardFormatItems}">
                                <DataGrid.Columns>

                                    <!--  APP ICON  -->

                                    <DataGridTemplateColumn Width="Auto"
                                                            CanUserResize="False">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Image Source="{Binding IconId, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <!--  APP NAME  -->
                                    <DataGridTemplateColumn Header="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropAppNameHeaderLabel}"
                                                            CanUserSort="True"
                                                            SortMemberPath="AppDisplayName"
                                                            Width="150">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid Classes="marqueeContainer">
                                                    <local:MpAvMarqueeTextBox Text="{Binding AppDisplayName}" />
                                                </Grid>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <!--  READER FORMATS  -->

                                    <DataGridTemplateColumn CanUserSort="False"
                                                            Width="0.5*">
                                        <DataGridTemplateColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal"
                                                            Spacing="5">
                                                    <TextBlock Text="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropAppReadHeaderLabel}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.HeaderTemplate>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="local:MpAvAppViewModel">
                                                <Grid Classes="oleFormatContainer"
                                                      x:DataType="local:MpAvAppOleFormatInfoCollectionViewModel"
                                                      Margin="3"
                                                      DataContext="{Binding OleFormatInfos}">

                                                    <!--  READER CUSTOM STRIP  -->

                                                    <local:MpAvOleFormatStripView Classes="read"
                                                                                  Cursor="Hand"
                                                                                  HorizontalAlignment="Center"
                                                                                  DataContext="{Binding Readers}">
                                                        <local:MpAvOleFormatStripView.IsVisible>
                                                            <MultiBinding Converter="{x:Static BoolConverters.And}">
                                                                <Binding Path="!IsVisible"
                                                                         ElementName="NoopOleReaderButton" />
                                                                <Binding Path="!IsVisible"
                                                                         ElementName="DefaultOleReaderButton" />
                                                            </MultiBinding>
                                                        </local:MpAvOleFormatStripView.IsVisible>
                                                    </local:MpAvOleFormatStripView>

                                                    <!--  READER NOOP BUTTON  -->

                                                    <DropDownButton x:Name="NoopOleReaderButton"
                                                                    Classes="oleFormatButton"
                                                                    IsVisible="{Binding IsReadersOnlyNoOp}"
                                                                    HorizontalAlignment="Center"
                                                                    Command="{Binding ShowOleFormatMenuCommand}"
                                                                    CommandParameter="{Binding $self, ConverterParameter=read, Converter={x:Static local:MpAvObjectToObjectArrayConverter.Instance}}">
                                                        <DropDownButton.Resources>
                                                            <SolidColorBrush x:Key="ButtonForeground">Red</SolidColorBrush>
                                                            <SolidColorBrush x:Key="ButtonBorderBrush">Red</SolidColorBrush>

                                                            <SolidColorBrush x:Key="ButtonBackground">Transparent</SolidColorBrush>
                                                            <SolidColorBrush x:Key="ComboBoxDropDownGlyphForeground">Black</SolidColorBrush>

                                                            <SolidColorBrush x:Key="ButtonBackgroundPointerOver">Red</SolidColorBrush>
                                                            <SolidColorBrush x:Key="ButtonBackgroundPressed">Black</SolidColorBrush>

                                                            <SolidColorBrush x:Key="ButtonForegroundPointerOver">Black</SolidColorBrush>
                                                            <SolidColorBrush x:Key="ButtonForegroundPressed">Black</SolidColorBrush>
                                                        </DropDownButton.Resources>
                                                        <ToolTip.Tip>
                                                            <local:MpAvToolTipView Classes="warning"
                                                                                   ToolTipText="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropAppOleNoopReaderTooltip}" />
                                                        </ToolTip.Tip>
                                                        <TextBlock Text="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropAppOleFormatNoopButtonLabel}" />
                                                    </DropDownButton>

                                                    <!--  READER DEFAULT BUTTON  -->

                                                    <DropDownButton x:Name="DefaultOleReaderButton"
                                                                    Classes="oleFormatButton"
                                                                    IsVisible="{Binding IsReaderDefault}"
                                                                    HorizontalAlignment="Center"
                                                                    Command="{Binding ShowOleFormatMenuCommand}"
                                                                    CommandParameter="{Binding $self, ConverterParameter=read, Converter={x:Static local:MpAvObjectToObjectArrayConverter.Instance}}">
                                                        <DropDownButton.Resources>
                                                            <SolidColorBrush x:Key="ButtonForeground">Blue</SolidColorBrush>
                                                            <SolidColorBrush x:Key="ButtonBorderBrush">Blue</SolidColorBrush>

                                                            <SolidColorBrush x:Key="ButtonBackground">Transparent</SolidColorBrush>
                                                            <SolidColorBrush x:Key="ComboBoxDropDownGlyphForeground">White</SolidColorBrush>

                                                            <SolidColorBrush x:Key="ButtonBackgroundPointerOver">Blue</SolidColorBrush>
                                                            <SolidColorBrush x:Key="ButtonBackgroundPressed">White</SolidColorBrush>

                                                            <SolidColorBrush x:Key="ButtonForegroundPointerOver">White</SolidColorBrush>
                                                            <SolidColorBrush x:Key="ButtonForegroundPressed">White</SolidColorBrush>
                                                        </DropDownButton.Resources>
                                                        <ToolTip.Tip>
                                                            <local:MpAvToolTipView ToolTipText="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropAppOleDefaultReaderTooltip}" />
                                                        </ToolTip.Tip>
                                                        <TextBlock Text="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.CommonDefaultLabel}" />
                                                    </DropDownButton>

                                                </Grid>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <!--  WRITER FORMATS  -->

                                    <DataGridTemplateColumn CanUserSort="False"
                                                            Width="0.5*">
                                        <DataGridTemplateColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal"
                                                            Spacing="5">
                                                    <TextBlock Text="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropAppWriteHeaderLabel}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.HeaderTemplate>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="local:MpAvAppViewModel">
                                                <Grid Classes="oleFormatContainer"
                                                      x:DataType="local:MpAvAppOleFormatInfoCollectionViewModel"
                                                      Margin="3"
                                                      DataContext="{Binding OleFormatInfos}">

                                                    <!--  WRITER CUSTOM STRIP  -->

                                                    <local:MpAvOleFormatStripView Classes="write"
                                                                                  Cursor="Hand"
                                                                                  HorizontalAlignment="Center"
                                                                                  DataContext="{Binding Writers}">
                                                        <local:MpAvOleFormatStripView.IsVisible>
                                                            <MultiBinding Converter="{x:Static BoolConverters.And}">
                                                                <Binding Path="!IsVisible"
                                                                         ElementName="NoopOleWriterButton" />
                                                                <Binding Path="!IsVisible"
                                                                         ElementName="DefaultOleWriterButton" />
                                                            </MultiBinding>
                                                        </local:MpAvOleFormatStripView.IsVisible>
                                                    </local:MpAvOleFormatStripView>

                                                    <!--  WRITER NOOP BUTTON  -->

                                                    <DropDownButton x:Name="NoopOleWriterButton"
                                                                    Classes="oleFormatButton"
                                                                    IsVisible="{Binding IsWritersOnlyNoOp}"
                                                                    HorizontalAlignment="Center"
                                                                    Command="{Binding ShowOleFormatMenuCommand}"
                                                                    CommandParameter="{Binding $self, ConverterParameter=write, Converter={x:Static local:MpAvObjectToObjectArrayConverter.Instance}}">
                                                        <DropDownButton.Resources>
                                                            <SolidColorBrush x:Key="ButtonForeground">Red</SolidColorBrush>
                                                            <SolidColorBrush x:Key="ButtonBorderBrush">Red</SolidColorBrush>

                                                            <SolidColorBrush x:Key="ButtonBackground">Transparent</SolidColorBrush>
                                                            <SolidColorBrush x:Key="ComboBoxDropDownGlyphForeground">Black</SolidColorBrush>

                                                            <SolidColorBrush x:Key="ButtonBackgroundPointerOver">Red</SolidColorBrush>
                                                            <SolidColorBrush x:Key="ButtonBackgroundPressed">Black</SolidColorBrush>

                                                            <SolidColorBrush x:Key="ButtonForegroundPointerOver">Black</SolidColorBrush>
                                                            <SolidColorBrush x:Key="ButtonForegroundPressed">Black</SolidColorBrush>
                                                        </DropDownButton.Resources>
                                                        <ToolTip.Tip>
                                                            <local:MpAvToolTipView Classes="warning"
                                                                                   ToolTipText="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropAppOleNoopWriterTooltip}" />
                                                        </ToolTip.Tip>
                                                        <TextBlock Text="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropAppOleFormatNoopButtonLabel}" />
                                                    </DropDownButton>

                                                    <!--  WRITER DEFAULT BUTTON  -->

                                                    <DropDownButton x:Name="DefaultOleWriterButton"
                                                                    Classes="oleFormatButton"
                                                                    IsVisible="{Binding IsWriterDefault}"
                                                                    HorizontalAlignment="Center"
                                                                    Command="{Binding ShowOleFormatMenuCommand}"
                                                                    CommandParameter="{Binding $self, ConverterParameter=write, Converter={x:Static local:MpAvObjectToObjectArrayConverter.Instance}}">
                                                        <DropDownButton.Resources>
                                                            <SolidColorBrush x:Key="ButtonForeground">Blue</SolidColorBrush>
                                                            <SolidColorBrush x:Key="ButtonBorderBrush">Blue</SolidColorBrush>

                                                            <SolidColorBrush x:Key="ButtonBackground">Transparent</SolidColorBrush>
                                                            <SolidColorBrush x:Key="ComboBoxDropDownGlyphForeground">White</SolidColorBrush>

                                                            <SolidColorBrush x:Key="ButtonBackgroundPointerOver">Blue</SolidColorBrush>
                                                            <SolidColorBrush x:Key="ButtonBackgroundPressed">White</SolidColorBrush>

                                                            <SolidColorBrush x:Key="ButtonForegroundPointerOver">White</SolidColorBrush>
                                                            <SolidColorBrush x:Key="ButtonForegroundPressed">White</SolidColorBrush>
                                                        </DropDownButton.Resources>
                                                        <ToolTip.Tip>
                                                            <local:MpAvToolTipView ToolTipText="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropAppOleDefaultWriterTooltip}" />
                                                        </ToolTip.Tip>
                                                        <TextBlock Text="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.CommonDefaultLabel}" />
                                                    </DropDownButton>
                                                </Grid>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>


                                    <!--  DELETE BUTTON  -->
                                    <DataGridTemplateColumn Width="Auto"
                                                            Header="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.CommonDeleteLabel}"
                                                            CanUserSort="False"
                                                            CanUserResize="False">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button x:Name="DeleteAppPasteButton"
                                                        Classes="defaultButton outline outlineOver"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Command="{Binding RemoveAppComponentCommand, Source={x:Static local:MpAvAppCollectionViewModel.Instance}}"
                                                        CommandParameter="{Binding ., ConverterParameter=formats, Converter={x:Static local:MpAvObjectToObjectArrayConverter.Instance}}">
                                                    <Image Source="{Binding Source={StaticResource DeleteImage}, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
                                                </Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                            <TextBlock IsVisible="{Binding CustomClipboardFormatItems, ConverterParameter=flip, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}"
                                       Classes="emptyTextBlock"
                                       Text="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.CommonEmptyListText}" />
                        </Grid>
                    </local:MpAvClipBorder>
                </DockPanel>

            </Expander.Content>
        </Expander>

        <!--  CLIPBOARD SHORTCUTS  -->
        <Expander Classes="header">
            <Expander.IsVisible>
                <MultiBinding Converter="{x:Static BoolConverters.Or}">
                    <Binding Path="FilterText"
                             Source="{x:Static local:MpAvSettingsViewModel.Instance}"
                             Converter="{x:Static StringConverters.IsNullOrEmpty}" />
                    <Binding Path="CustomClipboardShortcutItems"
                             Source="{x:Static local:MpAvAppCollectionViewModel.Instance}"
                             Converter="{x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}" />
                </MultiBinding>
            </Expander.IsVisible>
            <Expander.Header>
                <StackPanel Classes="header expander">
                    <Image Classes="expander header icon"
                           Source="{Binding Source={StaticResource KeyboardImage}, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}, ConverterParameter=ThemeInteractiveColor}" />
                    <TextBlock Classes="expander header"
                               Text="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropShortcutsHeaderTitle}" />
                    <local:MpAvToolTipHintView Classes="expander header warning"
                                               IsHtml="True"
                                               ToolTipText="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropAppPasteShortcutHeaderHint}" />
                </StackPanel>
            </Expander.Header>
            <Expander.Content>
                <DockPanel Classes="dataPanel">

                    <!--  ADD APP BUTTON  -->

                    <DropDownButton Classes="defaultButton iconTextButton dataGridAddButton"
                                    Command="{Binding ShowAddAppPopupMenuCommand}"
                                    CommandParameter="{Binding $self, ConverterParameter=shortcuts, Converter={x:Static local:MpAvObjectToObjectArrayConverter.Instance}}">
                        <DockPanel>
                            <Image Source="{Binding Source={StaticResource AddGreenImage}, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
                            <Label Content="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropAddAppButtonLabel}" />
                        </DockPanel>
                    </DropDownButton>

                    <!--  SHORTCUTS DATAGRID  -->

                    <local:MpAvClipBorder Classes="filterDataGridContainer">
                        <Grid>
                            <DataGrid x:Name="ShortcutDatagrid"
                                      local:MpAvDataGridRefreshExtension.IsEnabled="True"
                                      IsVisible="{Binding CustomClipboardShortcutItems, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}"
                                      ItemsSource="{Binding CustomClipboardShortcutItems}">
                                <DataGrid.Columns>

                                    <!--  APP ICON  -->

                                    <DataGridTemplateColumn Width="Auto"
                                                            CanUserResize="False">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Image Source="{Binding IconId, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <!--  APP NAME  -->
                                    <DataGridTemplateColumn Header="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropAppNameHeaderLabel}"
                                                            CanUserSort="True"
                                                            SortMemberPath="AppDisplayName"
                                                            Width="0.3*">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid Classes="marqueeContainer">
                                                    <local:MpAvMarqueeTextBox Text="{Binding AppDisplayName}" />
                                                </Grid>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>


                                    <!--  COPY GESTURE VIEW  -->
                                    <DataGridTemplateColumn Width="0.25*">
                                        <DataGridTemplateColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal"
                                                            Spacing="5">
                                                    <TextBlock Text="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropAppCopyShortcutHeaderLabel}" />
                                                    <local:MpAvToolTipHintView IsHtml="True"
                                                                               ToolTipText="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropAppCopyShortcutHeaderHint}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.HeaderTemplate>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid DataContext="{Binding CopyShortcutViewModel}"
                                                      x:DataType="local:MpAvAppClipboardShortcutViewModel">
                                                    <local:MpAvShortcutView RecordCommand="{Binding RecordShortcutCommand}" />
                                                </Grid>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <!--  PASTE GESTURE VIEW  -->
                                    <DataGridTemplateColumn Width="0.25*">
                                        <DataGridTemplateColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal"
                                                            Spacing="5">
                                                    <TextBlock Text="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropAppPasteShortcutHeaderLabel}" />
                                                    <local:MpAvToolTipHintView IsHtml="True"
                                                                               ToolTipText="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropAppPasteShortcutHeaderHint}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.HeaderTemplate>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Grid DataContext="{Binding PasteShortcutViewModel}"
                                                      x:DataType="local:MpAvAppClipboardShortcutViewModel">

                                                    <local:MpAvShortcutView RecordCommand="{Binding RecordShortcutCommand}" />
                                                </Grid>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>

                                    <!--  DELETE BUTTON  -->
                                    <DataGridTemplateColumn Width="Auto"
                                                            Header="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.CommonDeleteLabel}"
                                                            CanUserSort="False"
                                                            CanUserResize="False">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button x:Name="DeleteAppPasteButton"
                                                        Classes="defaultButton outline outlineOver"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Command="{Binding RemoveAppComponentCommand, Source={x:Static local:MpAvAppCollectionViewModel.Instance}}"
                                                        CommandParameter="{Binding ., ConverterParameter=shortcuts, Converter={x:Static local:MpAvObjectToObjectArrayConverter.Instance}}">
                                                    <Image Source="{Binding Source={StaticResource DeleteImage}, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
                                                </Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                            <TextBlock IsVisible="{Binding CustomClipboardShortcutItems, ConverterParameter=flip, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}"
                                       Classes="emptyTextBlock"
                                       Text="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.CommonEmptyListText}" />
                        </Grid>
                    </local:MpAvClipBorder>
                </DockPanel>

            </Expander.Content>
        </Expander>

        <!--  BLOCKED SOURCES  -->
        <Expander Classes="header">

            <Expander.IsVisible>
                <MultiBinding Converter="{x:Static BoolConverters.Or}">
                    <Binding Path="IsVisible"
                             ElementName="BlockedAppExpander" />
                    <Binding Path="IsVisible"
                             ElementName="BlockedUrlExpander" />
                </MultiBinding>
            </Expander.IsVisible>
            <Expander.Header>
                <StackPanel Classes="header expander"
                            Orientation="Horizontal">
                    <Image Classes="expander header icon"
                           Source="{Binding Source={StaticResource ShieldImage}, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}, ConverterParameter=ThemeInteractiveColor}" />
                    <TextBlock Classes="expander header"
                               Text="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropRejectedHeaderTitle}" />
                    <local:MpAvToolTipHintView Classes="expander header warning"
                                               IsHtml="True"
                                               ToolTipText="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropAppRejectHeaderHint}" />
                </StackPanel>
            </Expander.Header>
            <Expander.Content>

                <StackPanel Spacing="10"
                            Orientation="Vertical">
                    <!--  BLOCKED APPS  -->
                    <Expander x:Name="BlockedAppExpander"
                              Classes="header">
                        <Expander.IsVisible>
                            <MultiBinding Converter="{x:Static BoolConverters.Or}">
                                <Binding Path="FilterText"
                                         Source="{x:Static local:MpAvSettingsViewModel.Instance}"
                                         Converter="{x:Static StringConverters.IsNullOrEmpty}" />
                                <Binding Path="RejectedItems"
                                         Source="{x:Static local:MpAvAppCollectionViewModel.Instance}"
                                         Converter="{x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}" />
                            </MultiBinding>
                        </Expander.IsVisible>
                        <Expander.Header>
                            <StackPanel Classes="header expander"
                                        Orientation="Horizontal">
                                <Image Classes="expander header icon"
                                       Source="{Binding Source={StaticResource AppFrameImage}, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}, ConverterParameter=ThemeInteractiveColor}" />
                                <TextBlock Classes="expander header"
                                           Text="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropRejectedAppsHeaderLabel}" />
                            </StackPanel>
                        </Expander.Header>
                        <Expander.Content>

                            <DockPanel Classes="dataPanel">

                                <!--  ADD APP BUTTON  -->

                                <DropDownButton Classes="defaultButton iconTextButton dataGridAddButton"
                                                Command="{Binding ShowAddAppPopupMenuCommand}"
                                                CommandParameter="{Binding $self, ConverterParameter=rejects, Converter={x:Static local:MpAvObjectToObjectArrayConverter.Instance}}">
                                    <DockPanel>
                                        <Image Source="{Binding Source={StaticResource AddGreenImage}, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
                                        <Label Content="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropAddAppButtonLabel}" />
                                    </DockPanel>
                                </DropDownButton>

                                <!--  REJECTED APPS DATAGRID  -->

                                <local:MpAvClipBorder Classes="filterDataGridContainer">
                                    <Grid>
                                        <DataGrid local:MpAvDataGridRefreshExtension.IsEnabled="True"
                                                  IsVisible="{Binding RejectedItems, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}"
                                                  ItemsSource="{Binding RejectedItems}">
                                            <DataGrid.Columns>

                                                <!--  APP ICON  -->

                                                <DataGridTemplateColumn Width="Auto"
                                                                        CanUserResize="False">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <Image Source="{Binding IconId, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>

                                                <!--  APP NAME  -->
                                                <DataGridTemplateColumn Header="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropAppNameHeaderLabel}"
                                                                        CanUserSort="True"
                                                                        SortMemberPath="AppDisplayName"
                                                                        Width="*">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <Grid Classes="marqueeContainer">
                                                                <local:MpAvMarqueeTextBox Text="{Binding AppDisplayName}" />
                                                            </Grid>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>

                                                <!--  DELETE BUTTON  -->
                                                <DataGridTemplateColumn Width="Auto"
                                                                        Header="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.CommonDeleteLabel}"
                                                                        CanUserSort="False"
                                                                        CanUserResize="False">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <Button x:Name="DeleteAppPasteButton"
                                                                    Classes="defaultButton outline outlineOver"
                                                                    HorizontalAlignment="Center"
                                                                    VerticalAlignment="Center"
                                                                    Command="{Binding RemoveAppComponentCommand, Source={x:Static local:MpAvAppCollectionViewModel.Instance}}"
                                                                    CommandParameter="{Binding ., ConverterParameter=rejects, Converter={x:Static local:MpAvObjectToObjectArrayConverter.Instance}}">
                                                                <Image Source="{Binding Source={StaticResource DeleteImage}, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
                                                            </Button>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                            </DataGrid.Columns>
                                        </DataGrid>
                                        <TextBlock IsVisible="{Binding RejectedItems, ConverterParameter=flip, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}"
                                                   Classes="emptyTextBlock"
                                                   Text="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.CommonEmptyListText}" />
                                    </Grid>
                                </local:MpAvClipBorder>
                            </DockPanel>

                        </Expander.Content>
                    </Expander>

                    <!--  BLOCKED WEBSITES  -->
                    <Expander x:Name="BlockedUrlExpander"
                              Classes="header"
                              x:DataType="local:MpAvUrlCollectionViewModel"
                              DataContext="{x:Static local:MpAvUrlCollectionViewModel.Instance}">
                        <Expander.IsVisible>
                            <MultiBinding Converter="{x:Static BoolConverters.Or}">
                                <Binding Path="FilterText"
                                         Source="{x:Static local:MpAvSettingsViewModel.Instance}"
                                         Converter="{x:Static StringConverters.IsNullOrEmpty}" />
                                <Binding Path="RejectedItems"
                                         Source="{x:Static local:MpAvUrlCollectionViewModel.Instance}"
                                         Converter="{x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}" />
                            </MultiBinding>
                        </Expander.IsVisible>
                        <Expander.Header>
                            <StackPanel Classes="header expander"
                                        Orientation="Horizontal">
                                <Image Classes="expander header icon"
                                       Source="{Binding Source={StaticResource GlobeImage}, Converter={x:Static local:MpAvStringHexToBitmapTintConverter.Instance}, ConverterParameter=ThemeInteractiveColor}" />
                                <TextBlock Classes="expander header"
                                           Text="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropRejectedUrlsHeaderLabel}" />
                                <local:MpAvToolTipHintView Classes="expander header warning"
                                                           ToolTipText="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropUrlHintText}" />
                            </StackPanel>
                        </Expander.Header>
                        <Expander.Content>
                            <DockPanel Classes="dataPanel"
                                       VerticalAlignment="Top"
                                       x:DataType="local:MpAvUrlCollectionViewModel"
                                       DataContext="{x:Static local:MpAvUrlCollectionViewModel.Instance}">
                                <Button DockPanel.Dock="Bottom"
                                        HorizontalAlignment="Right"
                                        Classes="defaultButton iconTextButton dataGridAddButton"
                                        Command="{Binding AddUrlCommand}">
                                    <DockPanel>
                                        <Image DockPanel.Dock="Left"
                                               Source="{Binding Source={StaticResource AddGreenImage}, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
                                        <Label Content="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropAddUrlButtonLabel}" />
                                    </DockPanel>
                                </Button>

                                <local:MpAvClipBorder Classes="filterDataGridContainer">
                                    <Grid>
                                        <DataGrid x:Name="ExcludedUrlDatagrid"
                                                  CanUserResizeColumns="True"
                                                  IsVisible="{Binding RejectedItems, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}"
                                                  ItemsSource="{Binding RejectedItems}"
                                                  SelectedItem="{Binding SelectedItem, Mode=TwoWay}">
                                            <DataGrid.Columns>
                                                <DataGridTemplateColumn Width="30"
                                                                        CanUserResize="False">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate DataType="local:MpAvUrlViewModel">
                                                            <Image Width="15"
                                                                   Height="15"
                                                                   Source="{Binding IconId, Converter={x:Static local:MpAvIconSourceObjToBitmapConverter.Instance}}" />
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn Header="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropUrlNameHeaderLabel}"
                                                                        CanUserSort="True"
                                                                        SortMemberPath="UrlPath"
                                                                        Width="*">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate DataType="local:MpAvUrlViewModel">
                                                            <Grid Classes="marqueeContainer">
                                                                <local:MpAvMarqueeTextBox EditOnFocus="False"
                                                                                          DropShadowBrush="Transparent"
                                                                                          ReadOnlyForeground="Black"
                                                                                          Text="{Binding UrlPath}"
                                                                                          NavigateUriCommand="{Binding NavigateToUriCommand, Source={x:Static local:MpAvUriNavigator.Instance}}"
                                                                                          NavigateUriCommandParameter="{Binding UrlPath}" />
                                                            </Grid>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn Header="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropUrlDomainHeaderLabel}"
                                                                        CanUserSort="True"
                                                                        SortMemberPath="UrlDomainPath"
                                                                        Width="Auto">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate DataType="local:MpAvUrlViewModel">
                                                            <Grid Classes="marqueeContainer">
                                                                <local:MpAvMarqueeTextBox EditOnFocus="False"
                                                                                          DropShadowBrush="Transparent"
                                                                                          ReadOnlyForeground="Black"
                                                                                          Text="{Binding UrlDomainPath}" />
                                                            </Grid>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn Width="120"
                                                                        CanUserResize="False"
                                                                        SortMemberPath="IsUrlRejected">

                                                    <DataGridTemplateColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <StackPanel Orientation="Horizontal"
                                                                        Spacing="5">
                                                                <TextBlock Text="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropUrlBlockUrlHeaderLabel}" />

                                                            </StackPanel>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.HeaderTemplate>
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate DataType="local:MpAvUrlViewModel">
                                                            <CheckBox Command="{Binding ToggleIsUrlRejectedCommand}"
                                                                      IsChecked="{Binding IsUrlRejected, Mode=OneWay}" />
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                                <DataGridTemplateColumn Width="120"
                                                                        CanUserResize="False"
                                                                        SortMemberPath="IsDomainRejected"
                                                                        Header="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.SettingsInteropUrlBlockDomainHeaderLabel}">
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate DataType="local:MpAvUrlViewModel">
                                                            <CheckBox Command="{Binding ToggleIsDomainRejectedCommand}"
                                                                      IsChecked="{Binding IsDomainRejected, Mode=OneWay}" />
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                            </DataGrid.Columns>
                                        </DataGrid>

                                        <TextBlock IsVisible="{Binding FilteredItems, ConverterParameter=flip, Converter={x:Static local:MpAvIsNotNullZeroOrEmptyToBoolConverter.Instance}}"
                                                   Classes="emptyTextBlock"
                                                   Text="{Binding Source={x:Static local:R.U}, Path=CurrentUiStrings.CommonEmptyListText}" />
                                    </Grid>
                                </local:MpAvClipBorder>
                            </DockPanel>

                        </Expander.Content>
                    </Expander>
                </StackPanel>

            </Expander.Content>
        </Expander>
    </StackPanel>
</local:MpAvUserControl>
