<Application xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:s="clr-namespace:System;assembly=mscorlib"
             xmlns:local="using:MonkeyPaste.Avalonia"
             x:DataType="local:MpAvSystemTrayViewModel"
             x:CompileBindings="True"
             x:Class="MonkeyPaste.Avalonia.App">
  <Application.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceInclude Source="/Assets/Dictionaries/MpAvImageResourceDictionary.axaml" />
        <ResourceInclude Source="/Assets/Dictionaries/MpAvIconResourceDictionary.axaml" />
        <ResourceInclude Source="/Assets/Dictionaries/MpAvSvgResourceDictionary.axaml" />
        <ResourceInclude Source="/Assets/Dictionaries/MpAvConverterResourceDictionary.axaml" />
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>

    <SolidColorBrush x:Key="SystemControlHighlightListAccentLowBrush">
      Transparent
    </SolidColorBrush>
    <SolidColorBrush x:Key="SystemControlHighlightListAccentMediumBrush">
      Transparent
    </SolidColorBrush>
    <SolidColorBrush x:Key="SystemControlHighlightListAccentHighBrush">
      Transparent
    </SolidColorBrush>
    <SolidColorBrush x:Key="SystemControlHighlightListLowBrush">
      Transparent
    </SolidColorBrush>
    <SolidColorBrush x:Key="SystemControlHighlightListMediumBrush">
      Transparent
    </SolidColorBrush>
    <SolidColorBrush x:Key="SystemControlHighlightListHighBrush">
      Transparent
    </SolidColorBrush>
    <Thickness x:Key="ListBoxItemPadding">
      5,5,5,5
    </Thickness>
    <SolidColorBrush x:Key="DefaultBorderBrush_unselected">
      Transparent
    </SolidColorBrush>
    <SolidColorBrush x:Key="DefaultBorderBrush_selected">
      Red
    </SolidColorBrush>
    <SolidColorBrush x:Key="IsHoveringBorderBrush_unselected">
      Yellow
    </SolidColorBrush>
    <SolidColorBrush x:Key="IsHoveringBorderBrush_selected">
      SpringGreen
    </SolidColorBrush>
    <SolidColorBrush x:Key="CanResizeBorderBrush">
      DeepPink
    </SolidColorBrush>
    <SolidColorBrush x:Key="IsResizingBorderBrush">
      LightPink
    </SolidColorBrush>
  </Application.Resources>
    <Application.Styles>
        <FluentTheme Mode="Light" />
        <!--<StyleInclude Source="avares://Avalonia.Themes.Default/DefaultTheme.xaml" />
        <StyleInclude Source="avares://Avalonia.Themes.Default/Accents/BaseLight.xaml" />-->

        <StyleInclude Source="avares://MonkeyPaste.Avalonia/Styles/ProgressRing/ProgressRing.xaml" />
        <Style Selector="TextBlock">
            <Setter Property="FontFamily"
                    Value="Helvetica" />
        </Style>

        <Style Selector=":is(Button)">
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
            <Setter Property="VerticalAlignment"
                    Value="Center" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="CornerRadius"
                    Value="3" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Background"
                    Value="Transparent" />
        </Style>
        <Style Selector=":is(Button):pointerover">
            <Setter Property="Cursor"
                    Value="Hand" />
        </Style>
        <Style Selector=":is(Button):pointerover PathIcon">
            <Setter Property="Foreground"
                    Value="Yellow" />
        </Style>
        <Style Selector="ToggleButton:checked /template/ ContentPresenter">
            <Setter Property="Background"
                    Value="Lime" />
        </Style>
        <Style Selector=":is(Button):pressed  /template/ ContentPresenter">
            <Setter Property="Background"
                    Value="Transparent" />
        </Style>
        <!--<Style Selector="ToggleButton:checked PathIcon">
            <Setter Property="Foreground"
                    Value="Lime" />
        </Style>-->
        <Style Selector="PathIcon">
            <Setter Property="HorizontalAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalAlignment"
                    Value="Stretch" />
            <Setter Property="Foreground"
                    Value="Wheat" />
        </Style>
        <Style Selector="PathIcon /template/ Path">
            <Setter Property="Margin"
                    Value="0" />
        </Style>

      <!--  ListBoxItem  -->

        <Style Selector="ListBoxItem">
            <Setter Property="HorizontalAlignment"
                    Value="Left" />
            <Setter Property="VerticalAlignment"
                    Value="Top" />
            <Setter Property="FocusAdorner"
                    Value="{x:Null}" />
        </Style>
        <Style Selector="ListBoxItem:pointerover /template/ ContentPresenter">
            <Setter Property="Background"
                    Value="Transparent" />
        </Style>

        <Style Selector="ListBoxItem:selected /template/ ContentPresenter">
            <Setter Property="Background"
                    Value="Transparent" />
        </Style>

        <Style Selector="ListBoxItem:selected:focus /template/ ContentPresenter">
            <Setter Property="Background"
                    Value="Transparent" />
        </Style>

        <Style Selector="ListBoxItem:selected:pointerover /template/ ContentPresenter">
            <Setter Property="Background"
                    Value="Transparent" />
        </Style>

        <Style Selector="ListBoxItem:selected:focus:pointerover /template/ ContentPresenter">
            <Setter Property="Background"
                    Value="Transparent" />
        </Style>
      
      <!-- ListBoxItem Border .TileBorder -->
      <Style Selector=":is(local|MpAvClipBorder).TileBorder"
                               x:DataType="local:MpAvClipTileViewModel">
        <Setter Property="Transitions">
          <Transitions>
            <BrushTransition Property="BorderBrush"
                             Duration="0:0:0.2" />
          </Transitions>
        </Setter>
        <Setter Property="BorderBrush"
                Value="{StaticResource DefaultBorderBrush_unselected}" />
      </Style>

      <!--  Hover Unselected  -->

      <Style Selector="ListBoxItem:pointerover:not(:selected) :is(Border).TileBorder"
             x:DataType="local:MpAvClipTileViewModel">
        <Setter Property="BorderBrush"
                Value="{StaticResource IsHoveringBorderBrush_unselected}" />
      </Style>


      <!--  Default Selected  -->

      <Style Selector="ListBoxItem:selected :is(Border).TileBorder"
             x:DataType="local:MpAvClipTileViewModel">
        <Setter Property="BorderBrush"
                Value="{StaticResource DefaultBorderBrush_selected}" />
      </Style>


      <!--  Hover Selected  -->

      <Style Selector="ListBoxItem:selected:pointerover :is(Border).TileBorder:not(.CanResize):not(.IsResizing)"
             x:DataType="local:MpAvClipTileViewModel">
        <Setter Property="BorderBrush"
                Value="{StaticResource IsHoveringBorderBrush_selected}" />
      </Style>

      <!--  Default Resize  -->

      <Style Selector="ListBoxItem :is(Border).TileBorder.IsResizing"
             x:DataType="local:MpAvClipTileViewModel">
        <Setter Property="BorderBrush"
                Value="{StaticResource IsResizingBorderBrush}" />
      </Style>


      <!--  Hover Resizing  -->

      <Style Selector="ListBoxItem:selected:pointerover :is(Border).TileBorder.CanResize:not(.IsResizing)"
             x:DataType="local:MpAvClipTileViewModel">
        <Setter Property="BorderBrush"
                Value="{StaticResource CanResizeBorderBrush}" />
      </Style>
      
      <!-- END ListBoxItem -->
      
        <!--  TreeViewItem  -->
        <Style Selector="TreeViewItem:selected /template/ Border#PART_LayoutRoot">
            <Setter Property="Background"
                    Value="Transparent" />
        </Style>
        <Style Selector="TreeViewItem /template/ Border#PART_LayoutRoot:pointerover">
            <Setter Property="Background"
                    Value="Transparent" />
        </Style>

        <!-- END TreeViewItem -->

    </Application.Styles>
  
  <!-- NOTE Below is systray icon menu which has avalonia bug (may get fixed) that makes extra icons for cef process -->
    
    <!--<NativeMenu.Menu>
        <NativeMenu>
            <NativeMenuItem Header="About Monkey Paste" />
        </NativeMenu>
    </NativeMenu.Menu>-->

    <!--<TrayIcon.Icons>
        <TrayIcons Capacity="1">
            <TrayIcon Icon="/Assets/Icons/monkey.ico"
                      Command="{Binding ShowWindowCommand, Source={x:Static local:MpAvMainWindowViewModel.Instance}}"
                      ToolTipText="Monkey Paste">
                <TrayIcon.Menu>
                    <NativeMenu>
                        <NativeMenuItem Header="Show"
                                        Command="{Binding ShowWindowCommand, Source={x:Static local:MpAvMainWindowViewModel.Instance}}" />

                        <NativeMenuItem Header="Settings">
                            <NativeMenu>
                                <NativeMenuItem Header="Option 1"
                                                ToggleType="Radio"
                                                IsChecked="True" />
                                <NativeMenuItem Header="Option 2"
                                                ToggleType="Radio"
                                                IsChecked="True"/>
                                <NativeMenuItemSeparator />
                                <NativeMenuItem Header="Option 3"
                                                ToggleType="CheckBox"
                                                IsChecked="True" />
                                <NativeMenuItem Icon="/Assets/Icons/cog.ico"
                                                Header="Restore Defaults" />
                            </NativeMenu>
                        </NativeMenuItem>

                        <NativeMenuItem Header="Exit"
                                        Command="{Binding ExitApplicationCommand, Source={x:Static local:MpAvSystemTrayViewModel.Instance}}" />
                    </NativeMenu>
                </TrayIcon.Menu>
            </TrayIcon>
        </TrayIcons>
    </TrayIcon.Icons>-->
</Application>
