<Window x:Class="MpWpfApp.MpMainWindow"
        x:Name="MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:ii="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2f008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        xmlns:spinners="clr-namespace:xamlSpinnersWPF"
        xmlns:diagnostics="clr-namespace:System.Diagnostics;assembly=WindowsBase"
        mc:Ignorable="d"
        xmlns:local="clr-namespace:MpWpfApp"
        Title="MpMainWindow"
        WindowStyle="None" 
        Top="10000"
        ShowInTaskbar="false"
        ResizeMode="NoResize"
        Background="Transparent"
        Height="350"
        Width="1680"
        DataContext="{StaticResource MainWindowViewModel}">
    <Window.Resources>
        <!-- Animated Listbox-->
        <SolidColorBrush x:Key="ListBorder"
                         Color="#828790" />
        <Style x:Key="AnimatedListBoxStyle"
               TargetType="{x:Type ListBox}">
            <Setter Property="Background"
                    Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="BorderBrush"
                    Value="{StaticResource ListBorder}" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
                    Value="true" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd"
                                SnapsToDevicePixels="true"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="1">
                            <local:AnimatedScrollViewer Padding="{TemplateBinding Padding}"
                                                            Focusable="false"
                                                            Style="{DynamicResource TestingAnimateScrollViewer}"
                                                            CanContentScroll="False">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </local:AnimatedScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsGrouping"
                                     Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll"
                                        Value="false" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TestingAnimateScrollViewer"
               TargetType="{x:Type local:AnimatedScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:AnimatedScrollViewer}">
                        <Grid x:Name="Grid"
                              Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Rectangle Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                                       x:Name="Corner"
                                       Grid.Column="1"
                                       Grid.Row="1" />
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}"
                                                    x:Name="PART_ScrollContentPresenter"
                                                    Grid.Column="0"
                                                    Grid.Row="0"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                    CanHorizontallyScroll="False"
                                                    CanVerticallyScroll="False"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
                            <ScrollBar Cursor="Arrow"
                                       x:Name="PART_AniVerticalScrollBar"
                                       Style="{DynamicResource localBar}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Grid.Column="1"
                                       Grid.Row="0"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Minimum="0"
                                       Value="{Binding Path=TargetVerticalOffset, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                       AutomationProperties.AutomationId="VerticalScrollBar" />
                            <ScrollBar Cursor="Arrow"
                                       x:Name="PART_VerticalScrollBar"
                                       Visibility="Collapsed"
                                       Grid.Column="1"
                                       Grid.Row="0"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Minimum="0"
                                       Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            <ScrollBar Cursor="Arrow"
                                       x:Name="PART_AniHorizontalScrollBar"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                       Grid.Row="1"
                                       Orientation="Horizontal"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       Minimum="0"
                                       Value="{Binding Path=TargetHorizontalOffset, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                       AutomationProperties.AutomationId="HorizontalScrollBar" />
                            <ScrollBar Cursor="Arrow"
                                       x:Name="PART_HorizontalScrollBar"
                                       Visibility="Collapsed"
                                       Grid.Column="0"
                                       Grid.Row="1"
                                       Orientation="Horizontal"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       Minimum="0"
                                       Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="VerticalScrollBarBackground"
                             EndPoint="1,0"
                             StartPoint="0,0">
            <GradientStop Color="#E1E1E1"
                          Offset="0" />
            <GradientStop Color="#EDEDED"
                          Offset="0.20" />
            <GradientStop Color="#EDEDED"
                          Offset="0.80" />
            <GradientStop Color="#E3E3E3"
                          Offset="1" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ScrollBarDisabledBackground"
                         Color="#F4F4F4" />
        <Style x:Key="ScrollBarButton"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="IsTabStop"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome"
                                                               SnapsToDevicePixels="true"
                                                               RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                               RenderPressed="{TemplateBinding IsPressed}"
                                                               Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="VerticalScrollBarPageButton"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="IsTabStop"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}"
                                   Width="{TemplateBinding Width}"
                                   Height="{TemplateBinding Height}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumb"
               TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="IsTabStop"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome"
                                                               SnapsToDevicePixels="true"
                                                               RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                               RenderPressed="{TemplateBinding IsDragging}"
                                                               Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="HorizontalScrollBarBackground"
                             EndPoint="0,1"
                             StartPoint="0,0">
            <GradientStop Color="#E1E1E1"
                          Offset="0" />
            <GradientStop Color="#EDEDED"
                          Offset="0.20" />
            <GradientStop Color="#EDEDED"
                          Offset="0.80" />
            <GradientStop Color="#E3E3E3"
                          Offset="1" />
        </LinearGradientBrush>
        <Style x:Key="HorizontalScrollBarPageButton"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="IsTabStop"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}"
                                   Width="{TemplateBinding Width}"
                                   Height="{TemplateBinding Height}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="localBar"
               TargetType="{x:Type ScrollBar}">
            <Setter Property="Background"
                    Value="{StaticResource VerticalScrollBarBackground}" />
            <Setter Property="Stylus.IsPressAndHoldEnabled"
                    Value="false" />
            <Setter Property="Stylus.IsFlicksEnabled"
                    Value="false" />
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Width"
                    Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            <Setter Property="MinWidth"
                    Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg"
                              SnapsToDevicePixels="true"
                              Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                                <RowDefinition Height="0.00001*" />
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            </Grid.RowDefinitions>
                            <RepeatButton Style="{StaticResource ScrollBarButton}"
                                          IsEnabled="{TemplateBinding IsMouseOver}"
                                          Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow"
                                          Command="{x:Static ScrollBar.LineUpCommand}" />
                            <Track x:Name="PART_Track"
                                   IsEnabled="{TemplateBinding IsMouseOver}"
                                   Grid.Row="1"
                                   IsDirectionReversed="true">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}"
                                                  Command="{x:Static ScrollBar.PageUpCommand}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}"
                                                  Command="{x:Static ScrollBar.PageDownCommand}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb}"
                                           Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper" />
                                </Track.Thumb>
                            </Track>
                            <RepeatButton Style="{StaticResource ScrollBarButton}"
                                          IsEnabled="{TemplateBinding IsMouseOver}"
                                          Grid.Row="2"
                                          Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow"
                                          Command="{x:Static ScrollBar.LineDownCommand}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Background"
                                        TargetName="Bg"
                                        Value="{StaticResource ScrollBarDisabledBackground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation"
                         Value="Horizontal">
                    <Setter Property="Width"
                            Value="Auto" />
                    <Setter Property="MinWidth"
                            Value="0" />
                    <Setter Property="Height"
                            Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                    <Setter Property="MinHeight"
                            Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                    <Setter Property="Background"
                            Value="{StaticResource HorizontalScrollBarBackground}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg"
                                      SnapsToDevicePixels="true"
                                      Background="{TemplateBinding Background}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                        <ColumnDefinition Width="0.00001*" />
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    </Grid.ColumnDefinitions>
                                    <RepeatButton Style="{StaticResource ScrollBarButton}"
                                                  IsEnabled="{TemplateBinding IsMouseOver}"
                                                  Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow"
                                                  Command="{x:Static ScrollBar.LineLeftCommand}" />
                                    <Track x:Name="PART_Track"
                                           IsEnabled="{TemplateBinding IsMouseOver}"
                                           Grid.Column="1">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"
                                                          Command="{x:Static ScrollBar.PageLeftCommand}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"
                                                          Command="{x:Static ScrollBar.PageRightCommand}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumb}"
                                                   Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper" />
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton Style="{StaticResource ScrollBarButton}"
                                                  IsEnabled="{TemplateBinding IsMouseOver}"
                                                  Grid.Column="2"
                                                  Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow"
                                                  Command="{x:Static ScrollBar.LineRightCommand}" />
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled"
                                             Value="false">
                                        <Setter Property="Background"
                                                TargetName="Bg"
                                                Value="{StaticResource ScrollBarDisabledBackground}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="ScrollViewerControlTemplate1"
                         TargetType="{x:Type ScrollViewer}">
            <Grid x:Name="Grid"
                  Background="{TemplateBinding Background}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Rectangle Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                           x:Name="Corner"
                           Grid.Column="1"
                           Grid.Row="1" />
                <ScrollContentPresenter Margin="{TemplateBinding Padding}"
                                        x:Name="PART_ScrollContentPresenter"
                                        Grid.Column="0"
                                        Grid.Row="0"
                                        CanContentScroll="{TemplateBinding CanContentScroll}"
                                        CanHorizontallyScroll="False"
                                        CanVerticallyScroll="False"
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}" />
                <ScrollBar Cursor="Arrow"
                           x:Name="PART_VerticalScrollBar"
                           Visibility="Collapsed"
                           Grid.Column="1"
                           Grid.Row="0"
                           ViewportSize="{TemplateBinding ViewportHeight}"
                           Maximum="{TemplateBinding ScrollableHeight}"
                           Minimum="0"
                           Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                           AutomationProperties.AutomationId="VerticalScrollBar" />
                <ScrollBar Cursor="Arrow"
                           x:Name="PART_HorizontalScrollBar"
                           Visibility="Collapsed"
                           Grid.Column="0"
                           Grid.Row="1"
                           Orientation="Horizontal"
                           ViewportSize="{TemplateBinding ViewportWidth}"
                           Maximum="{TemplateBinding ScrollableWidth}"
                           Minimum="0"
                           Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                           AutomationProperties.AutomationId="HorizontalScrollBar" />
                <ScrollBar Cursor="Arrow"
                           x:Name="PART_AniVerticalScrollBar"
                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                           ViewportSize="{TemplateBinding ViewportHeight}"
                           Maximum="{TemplateBinding ScrollableHeight}"
                           Minimum="0"
                           Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                           AutomationProperties.AutomationId="VerticalScrollBar"
                           Grid.Column="1" />
                <ScrollBar Cursor="Arrow"
                           x:Name="PART_AniHorizontalScrollBar"
                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                           Orientation="Horizontal"
                           ViewportSize="{TemplateBinding ViewportWidth}"
                           Maximum="{TemplateBinding ScrollableWidth}"
                           Minimum="0"
                           Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                           AutomationProperties.AutomationId="HorizontalScrollBar"
                           Grid.Row="1" />
            </Grid>
        </ControlTemplate>
        <!-- End Animated Listbox-->
        
        <s:Int32 x:Key="Files">1</s:Int32>
        <s:Int32 x:Key="Csv">2</s:Int32>
        <s:Int32 x:Key="Zip">3</s:Int32>
        
        <s:Int32 x:Key="SettingsTabAccount">0</s:Int32>
        <s:Int32 x:Key="SettingsTabPreferences">1</s:Int32>
        <s:Int32 x:Key="SettingsTabSecurity">2</s:Int32>
        <s:Int32 x:Key="SettingsTabShortcuts">3</s:Int32>
        <s:Int32 x:Key="SettingsTabHelp">4</s:Int32>
        <s:Boolean x:Key="True">True</s:Boolean>
        <s:Boolean x:Key="False">False</s:Boolean>
        
        <local:MpStringToBrushConverter x:Key="StringToBrushConverter" />
        <local:MpPointCollectionConverter x:Key="PointCollectionConverter" />
        <local:MpIntToStringConverter x:Key="IntToStringConverter" />
        <local:MpBoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <local:MpSolidColorBrushToBrushConverter x:Key="SolidColorBrushToBrushConverter" />
        <local:MpImageSourceToBitmapSourceConverter x:Key="ImageSourceToBitmapSourceConverter" />
        <!--Color Pallete Menu Item-->
        <Style x:Key="MenuItemStyle"
               TargetType="{x:Type MenuItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Bd"
                                Padding="31,0,17,0"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True"
                                Uid="Border_38">
                            <ContentPresenter x:Name="ContentPresenter"
                                              Content="{TemplateBinding Header}"
                                              Grid.Column="1"
                                              ContentSource="Header"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Uid="ContentPresenter_33" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted"
                                     Value="True">
                                <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="#00FFFFFF" />
                                <Setter Property="BorderBrush"
                                        TargetName="Bd"
                                        Value="#00FFFFFF" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background"
                    Value="Transparent" />
            <Style.Triggers>
                <Trigger Property="IsHighlighted"
                         Value="True">
                    <Setter Property="Background"
                            Value="Transparent" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- Button Styles -->
        <Style x:Key="Transparent_Button"
               TargetType="{x:Type Button}">
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                BorderThickness="0"
                                BorderBrush="Black"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="Background"
                                        Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="LockToggleButtonControlTemplate"
                         TargetType="{x:Type ToggleButton}">
            <Border x:Name="OuterBorder"
                    BorderBrush="Transparent"
                    BorderThickness="1"
                    CornerRadius="2">
                <Border x:Name="InnerBorder"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="1"
                        CornerRadius="2">
                    <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True"
                                      Margin="{TemplateBinding Padding}" />
                </Border>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter TargetName="OuterBorder"
                            Property="BorderBrush"
                            Value="#FF7CA0CC" />
                    <Setter TargetName="InnerBorder"
                            Property="BorderBrush"
                            Value="#FFE4EFFD" />
                    <Setter TargetName="InnerBorder"
                            Property="Background"
                            Value="#FFDAE7F5" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter TargetName="OuterBorder"
                            Property="BorderBrush"
                            Value="#FF2E4E76" />
                    <Setter TargetName="InnerBorder"
                            Property="BorderBrush"
                            Value="#FF116EE4" />
                    <Setter TargetName="InnerBorder"
                            Property="Background"
                            Value="#FF3272B8" />
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="True">
                    <Setter TargetName="OuterBorder"
                            Property="BorderBrush"
                            Value="#FFFFC00A" />
                    <Setter TargetName="InnerBorder"
                            Property="BorderBrush"
                            Value="#FFFFDE7F" />
                    <Setter TargetName="InnerBorder"
                            Property="Background"
                            Value="#FFFFD458" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="SearchButtonControlTemplate"
                         TargetType="{x:Type Button}">
            <Border x:Name="OuterBorder"
                    BorderBrush="Transparent"
                    BorderThickness="1"
                    CornerRadius="2">
                <Border x:Name="InnerBorder"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="1"
                        CornerRadius="2">
                    <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True"
                                      Margin="{TemplateBinding Padding}" />
                </Border>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter TargetName="OuterBorder"
                            Property="BorderBrush"
                            Value="#FF7CA0CC" />
                    <Setter TargetName="InnerBorder"
                            Property="BorderBrush"
                            Value="#FFE4EFFD" />
                    <Setter TargetName="InnerBorder"
                            Property="Background"
                            Value="#FFDAE7F5" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter TargetName="OuterBorder"
                            Property="BorderBrush"
                            Value="#FF2E4E76" />
                    <Setter TargetName="InnerBorder"
                            Property="BorderBrush"
                            Value="#FF116EE4" />
                    <Setter TargetName="InnerBorder"
                            Property="Background"
                            Value="#FF3272B8" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- Flat Button -->
        <ControlTemplate x:Key="FlatButtonControlTemplate"
                         TargetType="{x:Type Button}">
            <Border x:Name="OuterBorder"
                    BorderBrush="Transparent"
                    Margin="0,8,0,8"
                    BorderThickness="1"
                    CornerRadius="2">
                <Border x:Name="InnerBorder"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="1"
                        CornerRadius="2">
                    <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True"
                                      Margin="{TemplateBinding Padding}" />
                </Border>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter TargetName="OuterBorder"
                            Property="BorderBrush"
                            Value="#FF7CA0CC" />
                    <Setter TargetName="InnerBorder"
                            Property="BorderBrush"
                            Value="#FFE4EFFD" />
                    <Setter TargetName="InnerBorder"
                            Property="Background"
                            Value="#FFDAE7F5" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter TargetName="OuterBorder"
                            Property="BorderBrush"
                            Value="#FF2E4E76" />
                    <Setter TargetName="InnerBorder"
                            Property="BorderBrush"
                            Value="#FF116EE4" />
                    <Setter TargetName="InnerBorder"
                            Property="Background"
                            Value="#FF3272B8" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- Flat Toggle Button -->
        <ControlTemplate x:Key="FlatToggleButtonControlTemplate"
                         TargetType="{x:Type ToggleButton}">
            <Border x:Name="OuterBorder"
                    BorderBrush="Transparent"
                    Margin="0,8,0,8"
                    BorderThickness="1"
                    CornerRadius="2">
                <Border x:Name="InnerBorder"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="1"
                        CornerRadius="2">
                    <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True"
                                      Margin="{TemplateBinding Padding}" />
                </Border>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter TargetName="OuterBorder"
                            Property="BorderBrush"
                            Value="#FF7CA0CC" />
                    <Setter TargetName="InnerBorder"
                            Property="BorderBrush"
                            Value="#FFE4EFFD" />
                    <Setter TargetName="InnerBorder"
                            Property="Background"
                            Value="#FFDAE7F5" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter TargetName="OuterBorder"
                            Property="BorderBrush"
                            Value="#FF2E4E76" />
                    <Setter TargetName="InnerBorder"
                            Property="BorderBrush"
                            Value="#FF116EE4" />
                    <Setter TargetName="InnerBorder"
                            Property="Background"
                            Value="#FF3272B8" />
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="True">
                    <Setter TargetName="OuterBorder"
                            Property="BorderBrush"
                            Value="#FFFFC00A" />
                    <Setter TargetName="InnerBorder"
                            Property="BorderBrush"
                            Value="#FFFFDE7F" />
                    <Setter TargetName="InnerBorder"
                            Property="Background"
                            Value="#FFFFD458" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- Color Palletes -->
        <SolidColorBrush x:Key="AppColorDark">DarkViolet</SolidColorBrush>
        <SolidColorBrush x:Key="AppColorLight">MediumPurple</SolidColorBrush>
        <SolidColorBrush x:Key="ClipTileTitleTextBoxBackgroundBrush"
                         Color="White"
                         Opacity="0.5" />
        <SolidColorBrush x:Key="ClipTileDetectedObjectTextBoxBackgroundBrush"
                         Color="Black"
                         Opacity="0.5" />
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:CallMethodAction MethodName="MainWindow_Loaded"
                                TargetObject="{Binding}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <!-- Main Window Grid -->
    <Grid x:Name="MainWindowGrid"
          Background="Green">
        <Grid.RowDefinitions>
            <RowDefinition Height="{Binding TitleMenuHeight}" />
            <RowDefinition Height="{Binding FilterMenuHeight}"/>
            <RowDefinition Height="{Binding ClipTrayHeight}"/>
        </Grid.RowDefinitions>
        <tb:TaskbarIcon x:Name="SystemTrayTaskbarIcon"
                        DataContext="{Binding SystemTrayViewModel}"
                        IconSource="/MpWpfApp;component/Resources/Icons/monkey (2).ico"
                        ToolTipText="{Binding SystemTrayIconToolTipText}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Loaded">
                    <i:CallMethodAction MethodName="SystemTrayTaskbarIcon_Loaded"
                                        TargetObject="{Binding}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Settings"
                              Command="{Binding ShowSettingsWindowCommand}"
                              CommandParameter="{StaticResource SettingsTabAccount}"/>
                    <MenuItem Header="Pause" />
                    <MenuItem Header="Help" />
                    <MenuItem Header="Exit"
                              Command="{Binding ExitApplicationCommand}" />
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
            <tb:TaskbarIcon.TrayToolTip>
                <Border Background="{StaticResource AppColorDark}"
                        BorderBrush="{StaticResource AppColorLight}"
                        BorderThickness="2"
                        Padding="10"
                        CornerRadius="4"
                        Opacity="0.8">
                    <StackPanel>
                        <TextBlock Text="Monkey Paste Info 1"
                                   Foreground="White"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                        <TextBlock Text="Monkey Paste Info 2"
                                   Foreground="White"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                        <TextBlock Text="Monkey Paste Info 3"
                                   Foreground="White"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                    </StackPanel>
                </Border>
            </tb:TaskbarIcon.TrayToolTip>
        </tb:TaskbarIcon>
        <!-- Main Menu -->
        <StackPanel Grid.Row="0"
                    Grid.Column="0"
                    Orientation="Horizontal"
                    Background="DarkGreen" />
        <!-- FilterMenu -->
        <Grid Grid.Row="1"
              Grid.Column="0"
              Focusable="True"
              Background="DarkViolet">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.3*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="5*" />
                <ColumnDefinition Width="1.5*" />
            </Grid.ColumnDefinitions>
            <ToggleButton x:Name="TogglekMainWindowLockButton"
                    Grid.Column="0"
                    Width="35"
                    Height="35"
                    Margin="5,0,0,0"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Left"
                    IsChecked="{Binding IsMainWindowLocked}"
                    Command="{Binding TogglekMainWindowLockCommand}"
                    Template="{StaticResource LockToggleButtonControlTemplate}">
                <Image Source="/Resources/Images/lock.png"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center" />
            </ToggleButton>
            <!-- Sort Combobox -->
            <Grid Grid.Column="1"
                  DataContext="{Binding ClipTileSortViewModel}"
                  Margin="0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Loaded">
                        <i:CallMethodAction MethodName="ClipTileSort_Loaded"
                                            TargetObject="{Binding}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="4*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0"
                       FontSize="19"
                       Foreground="White"
                       HorizontalAlignment="Left"
                       FontWeight="DemiBold"
                       VerticalContentAlignment="Center"
                       Padding="0,0,0,0">Sort By</Label>
                <local:MpClipBorder CornerRadius="15"
                                    Margin="5"
                                    Grid.Column="1">
                    <ComboBox FontSize="16"
                              Background="Transparent"
                              HorizontalContentAlignment="Left"
                              VerticalContentAlignment="Center"
                              SelectedItem="{Binding SelectedSortType}"
                              ItemsSource="{Binding SortTypes}">
                        <ComboBox.ItemTemplate>
                            <ItemContainerTemplate>
                                <TextBlock Text="{Binding Header}" />
                            </ItemContainerTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </local:MpClipBorder>
                <Button Grid.Column="2"
                        Margin="0,0,0,0"
                        Background="Transparent"
                        Style="{StaticResource Transparent_Button}"
                        BorderThickness="0"
                        Height="30"
                        Width="30"
                        Command="{Binding ToggleSortOrderCommand}">
                    <Grid>
                        <Image Source="/Resources/Images/asc_white.png"
                               Visibility="{Binding AscSortOrderButtonImageVisibility}"
                               Stretch="Fill" />
                        <Image Source="/Resources/Images/desc_white.png"
                               Visibility="{Binding DescSortOrderButtonImageVisibility}"
                               Stretch="Fill" />
                    </Grid>

                </Button>
            </Grid>
            <!-- Tag Tray -->
            <StackPanel Grid.Column="2"
                        DataContext="{Binding TagTrayViewModel}"
                        Focusable="False"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Loaded">
                        <i:CallMethodAction MethodName="TagTray_Loaded"
                                            TargetObject="{Binding}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListBox x:Name="TagTray"
                         Focusable="False"
                         Background="Transparent"
                         BorderBrush="Transparent"
                         dd:DragDrop.IsDragSource="True"
                         dd:DragDrop.IsDropTarget="True"
                         dd:DragDrop.DropHandler="{Binding}"
                         HorizontalAlignment="Center"
                         SelectionMode="Single"
                         ScrollViewer.VerticalScrollBarVisibility="Hidden"
                         ItemsSource="{Binding}">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="IsSelected"
                                    Value="{Binding IsSelected}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <ContentPresenter />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel IsItemsHost="True"
                                                    ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                                    Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <!-- Tag Tile Border -->
                            <local:MpClipBorder x:Name="TagTileBorder"
                                                CornerRadius="10"
                                                Margin="5,0,5,0"
                                                Padding="7,5,7,5"
                                                Focusable="True"
                                                VerticalAlignment="Center"
                                                Background="{Binding TagBorderBackgroundBrush}"
                                                BorderBrush="{Binding TagBorderBrush}"
                                                BorderThickness="1.5"
                                                Height="{Binding TagHeight}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Loaded">
                                        <i:CallMethodAction TargetObject="{Binding}"
                                                            MethodName="TagTile_Loaded" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <local:MpClipBorder.ContextMenu>
                                    <ContextMenu>
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Loaded">
                                                <i:CallMethodAction TargetObject="{Binding}"
                                                                    MethodName="TagTile_ContextMenu_Loaded" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <MenuItem Header="Rename"
                                                  Command="{Binding RenameTagCommand}" />
                                        <MenuItem Header="Hotkey"
                                                  InputGestureText="{Binding ShortcutKeyString}"
                                                  Command="{Binding AssignHotkeyCommand}" />
                                        <MenuItem Header="Change Color"
                                                  Command="{Binding ChangeTagColorCommand}" />
                                        <MenuItem x:Name="TagTileColorContextMenuItem"
                                                  Style="{StaticResource MenuItemStyle}" />
                                        <MenuItem Header="Delete"
                                                  Command="{Binding TagTrayViewModel.DeleteTagCommand}" />
                                    </ContextMenu>
                                </local:MpClipBorder.ContextMenu>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <!-- Tag Count Box-->
                                    <local:MpClipBorder CornerRadius="5"
                                                        Grid.Column="0"
                                                        Grid.Row="0"
                                                        MinWidth="20"
                                                        Margin="3,0,0,0"
                                                        Padding="5"
                                                        BorderThickness="0"
                                                        Background="{Binding TagColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}">
                                        <TextBlock Background="Transparent"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   Text="{Binding TagClipCount, Converter={StaticResource IntToStringConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}"
                                                   Foreground="{Binding TagCountTextColor}" />
                                    </local:MpClipBorder>
                                    <TextBlock x:Name="TagTextBlock"
                                               Grid.Column="1"
                                               Grid.Row="0"
                                               Margin="5,0,0,0"
                                               Background="Transparent"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Visibility="{Binding TextBlockVisibility}"
                                               FontSize="{Binding TagFontSize}"
                                               FontWeight="SemiBold"
                                               Foreground="{Binding TagTextColor}"
                                               Text="{Binding TagName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}">
                                    </TextBlock>
                                    <TextBox x:Name="TagTextBox"
                                             Grid.Row="0"
                                             Grid.Column="1"
                                             Margin="5,0,0,0"
                                             Background="White"
                                             Foreground="Black"
                                             IsReadOnly="False"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"
                                             Visibility="{Binding TextBoxVisibility}"
                                             FontSize="{Binding TagFontSize}"
                                             Text="{Binding TagName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}" />
                                </Grid>
                            </local:MpClipBorder>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <!-- Add Tag Button -->
                <Button x:Name="AddTagButton"
                        Height="30"
                        Width="30"
                        BorderThickness="0"
                        Style="{StaticResource Transparent_Button}"
                        Background="Transparent"
                        Command="{Binding CreateTagCommand}">
                    <Image Stretch="Fill"
                           Source="/MpWpfApp;component/Resources/Images/add4.png" />
                </Button>
            </StackPanel>
            <Grid Grid.Column="3"
                  DataContext="{Binding SearchBoxViewModel}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="0.2*" />
                </Grid.ColumnDefinitions>
                <!-- Search Border -->
                <local:MpClipBorder x:Name="SearchTextBoxBorder"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="{Binding SearchBorderColumnSpan}"
                                    Margin="5"
                                    CornerRadius="10"
                                    BorderBrush="{Binding TextBoxBorderBrush}"
                                    Background="White"
                                    BorderThickness="3">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Loaded">
                            <i:CallMethodAction MethodName="SearchBoxBorder_Loaded"
                                                TargetObject="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <Grid Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0.15*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="0.1*" />
                        </Grid.ColumnDefinitions>
                        <Button x:Name="SearchDropDownButton" 
                                Background="Transparent"
                                Grid.Column="0"
                                Margin="3,0,0,0"
                                Width="25"
                                Height="25"
                                Template="{StaticResource SearchButtonControlTemplate}"
                                BorderThickness="0">
                            <Image Source="/MpWpfApp;component/Resources/Images/search.png"
                                   Stretch="Fill"
                                   SnapsToDevicePixels="True"/>                                                
                        </Button>
                        <TextBox x:Name="SearchBox"
                                 Grid.Column="1"
                                 FontSize="16"
                                 Background="Transparent"
                                 Foreground="{Binding TextBoxTextBrush}"
                                 FontStyle="{Binding TextBoxFontStyle}"
                                 BorderThickness="0"
                                 VerticalContentAlignment="Center"
                                 Padding="0,0,0,0"
                                 Text="{Binding Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}">
                        </TextBox>
                        <spinners:ucSpinnerApple x:Name="IsSearchingSpinner"
                                                 Grid.Column="2"
                                                 VerticalAlignment="Center"
                                                 Margin="0,0,5,0"
                                                 Visibility="{Binding SearchSpinnerVisibility}"/>
                        <Button x:Name="ClearTextBoxButton"
                                Grid.Column="2"
                                Width="15"
                                Height="15"
                                Visibility="{Binding ClearTextButtonVisibility}"
                                Command="{Binding ClearTextCommand}"
                                Template="{DynamicResource BackgroundButton}">
                            <Button.Background>
                                <ImageBrush ImageSource="/MpWpfApp;component/Resources/Images/close2.png" />
                            </Button.Background>
                            <Button.Resources>
                                <ControlTemplate x:Key="BackgroundButton"
                                                 TargetType="Button">
                                    <Border x:Name="border"
                                            BorderThickness="0"
                                            Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center"
                                                          VerticalAlignment="Center" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver"
                                                 Value="True">
                                            <Setter Property="Background"
                                                    TargetName="border">
                                                <Setter.Value>
                                                    <ImageBrush ImageSource="/MpWpfApp;component/Resources/Images/close2.png" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Resources>
                        </Button>
                    </Grid>
                </local:MpClipBorder>
                <!-- Search Navigation Border-->
                <local:MpClipBorder Grid.Column="1"
                                    CornerRadius="10"
                                    Visibility="{Binding SearchNavigationButtonPanelVisibility}"
                                    HorizontalAlignment="Center"
                                    Margin="3,0,10,0">
                    <StackPanel Orientation="Horizontal">
                        <Button x:Name="PreviousTemplateButton"
                                TabIndex="2"
                                Command="{Binding PrevMatchCommand}"
                                Width="20"
                                Height="20"
                                Padding="5">
                            <Image Source="/Resources/Images/back_black.png" />
                        </Button>
                        <Button x:Name="NextTemplateButton"
                                TabIndex="3"
                                Command="{Binding NextMatchCommand}"
                                Width="20"
                                Height="20"
                                Padding="5">
                            <Image Source="/Resources/Images/forward_black.png" />
                        </Button>
                    </StackPanel>
                </local:MpClipBorder>
            </Grid>
        </Grid>
        <Grid Grid.Row="2"
              Grid.Column="0"
              Focusable="True"
              Background="MediumPurple">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding AppStateButtonGridWidth}" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <!-- clip tile tray -->
            <!-- Side bar AppState Buttons -->
            <Grid Grid.Row="0"
                  Grid.Column="0"
                  DataContext="{Binding AppModeViewModel}"
                  Background="Orange">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Loaded">
                        <i:CallMethodAction MethodName="AppMode_Loaded"
                                            TargetObject="{Binding}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <ToggleButton Grid.Row="0"
                              Grid.Column="0"
                              Padding="0,5,0,5"
                              Command="{Binding ToggleIsAppPausedCommand}"
                              CommandParameter="{StaticResource False}">
                    <TextBlock Text="Pause System"
                               HorizontalAlignment="Center"
                               TextWrapping="Wrap" />
                </ToggleButton>
                <ToggleButton Grid.Row="1"
                              Grid.Column="0"
                              Command="{Binding ToggleAutoCopyModeCommand}"
                              CommandParameter="{StaticResource False}"
                              IsChecked="{Binding IsAutoCopyMode}"
                              Padding="0,5,0,5">
                    <TextBlock Text="Auto Copy"
                               HorizontalAlignment="Center"
                               TextWrapping="Wrap" />
                </ToggleButton>
                <ToggleButton Grid.Row="2"
                              Grid.Column="0"
                              Command="{Binding ToggleRightClickPasteCommand}"
                              CommandParameter="{StaticResource False}"
                              IsChecked="{Binding IsRightClickPasteMode}"
                              Padding="0,5,0,5">
                    <TextBlock Text="Auto Paste"
                               HorizontalAlignment="Center"
                               TextWrapping="Wrap" />
                </ToggleButton>
                <ToggleButton Grid.Row="3"
                              Grid.Column="0"
                              Padding="0,5,0,5"
                              Command="{Binding ToggleAppendModeCommand}"
                              CommandParameter="{StaticResource False}"
                              IsChecked="{Binding IsInAppendMode}">
                    <TextBlock Text="Auto Append"
                               FontSize="11"
                               HorizontalAlignment="Center"
                               TextWrapping="Wrap" />
                </ToggleButton>
                <ToggleButton Grid.Row="4"
                              Grid.Column="0"
                              Padding="0,10,10,10">
                    <TextBlock Text="Smart Copy"
                               HorizontalAlignment="Center"
                               TextWrapping="Wrap" />
                </ToggleButton>
            </Grid>
            <Grid x:Name="ClipTrayGrid"
                  DataContext="{Binding ClipTrayViewModel}"
                  Grid.Row="0"
                  Grid.Column="1">
                <Grid.Resources>
                    <local:MpBindingProxy x:Key="ClipTrayProxy"
                                          Data="{Binding}" />
                </Grid.Resources>
                <local:MpMultiSelectListView x:Name="ClipTray"
                                             ItemsSource="{Binding}"
                                             Width="{Binding MainWindowViewModel.ClipTrayWidth}"
                                             ScrollToSelectedItem="True"
                                             Visibility="Visible"
                                             IsSynchronizedWithCurrentItem="True"
                                             Margin="5,0,0,0"
                                             Focusable="True"
                                             BorderThickness="0"
                                             VerticalAlignment="Stretch"
                                             Background="Transparent"
                                             SelectionMode="Extended"
                                             VirtualizingPanel.IsVirtualizing="True"
                                             VirtualizingPanel.ScrollUnit="Pixel"
                                             VirtualizingPanel.VirtualizationMode="Recycling"
                                             ScrollViewer.CanContentScroll="True"
                                             ScrollViewer.IsDeferredScrollingEnabled="False"
                                             ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                             ScrollViewer.VerticalScrollBarVisibility="Hidden">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Loaded">
                            <i:CallMethodAction MethodName="ClipTray_Loaded"
                                                TargetObject="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <local:MpMultiSelectListView.InputBindings>
                        <KeyBinding Gesture="Ctrl+A"
                                    Command="{Binding SelectAllCommand}" />
                    </local:MpMultiSelectListView.InputBindings>
                    <local:MpMultiSelectListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="IsSelected"
                                    Value="{Binding IsSelected}" />
                            <Setter Property="FocusVisualStyle"
                                    Value="{x:Null}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <ContentPresenter />
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected"
                                                     Value="True">
                                                <Setter Property="BorderBrush"
                                                        Value="Transparent" />
                                                <Setter Property="Background"
                                                        Value="Transparent" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </local:MpMultiSelectListView.ItemContainerStyle>
                    <local:MpMultiSelectListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel IsItemsHost="True"
                                                    Width="{Binding MainWindowViewModel.ClipTrayWidth}"
                                                    CanVerticallyScroll="False"
                                                    CanHorizontallyScroll="True"
                                                    VerticalAlignment="Stretch"
                                                    Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </local:MpMultiSelectListView.ItemsPanel>
                    <local:MpMultiSelectListView.ItemTemplate>
                        <DataTemplate>
                            <!-- Clip Tile -->
                            <local:MpClipBorder BorderBrush="{Binding TileBorderBrush}"
                                                Margin="{Binding TileMargin}"
                                                BorderThickness="{Binding TileBorderThickness}"
                                                Width="{Binding TileBorderWidth}"
                                                Height="{Binding TileBorderHeight}"
                                                Visibility="{Binding TileVisibility}"
                                                Focusable="True"
                                                Background="{local:MpSettingBinding ThemeClipTileBackgroundColor, Converter={StaticResource StringToBrushConverter}}"
                                                ToolTipService.ShowDuration="1000"
                                                CornerRadius="10">
                                <ii:Interaction.Behaviors>
                                    <local:MpAnimatedVisibilityFadeBehavior x:Name="ClipTileVisibilityFadeBehavior"                                                                             
                                                                            AnimationDuration="0:0:0.3"
                                                                            InitialState="Collapsed" />
                                </ii:Interaction.Behaviors>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Loaded">
                                        <i:CallMethodAction TargetObject="{Binding}"
                                                            MethodName="ClipTile_Loaded" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <local:MpClipBorder.Resources>
                                    <local:MpBindingProxy x:Key="ClipTileProxy"
                                                          Data="{Binding}" />
                                </local:MpClipBorder.Resources>
                                <local:MpClipBorder.Effect>
                                    <DropShadowEffect Color="DarkGray"
                                                      BlurRadius="7" />
                                </local:MpClipBorder.Effect>
                                <Grid Background="#FF3D3D3D">                                    
                                    <Grid Background="White" Visibility="{Binding ContentVisibility}">                                        
                                        <Grid.ContextMenu>
                                            <ContextMenu x:Name="ClipTile_ContextMenu">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Loaded">
                                                        <i:CallMethodAction TargetObject="{Binding}"
                                                                            MethodName="ClipTile_ContextMenu_Loaded" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="Opened">
                                                        <i:CallMethodAction TargetObject="{Binding}"
                                                                            MethodName="ClipTile_ContextMenu_Opened" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="Closed">
                                                        <i:CallMethodAction TargetObject="{Binding}"
                                                                            MethodName="ClipTile_ContextMenu_Closed" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <MenuItem Header="Paste"
                                                          Command="{Binding Data.PasteSelectedClipsCommand, Source={StaticResource ClipTrayProxy}}"/>
                                                <MenuItem Header="Bring to Front"
                                                          Command="{Binding Data.BringSelectedClipTilesToFrontCommand, Source={StaticResource ClipTrayProxy}}" />
                                                <MenuItem Header="Send to Back"
                                                          Command="{Binding Data.SendSelectedClipTilesToBackCommand, Source={StaticResource ClipTrayProxy}}" /> 
                                                <MenuItem Header="Invert Selection"
                                                          Command="{Binding Data.InvertSelectionCommand, Source={StaticResource ClipTrayProxy}}" />
                                                <MenuItem Header="Assign Hotkey"
                                                          InputGestureText="{Binding ShortcutKeyString}"
                                                          Command="{Binding Data.AssignHotkeyCommand, Source={StaticResource ClipTrayProxy}}" />
                                                <MenuItem Header="Exclude Application"
                                                          Command="{Binding ExcludeApplicationCommand}" />
                                                <MenuItem Header="Export To">
                                                    <MenuItem Header="File(s)..."
                                                              Command="{Binding Data.ExportSelectedClipTilesCommand, Source={StaticResource ClipTrayProxy}}"
                                                              CommandParameter="{StaticResource Files}" />
                                                    <MenuItem Header="CSV"
                                                              Command="{Binding Data.ExportSelectedClipTilesCommand, Source={StaticResource ClipTrayProxy}}"
                                                              CommandParameter="{StaticResource Csv}" />
                                                    <MenuItem Header="Zip"
                                                              Command="{Binding Data.ExportSelectedClipTilesCommand, Source={StaticResource ClipTrayProxy}}"
                                                              CommandParameter="{StaticResource Zip}" />
                                                </MenuItem>
                                                <MenuItem Header="Rename"
                                                          Command="{Binding Data.RenameClipCommand, Source={StaticResource ClipTrayProxy}}" />
                                                <MenuItem Header="Duplicate"
                                                          Command="{Binding Data.DuplicateSelectedClipsCommand, Source={StaticResource ClipTrayProxy}}" />
                                                <MenuItem Header="Edit"
                                                          Command="{Binding EditClipCommand}" />
                                                <MenuItem Header="Send as Email"
                                                          Command="{Binding SendClipToEmailCommand}" />
                                                <MenuItem x:Name="ClipTileColorContextMenuItem"
                                                          Style="{StaticResource MenuItemStyle}" />
                                                <MenuItem Header="Delete"
                                                          Command="{Binding Data.DeleteSelectedClipsCommand, Source={StaticResource ClipTrayProxy}}" />
                                                <MenuItem Header="Say"
                                                          Command="{Binding Data.SpeakSelectedClipsAsyncCommand, Source={StaticResource ClipTrayProxy}}" />
                                                <MenuItem Header="Merge"
                                                          Command="{Binding Data.MergeSelectedClipsCommand, Source={StaticResource ClipTrayProxy}}" />
                                                <MenuItem Header="Search Web">
                                                    <MenuItem Header="Google">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                                                <i:CallMethodAction MethodName="ContextMenuMouseLeftButtonUpOnSearchGoogle"
                                                                                    TargetObject="{Binding Data, Source={StaticResource ClipTileProxy}}" />
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                    </MenuItem>
                                                    <MenuItem Header="Bing">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                                                <i:CallMethodAction MethodName="ContextMenuMouseLeftButtonUpOnSearchBing"
                                                                                    TargetObject="{Binding Data, Source={StaticResource ClipTileProxy}}" />
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                    </MenuItem>
                                                    <MenuItem Header="DuckDuckGo">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                                                <i:CallMethodAction MethodName="ContextMenuMouseLeftButtonUpOnSearchDuckDuckGo"
                                                                                    TargetObject="{Binding Data, Source={StaticResource ClipTileProxy}}" />
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                    </MenuItem>
                                                    <MenuItem Header="Yandex">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                                                <i:CallMethodAction MethodName="ContextMenuMouseLeftButtonUpOnSearchYandex"
                                                                                    TargetObject="{Binding Data, Source={StaticResource ClipTileProxy}}" />
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                    </MenuItem>
                                                </MenuItem>
                                                <MenuItem Header="Convert To"
                                                          ItemsSource="{Binding Data.ConvertClipTypes, Source={StaticResource ClipTileProxy}}">
                                                    <MenuItem.ItemContainerStyle>
                                                        <Style TargetType="{x:Type MenuItem}">
                                                            <Setter Property="Header"
                                                                    Value="{Binding Header}" />
                                                            <Setter Property="Command"
                                                                    Value="{Binding Command}" />
                                                            <Setter Property="CommandParameter"
                                                                    Value="{Binding CommandParameter}" />
                                                            <Setter Property="IsCheckable"
                                                                    Value="True" />
                                                            <Setter Property="IsChecked"
                                                                    Value="{Binding IsChecked}" />
                                                        </Style>
                                                    </MenuItem.ItemContainerStyle>
                                                </MenuItem>
                                                <MenuItem Header="Duplicate As Qr Code"
                                                          Command="{Binding Data.CreateQrCodeFromClipCommand, Source={StaticResource ClipTileProxy}}" />
                                                <MenuItem x:Name="TranslateMenuItem"
                                                          Header="Translate"
                                                          ItemsSource="{Binding Data.TranslateLanguageMenuItems, Source={StaticResource ClipTileProxy}}">
                                                    <MenuItem.ItemContainerStyle>
                                                        <Style TargetType="{x:Type MenuItem}">
                                                            <Setter Property="Header"
                                                                    Value="{Binding Header}" />
                                                            <Setter Property="Command"
                                                                    Value="{Binding Command}" />
                                                            <Setter Property="CommandParameter"
                                                                    Value="{Binding CommandParameter}" />
                                                        </Style>
                                                    </MenuItem.ItemContainerStyle>
                                                </MenuItem>
                                                <MenuItem x:Name="PasteToAppPathMenuItem" 
                                                          Header="Paste To Application"/>
                                                <MenuItem Header="Pin To"
                                                          ItemsSource="{Binding Data.TagMenuItems, Source={StaticResource ClipTileProxy}}">
                                                    <MenuItem.ItemContainerStyle>
                                                        <Style TargetType="{x:Type MenuItem}">
                                                            <Setter Property="Header"
                                                                    Value="{Binding Header}" />
                                                            <Setter Property="Command"
                                                                    Value="{Binding Command}" />
                                                            <Setter Property="CommandParameter"
                                                                    Value="{Binding CommandParameter}" />
                                                            <Setter Property="IsCheckable"
                                                                    Value="True" />
                                                            <Setter Property="IsChecked"
                                                                    Value="{Binding IsChecked}" />
                                                        </Style>
                                                    </MenuItem.ItemContainerStyle>
                                                </MenuItem>
                                            </ContextMenu>
                                        </Grid.ContextMenu>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="{Binding TileTitleHeight}" />
                                            <RowDefinition Height="{Binding TileContentHeight}" />
                                            <RowDefinition Height="{Binding TileDetailHeight}" />
                                        </Grid.RowDefinitions>
                                        <!-- Tile Title StackPanel -->
                                        <Canvas Grid.Row="0"
                                                Grid.Column="0"
                                                VerticalAlignment="Top"
                                                HorizontalAlignment="Left">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Loaded">
                                                    <i:CallMethodAction TargetObject="{Binding}"
                                                                        MethodName="ClipTileTitle_Loaded" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            <Image x:Name="TitleSwirl"
                                                   Canvas.Top="-1"
                                                   Canvas.Left="-1"
                                                   RenderOptions.BitmapScalingMode="HighQuality"
                                                   Stretch="Fill"
                                                   Width="{Binding TileBorderWidth}"
                                                   Height="{Binding TileTitleHeight}"
                                                   Source="{Binding TitleSwirl}" />
                                            <Grid x:Name="ClipTileTitleTextGrid"
                                                  Background="{Binding TileTitleTextGridBackgroundBrush}">
                                                <!-- Clip Title TextBlock -->
                                                <TextBlock x:Name="ClipTileTitleTextBlock"
                                                           Text="{Binding CopyItemTitle}"
                                                           FontSize="{Binding TitleFontSize}"
                                                           Foreground="White"
                                                           Background="Transparent"
                                                           Visibility="{Binding TileTitleTextBlockVisibility}">
                                            <!--<TextBlock.Effect>
                                                <DropShadowEffect ShadowDepth="0.5"
                                                                  Direction="300"
                                                                  Color="Black"
                                                                  Opacity="1.0"
                                                                  BlurRadius="0.1" />
                                            </TextBlock.Effect>-->
                                                </TextBlock>
                                                <!-- Clip Title TextBox -->
                                                <TextBox x:Name="ClipTileTitleTextBox"
                                                         Background="{StaticResource ClipTileTitleTextBoxBackgroundBrush}"
                                                         Foreground="Black"
                                                         FontSize="20"
                                                         IsReadOnly="False"
                                                         Visibility="{Binding TileTitleTextBoxVisibility}"
                                                         Text="{Binding CopyItemTitle, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, UpdateSourceTrigger=LostFocus}" />
                                            </Grid>
                                            <!-- Clip Title Icon Image -->
                                            <Button x:Name="ClipTileAppIconImageButton"
                                                    Style="{StaticResource Transparent_Button}"
                                                    RenderTransformOrigin="0.5,0.5"
                                                    Background="Transparent"
                                                    BorderThickness="0">
                                                <Button.RenderTransform>
                                                    <RotateTransform x:Name="ClipTileAppIconImageButtonRotateTransform" />
                                                </Button.RenderTransform>
                                                <Grid>
                                                    <Image x:Name="ClipTileAppIconBorderImage"
                                                           Source="{Binding CopyItemAppIconBorder, Converter={StaticResource ImageSourceToBitmapSourceConverter}}"
                                                           Stretch="Fill"
                                                           RenderTransformOrigin="0.5, 0.5"
                                                           Visibility="Hidden"
                                                           Width="{Binding TileTitleIconSize}"
                                                           Height="{Binding TileTitleIconSize}">
                                                        <Image.RenderTransform>
                                                            <ScaleTransform x:Name="ClipTileAppIconBorderImageScaleTransform" />
                                                        </Image.RenderTransform>
                                                    </Image>
                                                    <Image x:Name="ClipTileAppIconImage"
                                                           Source="{Binding CopyItemAppIcon, Converter={StaticResource ImageSourceToBitmapSourceConverter}}"
                                                           Stretch="Fill"
                                                           Width="{Binding TileTitleIconSize}"
                                                           Height="{Binding TileTitleIconSize}">
                                                        <!--<Image.Style>
                                                            <Style TargetType="{x:Type Image}">
                                                                <Style.Triggers>
                                                                    <Trigger Property="IsMouseOver"
                                                                             Value="True">
                                                                        <Setter Property="Effect">
                                                                            <Setter.Value>
                                                                                <DropShadowEffect ShadowDepth="3"
                                                                                                  Color="White"
                                                                                                  Opacity="1"
                                                                                                  BlurRadius="50" />
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>-->
                                                    </Image>
                                                </Grid>
                                            </Button>
                                        </Canvas>
                                        <!-- Content Container Canvas -->
                                        <Canvas x:Name="ClipTileContentCanvas"
                                                Grid.Row="1"
                                                ClipToBounds="True"
                                                Grid.Column="0">
                                            <!-- RichText Content -->
                                            <Canvas x:Name="ClipTileRichTextBoxListBoxCanvas"
                                                    Visibility="{Binding RtbVisibility}"
                                                    Height="{Binding TileContentHeight}"
                                                    Width="{Binding TileContentWidth, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Loaded">
                                                        <i:CallMethodAction TargetObject="{Binding}"
                                                                            MethodName="ClipTileRichTextStackPanel_Loaded" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <Border x:Name="ClipTileEditorToolbar"
                                                        Visibility="{Binding EditToolbarVisibility}"
                                                        Height="{Binding EditRichTextBoxToolbarHeight}"
                                                        BorderThickness="0,0,0,1"
                                                        BorderBrush="OldLace">
                                                    <StackPanel Orientation="Horizontal"
                                                                DataContext="{Binding EditRichTextBoxToolbarViewModel}">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="Loaded">
                                                                <i:CallMethodAction TargetObject="{Binding}"
                                                                                    MethodName="ClipTileEditorToolbarBorder_Loaded" />
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                        <Button x:Name="PrintButton"
                                                                Template="{StaticResource FlatButtonControlTemplate}"
                                                                Margin="10,1,0,1">
                                                            <Image Source="/Resources/Images/MpRichTextBox/Print.png"
                                                                   Stretch="None"
                                                                   SnapsToDevicePixels="True" />
                                                        </Button>
                                                        <Image Source="/Resources/Images/MpRichTextBox/separator.png"
                                                               Stretch="None"
                                                               SnapsToDevicePixels="True" />
                                                        <ComboBox x:Name="FontFamilyCombo"
                                                                  Height="23"
                                                                  Width="100"
                                                                  Margin="5,2,0,2"
                                                                  IsEditable="True"
                                                                  ItemsSource="{Binding SystemFonts}">
                                                            <ComboBox.ItemsPanel>
                                                                <ItemsPanelTemplate>
                                                                    <VirtualizingStackPanel Width="250" />
                                                                </ItemsPanelTemplate>
                                                            </ComboBox.ItemsPanel>
                                                            <ComboBox.ItemTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock Text="{Binding}"
                                                                               FontFamily="{Binding}"
                                                                               FontSize="15"
                                                                               Height="20" />
                                                                </DataTemplate>
                                                            </ComboBox.ItemTemplate>
                                                        </ComboBox>
                                                        <ComboBox x:Name="FontSizeCombo"
                                                                  Height="23"
                                                                  Width="40"
                                                                  Margin="5,2,5,2"
                                                                  IsEditable="True"
                                                                  ItemsSource="{Binding FontSizes}" />
                                                        <Image Source="/Resources/Images/MpRichTextBox/separator.png"
                                                               Stretch="None"
                                                               SnapsToDevicePixels="True" />
                                                        <Button x:Name="AddTemplateButton"
                                                                ToolTip="Add Template"
                                                                Template="{StaticResource FlatButtonControlTemplate}"
                                                                IsEnabled="{Binding IsAddTemplateButtonEnabled}"
                                                                Background="{Binding AddTemplateButtonBackgroundBrush}">
                                                            <Image Source="/Resources/Images/MpRichTextBox/templateadd.png"
                                                                   Stretch="None"
                                                                   SnapsToDevicePixels="True" />
                                                        </Button>
                                                        <Image Source="/Resources/Images/MpRichTextBox/separator.png"
                                                               Stretch="None"
                                                               SnapsToDevicePixels="True" />
                                                        <Button x:Name="CutButton" 
                                                                Command="ApplicationCommands.Cut"
                                                                ToolTip="Cut"
                                                                Template="{StaticResource FlatButtonControlTemplate}">
                                                            <Image Source="/Resources/Images/MpRichTextBox/editcut.png"
                                                                   Stretch="None"
                                                                   SnapsToDevicePixels="True" />
                                                        </Button>
                                                        <Button x:Name="CopyButton" 
                                                                Command="ApplicationCommands.Copy"                                                                
                                                                ToolTip="Copy"
                                                                Template="{StaticResource FlatButtonControlTemplate}">
                                                            <Image Source="/Resources/Images/MpRichTextBox/editcopy.png"
                                                                   Stretch="None"
                                                                   SnapsToDevicePixels="True" />
                                                        </Button>
                                                        <Button x:Name="PasteButton" 
                                                                Command="ApplicationCommands.Paste"
                                                                ToolTip="Paste"
                                                                Template="{StaticResource FlatButtonControlTemplate}">
                                                            <Image Source="/Resources/Images/MpRichTextBox/editpaste.png"
                                                                   Stretch="None"
                                                                   SnapsToDevicePixels="True" />
                                                        </Button>
                                                        <Button x:Name="UndoButton" 
                                                                Command="ApplicationCommands.Undo"
                                                                ToolTip="Undo"
                                                                Template="{StaticResource FlatButtonControlTemplate}">
                                                            <Image Source="/Resources/Images/MpRichTextBox/editundo.png"
                                                                   Stretch="None"
                                                                   SnapsToDevicePixels="True" />
                                                        </Button>
                                                        <Button x:Name="RedoButton" 
                                                                Command="ApplicationCommands.Redo"
                                                                ToolTip="Redo"
                                                                Template="{StaticResource FlatButtonControlTemplate}">
                                                            <Image Source="/Resources/Images/MpRichTextBox/editredo.png"
                                                                   Stretch="None"
                                                                   SnapsToDevicePixels="True" />
                                                        </Button>
                                                        <Image Source="/Resources/Images/MpRichTextBox/separator.png"
                                                               Stretch="None"
                                                               SnapsToDevicePixels="True" />
                                                        <ToggleButton x:Name="BoldButton"
                                                                      Command="EditingCommands.ToggleBold"
                                                                      ToolTip="Bold"
                                                                      Template="{StaticResource FlatToggleButtonControlTemplate}">
                                                            <Image Source="/Resources/Images/MpRichTextBox/fontbold.png"
                                                                   Stretch="None"
                                                                   SnapsToDevicePixels="True" />
                                                        </ToggleButton>
                                                        <ToggleButton x:Name="ItalicButton"
                                                                      Command="EditingCommands.ToggleItalic"
                                                                      ToolTip="Italic"
                                                                      Template="{StaticResource FlatToggleButtonControlTemplate}">
                                                            <Image Source="/Resources/Images/MpRichTextBox/fontitalic.png"
                                                                   Stretch="None"
                                                                   SnapsToDevicePixels="True" />
                                                        </ToggleButton>
                                                        <ToggleButton x:Name="UnderlineButton"
                                                                      Command="EditingCommands.ToggleUnderline"
                                                                      ToolTip="Underline"
                                                                      Template="{StaticResource FlatToggleButtonControlTemplate}">
                                                            <Image Source="/Resources/Images/MpRichTextBox/fontunderline.png"
                                                                   Stretch="None"
                                                                   SnapsToDevicePixels="True" />
                                                        </ToggleButton>
                                                        <Image Source="/Resources/Images/MpRichTextBox/separator.png"
                                                               Stretch="None"
                                                               SnapsToDevicePixels="True" />
                                                        <Button x:Name="ForegroundColorButton"
                                                                Template="{StaticResource FlatButtonControlTemplate}">
                                                            <Border x:Name="ForegroundColorButtonBorder">
                                                                <Image Source="/Resources/Images/MpRichTextBox/Textcolor.png"
                                                                       Stretch="None"
                                                                       Opacity="1"
                                                                       SnapsToDevicePixels="False" />
                                                            </Border>
                                                        </Button>
                                                        <Button x:Name="BackgroundColorButton"
                                                                Template="{StaticResource FlatButtonControlTemplate}">
                                                            <Border x:Name="BackgroundColorButtonBorder">
                                                                <Image Source="/Resources/Images/MpRichTextBox/Backcolor.png"
                                                                       Stretch="None"
                                                                       SnapsToDevicePixels="True" />
                                                            </Border>
                                                        </Button>
                                                        <Image Source="/Resources/Images/MpRichTextBox/separator.png"
                                                               Stretch="None"
                                                               SnapsToDevicePixels="True" />
                                                        <ToggleButton x:Name="LeftButton"
                                                                      Command="EditingCommands.AlignLeft"
                                                                      ToolTip="Align Left"
                                                                      Template="{StaticResource FlatToggleButtonControlTemplate}">
                                                            <Image Source="/Resources/Images/MpRichTextBox/alignleft.png"
                                                                   Stretch="None"
                                                                   SnapsToDevicePixels="True" />
                                                        </ToggleButton>
                                                        <ToggleButton x:Name="CenterButton"
                                                                      Command="EditingCommands.AlignCenter"
                                                                      ToolTip="Align Center"
                                                                      Template="{StaticResource FlatToggleButtonControlTemplate}">
                                                            <Image Source="/Resources/Images/MpRichTextBox/aligncenter.png"
                                                                   Stretch="None"
                                                                   SnapsToDevicePixels="True" />
                                                        </ToggleButton>
                                                        <ToggleButton x:Name="RightButton"
                                                                      Command="EditingCommands.AlignRight"
                                                                      ToolTip="Align Right"
                                                                      Template="{StaticResource FlatToggleButtonControlTemplate}">
                                                            <Image Source="/Resources/Images/MpRichTextBox/alignright.png"
                                                                   Stretch="None"
                                                                   SnapsToDevicePixels="True" />
                                                        </ToggleButton>
                                                        <Image Source="/Resources/Images/MpRichTextBox/separator.png"
                                                               Stretch="None"
                                                               SnapsToDevicePixels="True" />
                                                        <ToggleButton x:Name="BulletsButton"
                                                                      Command="EditingCommands.ToggleBullets"
                                                                      ToolTip="Bullets"
                                                                      Template="{StaticResource FlatToggleButtonControlTemplate}">
                                                            <Image Source="/Resources/Images/MpRichTextBox/listbullets.png"
                                                                   Stretch="None"
                                                                   SnapsToDevicePixels="True" />
                                                        </ToggleButton>
                                                        <ToggleButton x:Name="NumberingButton"
                                                                      Command="EditingCommands.ToggleNumbering"
                                                                      ToolTip="Numbering"
                                                                      Template="{StaticResource FlatToggleButtonControlTemplate}">
                                                            <Image Source="/Resources/Images/MpRichTextBox/listnumbers.png"
                                                                   Stretch="None"
                                                                   SnapsToDevicePixels="True" />
                                                        </ToggleButton>
                                                        <Image Source="/Resources/Images/MpRichTextBox/separator.png"
                                                               Stretch="None" 
                                                               SnapsToDevicePixels="True"/>
                                                        <Button x:Name="RefreshDocumentButton"
                                                                Command="{Binding RefreshDocumentCommand}"
                                                                ToolTip="Refresh"
                                                                Template="{StaticResource FlatButtonControlTemplate}">
                                                            <Image Source="/Resources/Images/MpRichTextBox/arrow_refresh.png"
                                                                   Stretch="None"
                                                                   SnapsToDevicePixels="True" />
                                                        </Button>

                                                        <!--<Button Command="EditingCommands.IncreaseIndentation"
                                                                CommandTarget="{Binding ElementName=RtbListBoxItemRichTextBox}"
                                                                ToolTip="Increase Indentation"
                                                                Template="{StaticResource FlatButtonControlTemplate}"
                                                                >
                                                            <Image Source="/Resources/Images/MpRichTextBox/indentincrease.png"
                                                                   Stretch="None"
                                                                   SnapsToDevicePixels="True" />
                                                        </Button>
                                                        <Button Command="EditingCommands.DecreaseIndentation"
                                                                CommandTarget="{Binding ElementName=RtbListBoxItemRichTextBox}"
                                                                ToolTip="Decrease Indentation"
                                                                Template="{StaticResource FlatButtonControlTemplate}"
                                                                >
                                                            <Image Source="/Resources/Images/MpRichTextBox/indentdecrease.png"
                                                                   Stretch="None"
                                                                   SnapsToDevicePixels="True" />
                                                        </Button>-->
                                                    </StackPanel>
                                                </Border>
                                                <ListBox x:Name="ClipTileRichTextBoxListBox"
                                                         BorderThickness="0"
                                                         SelectionMode="Single"
                                                         dd:DragDrop.IsDragSource="True"
                                                         dd:DragDrop.IsDropTarget="True"
                                                         Background="{local:MpSettingBinding ThemeClipTileBackgroundColor, Converter={StaticResource StringToBrushConverter}}"
                                                         ItemsSource="{Binding RichTextBoxViewModelCollection}"
                                                         Focusable="{Binding IsEditingTile}"
                                                         IsEnabled="True"
                                                         ScrollViewer.HorizontalScrollBarVisibility="{Binding RtbHorizontalScrollbarVisibility}"
                                                         ScrollViewer.VerticalScrollBarVisibility="{Binding RtbVerticalScrollbarVisibility}"
                                                         Width="{Binding TileContentWidth}"                                                         
                                                         Height="{Binding TileRtbHeight}"
                                                         Padding="0">
                                                    <i:Interaction.Triggers>
                                                        <i:EventTrigger EventName="Loaded">
                                                            <i:CallMethodAction TargetObject="{Binding RichTextBoxViewModelCollection}"
                                                                                MethodName="ClipTileRichTextBoxViewModelCollection_Loaded" />
                                                        </i:EventTrigger>
                                                    </i:Interaction.Triggers>
                                                    <ListBox.ItemContainerStyle>
                                                        <Style TargetType="{x:Type ListBoxItem}">
                                                            <Setter Property="IsSelected"
                                                                    Value="{Binding IsSubSelected, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" />
                                                            <Setter Property="FocusVisualStyle"
                                                                    Value="{x:Null}" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                        <ContentPresenter />
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </ListBox.ItemContainerStyle>
                                                    <ListBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <AdornerDecorator>
                                                                <Canvas x:Name="RtbListBoxItemCanvas"
                                                                        DataContext="{Binding}"
                                                                        Background="Orange"
                                                                        Width="{Binding RtbCanvasWidth}"
                                                                        Height="{Binding RtbCanvasHeight}">
                                                                    <i:Interaction.Triggers>
                                                                        <i:EventTrigger EventName="Loaded">
                                                                            <i:CallMethodAction TargetObject="{Binding}"
                                                                                                MethodName="ClipTileRichTextBoxListItemCanvas_Loaded" />
                                                                        </i:EventTrigger>
                                                                    </i:Interaction.Triggers>
                                                                    <RichTextBox x:Name="RtbListBoxItemRichTextBox"
                                                                                 Canvas.Left="0"
                                                                                 Canvas.Top="0"
                                                                                 Background="{local:MpSettingBinding ThemeClipTileBackgroundColor, Converter={StaticResource StringToBrushConverter}}"
                                                                                 IsReadOnly="{Binding HostClipTileViewModel.IsRtbReadOnly}"
                                                                                 IsEnabled="True"                                                                             
                                                                                 AutoWordSelection="False"
                                                                                 IsInactiveSelectionHighlightEnabled="True"
                                                                                 IsDocumentEnabled="True"
                                                                                 Focusable="{Binding HostClipTileViewModel.IsEditingTile}"
                                                                                 Cursor="{Binding HostClipTileViewModel.ContentCursor}"
                                                                                 Width="{Binding RtbWidth}"
                                                                                 Height="{Binding RtbHeight}"
                                                                                 Padding="{Binding RtbMargin}"
                                                                                 IsUndoEnabled="True"
                                                                                 VerticalAlignment="Top"
                                                                                 HorizontalAlignment="Left"
                                                                                 ScrollViewer.HorizontalScrollBarVisibility="{Binding HostClipTileViewModel.RtbHorizontalScrollbarVisibility}"
                                                                                 ScrollViewer.VerticalScrollBarVisibility="{Binding HostClipTileViewModel.RtbVerticalScrollbarVisibility}"
                                                                                 BorderThickness="1">
                                                                        <RichTextBox.Document>
                                                                            <local:MpEventEnabledFlowDocument PageWidth="{Binding RtbPageWidth}"
                                                                                                              PageHeight="{Binding RtbPageHeight}"/>
                                                                        </RichTextBox.Document>
                                                                        <RichTextBox.Resources>
                                                                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                                                                                             Color="Blue" />
                                                                        </RichTextBox.Resources>
                                                                        <SpellCheck.IsEnabled>
                                                                            <Binding Path="SystemTrayViewModel.SettingsWindowViewModel.PreferencesViewModel.UseSpellCheck"
                                                                                     Source="{StaticResource MainWindowViewModel}" />
                                                                        </SpellCheck.IsEnabled>
                                                                    </RichTextBox>
                                                                    <local:MpClipBorder x:Name="RtbListBoxItemOverlayBorder"
                                                                                        DataContext="{Binding}"
                                                                                        Visibility="{Binding SubItemOverlayVisibility}"
                                                                                        Opacity="{Binding SubItemOverlayOpacity}"
                                                                                        Width="{Binding RtbOverlayWidth}"
                                                                                        Height="{Binding RtbOverlayHeight}"
                                                                                        Background="{Binding RtbListBoxItemBackgroundColor}"
                                                                                        BorderBrush="{Binding RtbListBoxItemBorderBrush}"
                                                                                        CornerRadius="5">                                                                    
                                                                        <i:Interaction.Triggers>
                                                                            <i:EventTrigger EventName="Loaded">
                                                                                <i:CallMethodAction TargetObject="{Binding}"
                                                                                                    MethodName="RtbListBoxItemOverlayBorder_Loaded" />
                                                                            </i:EventTrigger>
                                                                        </i:Interaction.Triggers>
                                                                        <Grid x:Name="RtbListItemOverlayBorderGrid"
                                                                              Width="{Binding RtbOverlayWidth}"
                                                                              Height="{Binding RtbOverlayHeight}">
                                                                                <!-- Rtb ListBoxItem Clip Title -->
                                                                                <TextBlock x:Name="RtbListBoxItemTitleTextBlock"
                                                                                           Grid.Column="0"
                                                                                           Opacity="1"
                                                                                           Margin="0,0,7,0"
                                                                                           TextAlignment="Right"
                                                                                           VerticalAlignment="Top"
                                                                                           HorizontalAlignment="Right"
                                                                                           Cursor="IBeam"
                                                                                           ToolTip="{Binding DetailText}"
                                                                                           Text="{Binding CopyItemTitle}"
                                                                                           FontSize="{Binding RtbListBoxItemTitleFontSize}"
                                                                                           Foreground="{Binding RtbListBoxItemTitleTextBlockTextColor}"
                                                                                           FontWeight="Bold"
                                                                                           Background="Transparent"
                                                                                           Visibility="{Binding RtbListBoxItemTitleTextBlockVisibility}">
                                                                                <!--<TextBlock.Effect>
                                                                                    <DropShadowEffect ShadowDepth="2"
                                                                                                      Direction="300"
                                                                                                      Color="Black"
                                                                                                      Opacity="1.0"
                                                                                                      BlurRadius="3" />
                                                                                </TextBlock.Effect>-->
                                                                                </TextBlock>
                                                                                <TextBox x:Name="RtbListBoxItemTitleTextBox"
                                                                                         Grid.Column="0"
                                                                                         Opacity="1"
                                                                                         Margin="0,0,7,0"
                                                                                         TextAlignment="Right"
                                                                                         VerticalAlignment="Top"
                                                                                         HorizontalAlignment="Right"
                                                                                         Background="White"
                                                                                         Foreground="Black"
                                                                                         FontSize="{Binding RtbListBoxItemTitleFontSize}"
                                                                                         IsReadOnly="False"
                                                                                         Visibility="{Binding RtbListBoxItemTitleTextBoxVisibility}"
                                                                                         Text="{Binding CopyItemTitle, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, UpdateSourceTrigger=LostFocus}" />
                                                                                <Viewbox Width="{Binding DragButtonSize}"
                                                                                     Height="{Binding DragButtonSize}"
                                                                                     HorizontalAlignment="Left"
                                                                                     VerticalAlignment="Top"
                                                                                     Margin="5,14,0,0">
                                                                                    <Button x:Name="RtbListBoxItemOverlayBorderGridDragButton"
                                                                                        Grid.Column="0"
                                                                                        BorderThickness="0"
                                                                                        Cursor="SizeAll"
                                                                                        Margin="0,0,0,0"                                                                                
                                                                                        Background="Transparent"
                                                                                        VerticalAlignment="Top"
                                                                                        VerticalContentAlignment="Top"
                                                                                        HorizontalAlignment="Left"
                                                                                        HorizontalContentAlignment="Left"
                                                                                        Template="{StaticResource SearchButtonControlTemplate}">
                                                                                    <Image Source="/Resources/Images/burger.png"
                                                                                           Stretch="Fill"
                                                                                           HorizontalAlignment="Center"
                                                                                           VerticalAlignment="Center" />
                                                                                </Button>
                                                                                </Viewbox>                                                                            
                                                                            <TextBlock x:Name="RtbListBoxItemShortcutKeyTextBlock"
                                                                                       Grid.Column="2"
                                                                                       FontSize="10"
                                                                                       HorizontalAlignment="Right"
                                                                                       VerticalAlignment="Bottom"
                                                                                       Margin="0"
                                                                                       Background="White"
                                                                                       Foreground="Black"
                                                                                       Text="{Binding ShortcutKeyString}" />
                                                                        </Grid>
                                                                        <!--<Border.Style>
                                                                                <Style x:Name="ClipTileRichTextBoxListItemOverlayBorderStyle"                                                                                    
                                                                                       TargetType="{x:Type Border}">
                                                                                    <Setter Property="Background"
                                                                                            Value="{Binding Path=DataContext.TitleBackgroundColor,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Border}}}" />
                                                                                    <Setter Property="BorderBrush">
                                                                                        <Setter.Value>
                                                                                            <DrawingBrush Viewport="0,0,8,8"
                                                                                                          ViewportUnits="Absolute"
                                                                                                          TileMode="Tile">
                                                                                                <DrawingBrush.Drawing>
                                                                                                    <DrawingGroup>
                                                                                                        <GeometryDrawing Brush="{Binding Path=DataContext.TileBorderBrush, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Border}}}">
                                                                                                            <GeometryDrawing.Geometry>
                                                                                                                <GeometryGroup>
                                                                                                                    <RectangleGeometry Rect="0,0,50,50" />
                                                                                                                    <RectangleGeometry Rect="50,50,50,50" />
                                                                                                                </GeometryGroup>
                                                                                                            </GeometryDrawing.Geometry>
                                                                                                        </GeometryDrawing>
                                                                                                    </DrawingGroup>
                                                                                                </DrawingBrush.Drawing>
                                                                                            </DrawingBrush>
                                                                                        </Setter.Value>
                                                                                    </Setter>
                                                                                </Style>
                                                                            </Border.Style>-->
                                                                    </local:MpClipBorder>
                                                                    <!--<Path x:Name="RtbListBoxItemOverlayPath"
                                                                          DataContext="{Binding ClipTileRichTextBoxOverlayViewModel}"
                                                                          Visibility="Collapsed"
                                                                          Stroke="{Binding OverlayBorderBrush}"
                                                                          StrokeThickness="3"
                                                                          Fill="{Binding OverlayBackgroundBrush}"
                                                                          Opacity="1">
                                                                        <i:Interaction.Triggers>
                                                                            <i:EventTrigger EventName="Loaded">
                                                                                <i:CallMethodAction TargetObject="{Binding}"
                                                                                                    MethodName="RichTextBoxPathOverlayPath_Loaded" />
                                                                            </i:EventTrigger>
                                                                        </i:Interaction.Triggers>
                                                                        <Path.Data>
                                                                            <PathGeometry x:Name="ClipTileRichTextBoxOverlayPathGeometry">
                                                                                <PathGeometry.Figures>
                                                                                    <PathFigure StartPoint="{Binding StartPoint}">
                                                                                        <PathFigure.Segments>
                                                                                            <PathSegmentCollection>
                                                                                                <PolyLineSegment Points="{Binding Points, Converter={StaticResource PointCollectionConverter}}" />
                                                                                            </PathSegmentCollection>
                                                                                        </PathFigure.Segments>
                                                                                    </PathFigure>
                                                                                </PathGeometry.Figures>
                                                                            </PathGeometry>
                                                                        </Path.Data>
                                                                    </Path>-->
                                                            </Canvas>
                                                        </AdornerDecorator>
                                                        </DataTemplate>
                                                    </ListBox.ItemTemplate>
                                                </ListBox>                                                
                                                <Border x:Name="ClipTileEditTemplateToolbar"
                                                        Visibility="{Binding EditTemplateToolbarVisibility}"
                                                        Height="{Binding EditTemplateToolbarHeight}"
                                                        CornerRadius="10,0,0,10"
                                                        BorderThickness="0"
                                                        Background="LightBlue">
                                                    <Grid DataContext="{Binding EditTemplateToolbarViewModel}">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="Loaded">
                                                                <i:CallMethodAction TargetObject="{Binding}"
                                                                                    MethodName="EditTemplateToolbarBorderGrid_Loaded" />
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="0.5*" />
                                                            <ColumnDefinition Width="3*" />
                                                            <ColumnDefinition Width="1.2*" />
                                                        </Grid.ColumnDefinitions>
                                                        <Button x:Name="TemplateColorButton"
                                                                Grid.Column="0"
                                                                Background="{Binding SelectedTemplateHyperlinkViewModel.TemplateBrush, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                                                                Width="20"
                                                                Height="20"
                                                                VerticalAlignment="Center"
                                                                Margin="10,0,0,0"
                                                                BorderBrush="Black"
                                                                BorderThickness="1" />
                                                        <StackPanel Orientation="Horizontal"
                                                                    Grid.Column="1">
                                                            <TextBox x:Name="TemplateNameEditorTextBox"
                                                                     Foreground="Black"
                                                                     HorizontalAlignment="Left"
                                                                     VerticalAlignment="Center"
                                                                     VerticalContentAlignment="Top"
                                                                     BorderBrush="{Binding SelectedTemplateNameTextBoxBorderBrush}"
                                                                     BorderThickness="2"
                                                                     Text="{Binding SelectedTemplateHyperlinkViewModel.TemplateName, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                                                                     FontSize="14"
                                                                     Height="25"
                                                                     MinWidth="200"
                                                                     IsReadOnly="False"
                                                                     Margin="0,0,0,0"
                                                                     Padding="0,0,0,0" />
                                                            <TextBlock x:Name="TemplateNameValidationTextBlock"
                                                                       Text="{Binding ValidationText}"
                                                                       Visibility="{Binding ValidationVisibility}"
                                                                       Foreground="Red"
                                                                       FontStyle="Oblique"
                                                                       HorizontalAlignment="Right"
                                                                       VerticalAlignment="Stretch"
                                                                       TextWrapping="Wrap"
                                                                       FontSize="12"
                                                                       Padding="0,0,0,0"
                                                                       Margin="5,0,0,0"
                                                                       Width="300" />
                                                        </StackPanel>
                                                        <StackPanel Orientation="Horizontal"
                                                                    Grid.Column="2"
                                                                    HorizontalAlignment="Center"
                                                                    Margin="0,0,0,0">
                                                            <Button x:Name="CancelButton"
                                                                    Margin="10,7,10,7"
                                                                    Padding="5,0,5,0"
                                                                    FontSize="14"
                                                                    Content="CANCEL"
                                                                    IsCancel="True"
                                                                    HorizontalAlignment="Stretch"
                                                                    Command="{Binding CancelCommand}" />
                                                            <Button x:Name="OkButton"
                                                                    Margin="0,7,10,7"
                                                                    Padding="5,0,5,0"
                                                                    FontSize="14"
                                                                    Content="DONE"
                                                                    HorizontalAlignment="Stretch"
                                                                    Command="{Binding OkCommand}"
                                                                    IsDefault="True" />
                                                        </StackPanel>
                                                    </Grid>
                                                </Border>
                                                <Border x:Name="ClipTilePasteTemplateToolbar"
                                                        Height="{Binding PasteTemplateToolbarHeight}"
                                                        CornerRadius="5"
                                                        BorderThickness="0"
                                                        Background="LightBlue"
                                                        Visibility="{Binding PasteTemplateToolbarVisibility}">
                                                    <Grid x:Name="PasteTemplateToolbarGrid"
                                                          DataContext="{Binding PasteTemplateToolbarViewModel}">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="Loaded">
                                                                <i:CallMethodAction TargetObject="{Binding}"
                                                                                    MethodName="ClipTilePasteTemplateToolbarBorder_Loaded" />
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="2*" />
                                                            <ColumnDefinition Width="*" />
                                                            <ColumnDefinition Width="3*" />
                                                            <ColumnDefinition Width="0.7*" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>
                                                        <local:MpClipBorder x:Name="SelectedTemplateComboBoxBorder"
                                                                            Grid.Column="0"
                                                                            HorizontalAlignment="Center"
                                                                            Background="{Binding SelectedTemplateBrush}"
                                                                            CornerRadius="15"
                                                                            Margin="0,3,0,3">
                                                            <ComboBox x:Name="SelectedTemplateComboBox"
                                                                      FontSize="14"
                                                                      Background="Transparent"
                                                                      HorizontalContentAlignment="Left"
                                                                      VerticalContentAlignment="Center"
                                                                      SelectedItem="{Binding SelectedTemplate, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                                                                      ItemsSource="{Binding UniqueTemplateHyperlinkViewModelListByDocOrder}">
                                                                <ComboBox.ItemTemplate>
                                                                    <ItemContainerTemplate>
                                                                        <DockPanel>
                                                                            <Border Background="{Binding TemplateBrush}"
                                                                                    BorderBrush="Black"
                                                                                    DockPanel.Dock="Left"
                                                                                    Height="15"
                                                                                    Width="15"
                                                                                    BorderThickness="1"
                                                                                    CornerRadius="10" />
                                                                            <TextBlock DockPanel.Dock="Right"
                                                                                       Text="{Binding TemplateDisplayName}" />
                                                                        </DockPanel>
                                                                    </ItemContainerTemplate>
                                                                </ComboBox.ItemTemplate>
                                                            </ComboBox>
                                                        </local:MpClipBorder>
                                                        <Button x:Name="ClearAllTemplatesButton"
                                                                Grid.Column="1"
                                                                TabIndex="0"
                                                                Visibility="{Binding ClearAllTemplateToolbarButtonVisibility}"
                                                                Command="{Binding ClearAllTemplatesCommand}"
                                                                Margin="3,0,3,0"
                                                                Padding="0,0,0,0"
                                                                FontSize="12"
                                                                VerticalContentAlignment="Top"
                                                                VerticalAlignment="Center"
                                                                Content="CLEAR ALL" />
                                                        <local:MpClipBorder Grid.Column="2"
                                                                            CornerRadius="10"
                                                                            Background="White"
                                                                            BorderThickness="0.5"
                                                                            BorderBrush="DimGray"
                                                                            Margin="1"
                                                                            Padding="0"
                                                                            VerticalAlignment="Center"
                                                                            HorizontalAlignment="Stretch">
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*" />
                                                                    <ColumnDefinition Width="0.1*" />
                                                                </Grid.ColumnDefinitions>
                                                                <TextBox x:Name="SelectedTemplateTextBox"
                                                                         Grid.Column="0"
                                                                         TabIndex="1"
                                                                         BorderThickness="0"
                                                                         Text="{Binding SelectedTemplateText, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                                                                         FontStyle="{Binding SelectedTemplateTextBoxFontStyle}"
                                                                         Foreground="{Binding SelectedTemplateTextBrush}"
                                                                         FontSize="16"
                                                                         Height="24"
                                                                         Width="240"
                                                                         Padding="0,0,0,0"
                                                                         Margin="5,0,0,0"
                                                                         VerticalAlignment="Top"
                                                                         HorizontalAlignment="Left"
                                                                         VerticalContentAlignment="Top" />
                                                                <Button x:Name="ClearCurrentTemplateButton"
                                                                        Grid.Column="1"
                                                                        Visibility="{Binding ClearSelectedTemplateTextboxButtonVisibility}"
                                                                        Command="{Binding ClearCurrentTemplatesCommand}"
                                                                        Background="Transparent"
                                                                        BorderThickness="0"
                                                                        Width="15"
                                                                        Height="15">
                                                                    <Image x:Name="ClearCurrentTemplateButtonImage"
                                                                           Source="/Resources/Images/close1.png" />
                                                                </Button>
                                                            </Grid>
                                                        </local:MpClipBorder>
                                                        <StackPanel Orientation="Horizontal"
                                                                    Grid.Column="3"
                                                                    Visibility="{Binding PasteTemplateNavigationButtonStackVisibility}"
                                                                    HorizontalAlignment="Center"
                                                                    Margin="8,0,0,0">
                                                            <Button x:Name="PreviousTemplateButton"
                                                                    TabIndex="2"
                                                                    Command="{Binding PreviousTemplateTokenCommand}"
                                                                    Width="20"
                                                                    Height="20"
                                                                    Margin="0"
                                                                    Padding="5">
                                                                <Image Source="/Resources/Images/back_black.png" />
                                                            </Button>
                                                            <Button x:Name="NextTemplateButton"
                                                                    TabIndex="3"
                                                                    Command="{Binding NextTemplateTokenCommand}"
                                                                    Width="20"
                                                                    Height="20"
                                                                    Margin="1"
                                                                    Padding="5">
                                                                <Image Source="/Resources/Images/forward_black.png" />
                                                            </Button>
                                                        </StackPanel>
                                                        <Button x:Name="PasteTemplateButton"
                                                                Grid.Column="4"
                                                                TabIndex="4"
                                                                IsEnabled="{Binding IsTemplateReadyToPaste}"
                                                                Command="{Binding PasteTemplateCommand}"
                                                                Margin="15,0,15,0"
                                                                Padding="0,0,0,0"
                                                                FontSize="12"
                                                                VerticalContentAlignment="Top"
                                                                VerticalAlignment="Center"
                                                                Content="PASTE" />
                                                    </Grid>
                                                </Border>
                                            </Canvas>
                                            <!-- Image Content-->
                                            <Grid Margin="0"
                                                  Background="Transparent"
                                                  Height="{Binding TileContentHeight}"
                                                  Width="{Binding TileContentWidth}"
                                                  Visibility="{Binding ImgVisibility}"
                                                  Focusable="{Binding IsSelected}"
                                                  IsEnabled="{Binding IsSelected}">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Loaded">
                                                        <i:CallMethodAction TargetObject="{Binding}"
                                                                            MethodName="ClipTileImageCanvas_Loaded" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <Viewbox x:Name="ClipTileImageItemsControlViewBox"
                                                         Height="{Binding TileContentHeight}"
                                                         Width="{Binding TileContentWidth}">
                                                    <ItemsControl x:Name="ClipTileImageDetectedObjectItemscontrol"
                                                                  Background="{Binding CopyItemBmpImageBrush}"
                                                                  DataContext="{Binding DetectedImageObjectCollectionViewModel}"
                                                                  Width="{Binding CopyItemBmpWidth}"
                                                                  Height="{Binding CopyItemBmpHeight}"
                                                                  ItemsSource="{Binding}">
                                                        <ItemsControl.Resources>
                                                            <DataTemplate DataType="{x:Type local:MpDetectedImageObjectViewModel}">
                                                                <Border Width="{Binding Width}"
                                                                        Height="{Binding Height}"
                                                                        BorderThickness="3"
                                                                        BorderBrush="{Binding BorderBrush}"
                                                                        Background="Transparent">
                                                                    <Border.Resources>
                                                                        <local:MpBindingProxy x:Key="DetectedImageObjectProxy"
                                                                                              Data="{Binding}" />
                                                                    </Border.Resources>
                                                                    <!--<Border.Visibility>
                                                                        <Binding Path="Data.TileDetectedImageItemsVisibility"
                                                                                 Source="{StaticResource ClipTileProxy}" />
                                                                    </Border.Visibility>-->
                                                                    <Border.RenderTransform>
                                                                        <TranslateTransform X="{Binding Data.X, Source={StaticResource DetectedImageObjectProxy}}"
                                                                                            Y="{Binding Data.Y, Source={StaticResource DetectedImageObjectProxy}}" />
                                                                    </Border.RenderTransform>
                                                                    <i:Interaction.Triggers>
                                                                        <i:EventTrigger EventName="Loaded">
                                                                            <i:CallMethodAction TargetObject="{Binding}"
                                                                                                MethodName="ClipTileImageDetectedObjectCanvas_Loaded" />
                                                                        </i:EventTrigger>
                                                                    </i:Interaction.Triggers>
                                                                    <TextBox HorizontalAlignment="Center"
                                                                             VerticalAlignment="Center"
                                                                             HorizontalContentAlignment="Center"
                                                                             VerticalContentAlignment="Center"
                                                                             Text="{Binding ObjectTypeName, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                                                                             FontSize="{Binding FontSize}"
                                                                             IsReadOnly="{Binding IsNameReadOnly}"
                                                                             Background="{StaticResource ClipTileDetectedObjectTextBoxBackgroundBrush}"
                                                                             Foreground="White" />
                                                                </Border>
                                                            </DataTemplate>
                                                        </ItemsControl.Resources>
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="Loaded">
                                                                <i:CallMethodAction TargetObject="{Binding}"
                                                                                    MethodName="ClipTileImageDetectedObjectItemscontrol_Loaded" />
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                        <ItemsControl.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <Canvas x:Name="ClipTileImageDetectedObjectsCanvas"
                                                                        Width="{Binding Data.DetectedImageObjectCollectionViewModel.CopyItemBmpWidth, Source={StaticResource ClipTileProxy}}"
                                                                        Height="{Binding Data.DetectedImageObjectCollectionViewModel.CopyItemBmpHeight, Source={StaticResource ClipTileProxy}}"
                                                                        HorizontalAlignment="Center"
                                                                        IsItemsHost="True"
                                                                        VerticalAlignment="Center" />
                                                            </ItemsPanelTemplate>
                                                        </ItemsControl.ItemsPanel>
                                                    </ItemsControl>
                                                </Viewbox>
                                            </Grid>
                                            <!--File List Content -->
                                            <ListBox x:Name="ClipTileFileListBox"
                                                     Width="{Binding TileBorderWidth}"
                                                     Height="{Binding TileContentHeight}"
                                                     ItemsSource="{Binding FileListViewModels}"
                                                     Visibility="{Binding FileListVisibility}"
                                                     IsEnabled="{Binding IsSelected, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                                                     BorderThickness="0"
                                                     Focusable="False">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Loaded">
                                                        <i:CallMethodAction TargetObject="{Binding}"
                                                                            MethodName="ClipTileFileListBox_Loaded" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Border Height="22"
                                                                BorderThickness="0">
                                                            <StackPanel VerticalAlignment="Center"
                                                                        HorizontalAlignment="Left"
                                                                        ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                                                        ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                                                        Orientation="Horizontal">
                                                                <Image Source="{Binding Icon, Converter={StaticResource ImageSourceToBitmapSourceConverter}}"
                                                                       Height="22"
                                                                       Stretch="Fill" />
                                                                <TextBlock x:Name="FileListItemTextBlock"
                                                                           Margin="3,0,0,0"
                                                                           VerticalAlignment="Center"
                                                                           HorizontalAlignment="Left"
                                                                           ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                                                           ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                                                           FontSize="16"
                                                                           Foreground="Black"
                                                                           Background="Transparent">
                                                                    <TextBlock.ToolTip>
                                                                        <ToolTip>
                                                                            <TextBlock Text="{Binding ItemPath}" />
                                                                        </ToolTip>
                                                                    </TextBlock.ToolTip>
                                                                <i:Interaction.Triggers>
                                                                        <i:EventTrigger EventName="Loaded">
                                                                            <i:CallMethodAction TargetObject="{Binding}"
                                                                                                MethodName="FileListItemTextBlock_Loaded" />
                                                                        </i:EventTrigger>
                                                                    </i:Interaction.Triggers>
                                                            </TextBlock>
                                                            </StackPanel>
                                                        </Border>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                            </ListBox>
                                        </Canvas>
                                        <!-- Tile Detail Grid -->
                                        <Grid Grid.Row="2"
                                              Visibility="{Binding TileDetailGridVisibility}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Loaded">
                                                    <i:CallMethodAction TargetObject="{Binding}"
                                                                        MethodName="ClipTileDetailGrid_Loaded" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            <!-- Clip Title Detail TextBlock -->
                                            <TextBlock x:Name="ClipTileTitleDetailTextBlock"
                                                       Background="Transparent"
                                                       Foreground="{Binding DetailTextColor}"
                                                       FontSize="10"
                                                       HorizontalAlignment="Center"
                                                       Text="{Binding DetailText}" />
                                            <TextBlock x:Name="ClipTileShortcutKeyTextBlock"
                                                       DockPanel.Dock="Right"
                                                       FontSize="10"
                                                       HorizontalAlignment="Right"
                                                       Margin="0,0,5,0"
                                                       Background="Transparent"
                                                       Foreground="{Binding DetailTextColor}"
                                                       Text="{Binding ShortcutKeyString}" />
                                        </Grid>
                                    </Grid>
                                    <Grid x:Name="MenuOverlayGrid"
                                          Visibility="{Binding MenuOverlayVisibility}"
                                          Background="#FFFFFF"
                                          Opacity="0.50">
                                    </Grid>
                                    <Viewbox HorizontalAlignment="Center"
                                             VerticalAlignment="Center"
                                             Visibility="{Binding LoadingSpinnerVisibility}"
                                             Width="{Binding LoadingSpinnerSize}"
                                             Height="{Binding LoadingSpinnerSize}">
                                        <spinners:ucSpinnerDotCircle HorizontalAlignment="Center"
                                                                     VerticalAlignment="Center" />
                                    </Viewbox>
                                    <Grid x:Name="TrialExpiredOverlayGrid"
                                          Background="Gray"
                                          Opacity="0.5"
                                          Visibility="{Binding TrialOverlayVisibility}">
                                        <Viewbox HorizontalAlignment="Center"
                                                 VerticalAlignment="Center"
                                                 Width="{Binding LoadingSpinnerSize}"
                                                 Height="{Binding LoadingSpinnerSize}">
                                            <Image Source="/Resources/Images/lock.png"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center" />
                                        </Viewbox>
                                    </Grid>
                                </Grid>
                            </local:MpClipBorder>
                        </DataTemplate>
                    </local:MpMultiSelectListView.ItemTemplate>
                </local:MpMultiSelectListView>
                <TextBlock x:Name="EmptyListTextBlock"
                           Text="This list has no items"
                           Focusable="True"
                           Visibility="Collapsed"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Margin="0,0,0,15"
                           Foreground="LightGray"
                           FontStyle="Oblique"
                           FontSize="34" />
            </Grid>
        </Grid>
        <!--3rd row row for tray -->
    </Grid>
</Window>
