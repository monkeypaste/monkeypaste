<Window x:Class="MpWpfApp.MpMainWindow"
        x:Name="MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2f008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        xmlns:local="clr-namespace:MpWpfApp"
        Title="MpMainWindow"
        WindowStyle="None"        
        Top="10000"
        ShowInTaskbar="false"
        ResizeMode="NoResize"
        Background="Transparent"
        Height="350"
        Width="1680">
    <Window.DataContext>
        <local:MpMainWindowViewModel />
    </Window.DataContext>
    <Window.Resources>
        <s:Int32 x:Key="Files">1</s:Int32>
        <s:Int32 x:Key="Csv">2</s:Int32>
        <s:Int32 x:Key="Zip">3</s:Int32>
        <s:Boolean x:Key="True">True</s:Boolean>
        <s:Boolean x:Key="False">False</s:Boolean>
        <local:MpIntToStringConverter x:Key="IntToStringConverter" />
        <local:MpBoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <local:MpSolidColorBrushToBrushConverter x:Key="SolidColorBrushToBrushConverter" />
        <local:MpImageSourceToBitmapSourceConverter x:Key="ImageSourceToBitmapSourceConverter" />
        <!--ScrollBars-->
        <Style x:Key="ScrollBarTrackThumb"
               TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch"
                                       VerticalAlignment="Stretch"
                                       Width="Auto"
                                       Height="Auto"
                                       Fill="Transparent" />
                            <Border x:Name="CornerScrollBarRectangle"
                                    CornerRadius="5"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    Width="Auto"
                                    Height="Auto"
                                    Margin="0,1,0,1"
                                    Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag"
                                     Value="Horizontal">
                                <Setter TargetName="CornerScrollBarRectangle"
                                        Property="Width"
                                        Value="Auto" />
                                <Setter TargetName="CornerScrollBarRectangle"
                                        Property="Height"
                                        Value="6" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled"
                    Value="false" />
            <Setter Property="Foreground"
                    Value="#ADABAB" />
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="Width"
                    Value="7" />
            <Setter Property="VerticalAlignment"
                    Value="Bottom" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot"
                              Width="7"
                              Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>
                            <Track x:Name="PART_Track"
                                   Grid.Row="0"
                                   IsDirectionReversed="true"
                                   Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb"
                                           Background="{TemplateBinding Foreground}"
                                           Style="{DynamicResource ScrollBarTrackThumb}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp"
                                                  Command="ScrollBar.PageDownCommand"
                                                  Opacity="0"
                                                  Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown"
                                                  Command="ScrollBar.PageUpCommand"
                                                  Opacity="0"
                                                  Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb"
                                     Property="IsMouseOver"
                                     Value="true">
                                <Setter Value="{DynamicResource ButtonSelectBrush}"
                                        TargetName="Thumb"
                                        Property="Background" />
                            </Trigger>
                            <Trigger SourceName="Thumb"
                                     Property="IsDragging"
                                     Value="true">
                                <Setter Value="{DynamicResource DarkBrush}"
                                        TargetName="Thumb"
                                        Property="Background" />
                            </Trigger>

                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter TargetName="Thumb"
                                        Property="Visibility"
                                        Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation"
                                     Value="Horizontal">
                                <Setter TargetName="GridRoot"
                                        Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track"
                                        Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width"
                                        Value="Auto" />
                                <Setter Property="Height"
                                        Value="8" />
                                <Setter TargetName="Thumb"
                                        Property="Tag"
                                        Value="Horizontal" />
                                <Setter TargetName="PageDown"
                                        Property="Command"
                                        Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp"
                                        Property="Command"
                                        Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Button Styles -->
        <Style x:Key="Transparent_Button"
               TargetType="{x:Type Button}">
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border"
                                BorderThickness="0"
                                BorderBrush="Black"
                                Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="Background"
                                        Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Color Palletes -->
        <SolidColorBrush x:Key="AppColorDark">DarkViolet</SolidColorBrush>
        <SolidColorBrush x:Key="AppColorLight">MediumPurple</SolidColorBrush>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:CallMethodAction MethodName="MainWindow_Loaded"
                                TargetObject="{Binding}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <!-- Main Window Grid -->
    <Grid x:Name="MainWindowGrid"
          Background="Green">
        <Grid.RowDefinitions>
            <RowDefinition Height="{Binding TitleMenuHeight}" />
            <RowDefinition Height="{Binding FilterMenuHeight}"/>
            <RowDefinition Height="{Binding ClipTrayHeight}"/>
        </Grid.RowDefinitions>
        <tb:TaskbarIcon x:Name="SystemTrayTaskbarIcon"
                        DataContext="{Binding SystemTrayViewModel}" 
                        IconSource="/MpWpfApp;component/Resources/monkey (2).ico"
                        ToolTipText="{Binding SystemTrayIconToolTipText}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Loaded">
                    <i:CallMethodAction MethodName="SystemTrayTaskbarIcon_Loaded"
                                        TargetObject="{Binding}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>            
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Settings" 
                              Command="{Binding ShowSettingsWindowCommand}"/>
                    <MenuItem Header="Pause" />
                    <MenuItem Header="Help" />
                    <MenuItem Header="Exit" 
                              Command="{Binding ExitApplicationCommand}"/>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
            <tb:TaskbarIcon.TrayToolTip>
                <Border Background="{StaticResource AppColorDark}"
                        BorderBrush="{StaticResource AppColorLight}"
                        BorderThickness="2"
                        Padding="10"
                        CornerRadius="4"
                        Opacity="0.8">
                    <StackPanel>
                        <TextBlock Text="Monkey Paste Info 1"
                                   Foreground="White"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                        <TextBlock Text="Monkey Paste Info 2"
                                   Foreground="White"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                        <TextBlock Text="Monkey Paste Info 3"
                                   Foreground="White"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                    </StackPanel>
                </Border>
            </tb:TaskbarIcon.TrayToolTip>
        </tb:TaskbarIcon>
        <!-- Main Menu -->
        <StackPanel Grid.Row="0"
                    Grid.Column="0"
                    Orientation="Horizontal"
                    Background="DarkGreen" />
        <!-- FilterMenu -->
        <Grid Grid.Row="1"
              Grid.Column="0"
              Focusable="True"
              Background="DarkViolet">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="7*" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>
            <!-- Sort Combobox -->
            <Grid Grid.Row="0"
                  Grid.Column="0"
                  DataContext="{Binding ClipTileSortViewModel}"
                  Margin="0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Loaded">
                        <i:CallMethodAction MethodName="ClipTileSort_Loaded"
                                            TargetObject="{Binding}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="4*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Label Grid.Column="0"
                       FontSize="19"
                       Foreground="White"
                       HorizontalAlignment="Right"
                       FontWeight="DemiBold"
                       VerticalContentAlignment="Center"
                       Padding="0,0,15,0">Sort By</Label>
                <local:MpClipBorder CornerRadius="15" 
                                    Margin="5"
                                    Grid.Column="1">
                    <ComboBox FontSize="16"
                              Background="Transparent"
                              HorizontalContentAlignment="Left"
                              VerticalContentAlignment="Center"
                              SelectedItem="{Binding SelectedSortType}"
                              ItemsSource="{Binding SortTypes}">
                        <ComboBox.ItemTemplate>
                            <ItemContainerTemplate>
                                <TextBlock Text="{Binding Header}" />
                            </ItemContainerTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </local:MpClipBorder>
                <Button Grid.Column="2"
                        Margin="0,0,0,0" 
                        Background="Transparent"
                        Style="{StaticResource Transparent_Button}"
                        BorderThickness="0"
                        Height="30"
                        Width="30"
                        Command="{Binding ToggleSortOrderCommand}">
                    <Grid>
                        <Image Source="/MpWpfApp;component/Resources/asc_white.png"
                               Visibility="{Binding AscSortOrderButtonImageVisibility}"
                               Stretch="Fill" />
                        <Image Source="/MpWpfApp;component/Resources/desc_white.png"
                               Visibility="{Binding DescSortOrderButtonImageVisibility}"
                               Stretch="Fill" />
                    </Grid>
                    
                </Button>
            </Grid>
            <!-- Tag Tray -->
            <StackPanel Grid.Row="0"
                        Grid.Column="1"
                        DataContext="{Binding TagTrayViewModel}"
                        Focusable="False"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Loaded">
                        <i:CallMethodAction MethodName="TagTray_Loaded"
                                            TargetObject="{Binding}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListBox x:Name="TagTray"
                         Focusable="False"
                         Background="Transparent"
                         BorderBrush="Transparent"
                         dd:DragDrop.IsDragSource="True"
                         dd:DragDrop.IsDropTarget="True"
                         HorizontalAlignment="Center"
                         SelectionMode="Single"
                         ScrollViewer.VerticalScrollBarVisibility="Hidden"
                         ItemsSource="{Binding}">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="IsSelected"
                                    Value="{Binding IsSelected}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <ContentPresenter />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel IsItemsHost="True"
                                                    ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                                    Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <!-- Tag Tile Border -->
                            <local:MpClipBorder x:Name="TagTileBorder"
                                    CornerRadius="10"
                                    Margin="5,0,5,0"
                                    Padding="7,5,7,5"
                                    Focusable="True"
                                    VerticalAlignment="Center"
                                    local:MpFocusExtension.IsFocused="{Binding IsFocused, Mode=TwoWay, NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged}"
                                    Background="{Binding TagBorderBackgroundBrush}"
                                    BorderBrush="Transparent"
                                    BorderThickness="0"
                                    Height="{Binding TagHeight}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Loaded">
                                        <i:CallMethodAction TargetObject="{Binding}"
                                                            MethodName="TagTile_Loaded" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <local:MpClipBorder.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="Rename"
                                                  Command="{Binding RenameTagCommand}" />
                                        <MenuItem Header="Assign Hotkey"
                                                  InputGestureText="{Binding ShortcutKeyList}"
                                                  Command="{Binding AssignHotkeyCommand}" />
                                        <MenuItem Header="Change Color"
                                                  Command="{Binding ChangeTagColorCommand}" />
                                        <MenuItem Header="Delete"
                                                  Command="{Binding TagTrayViewModel.DeleteTagCommand}" />
                                    </ContextMenu>
                                </local:MpClipBorder.ContextMenu>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <!-- Tag Count Box-->
                                    <local:MpClipBorder CornerRadius="5"
                                                        Grid.Column="0"
                                                        Grid.Row="0"
                                                        MinWidth="20"
                                                        Margin="3,0,0,0"
                                                        Padding="5"
                                                        BorderThickness="0"
                                                        Background="{Binding TagColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}">
                                        <TextBlock Background="Transparent"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   Text="{Binding TagClipCount, Converter={StaticResource IntToStringConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}"
                                                   Foreground="{Binding TagCountTextColor}" />
                                    </local:MpClipBorder>
                                    <TextBlock x:Name="TagTextBlock"
                                               Grid.Column="1"
                                               Grid.Row="0"
                                               Margin="5,0,0,0"
                                               Background="Transparent"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Visibility="{Binding TextBlockVisibility}"
                                               FontSize="{Binding TagFontSize}"
                                               FontWeight="SemiBold"
                                               Foreground="{Binding TagTextColor}"
                                               Text="{Binding TagName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}">
                                    </TextBlock>
                                    <TextBox x:Name="TagTextBox"
                                             Grid.Row="0"
                                             Grid.Column="1"
                                             Margin="5,0,0,0"
                                             Background="White"
                                             Foreground="Black"
                                             IsReadOnly="False"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Center"
                                             local:MpFocusExtension.IsFocused="{Binding IsFocused}"
                                             local:MpTextBoxBehavior.SelectAllTextOnFocus="True"
                                             Visibility="{Binding TextBoxVisibility}"
                                             FontSize="{Binding TagFontSize}"
                                             Text="{Binding TagName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}" />
                                </Grid>
                            </local:MpClipBorder>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <!-- Add Tag Button -->
                <Button x:Name="AddTagButton" 
                        Height="30"
                        Width="30" 
                        BorderThickness="0"
                        Style="{StaticResource Transparent_Button}"
                        Background="Transparent"
                        Command="{Binding CreateTagCommand}">
                    <Image Stretch="Fill"
                           Source="/MpWpfApp;component/Resources/add4.png" />
                </Button>
            </StackPanel>
            <!-- Search Border -->
            <local:MpClipBorder x:Name="SearchTextBoxBorder" 
                                DataContext="{Binding SearchBoxViewModel}"
                                Grid.Row="0"
                                Grid.Column="2"
                                Margin="0"
                                BorderBrush="{Binding SearchTextBoxBorderBrush}"
                                BorderThickness="5"
                                Focusable="False"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Stretch"
                                Background="White"
                                CornerRadius="15">
                <local:MpClipBorder.Resources>
                    <local:MpBindingProxy x:Key="SearchTextProxy"
                                          Data="{Binding}" />
                </local:MpClipBorder.Resources>
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Loaded">
                        <i:CallMethodAction MethodName="SearchBoxBorder_Loaded" 
                                            TargetObject="{Binding}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <StackPanel Margin="5"
                            Orientation="Horizontal">
                    <Button Background="Transparent"
                            Style="{StaticResource Transparent_Button}"
                            BorderThickness="0">
                        <Image Source="pack://application:,,,/Resources/search.png"
                               Stretch="Fill" />
                    </Button>
                    <!-- Search TextBox-->
                    <TextBox x:Name="SearchTextBox"
                             Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}"
                             FontStyle="{Binding SearchTextBoxFontStyle}"
                             Foreground="{Binding SearchTextBoxTextBrush}"
                             local:MpFocusExtension.IsFocused="{Binding IsFocused, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}"
                             BorderThickness="0"
                             FontSize="18"
                             MinWidth="1000"
                             VerticalAlignment="Top"
                             HorizontalAlignment="Left"
                             VerticalContentAlignment="Top">
                    </TextBox>
                </StackPanel>
            </local:MpClipBorder>
        </Grid>
        <!--3rd row row for tray -->
        <Grid Grid.Row="2"
              Grid.Column="0"              
              Focusable="True"
              Background="MediumPurple">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding AppStateButtonGridWidth}" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <!-- Side bar AppState Buttons -->
            <Grid Grid.Row="0"
                  Grid.Column="0"
                  DataContext="{Binding AppModeViewModel}"
                  Background="Orange">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <ToggleButton Grid.Row="0"
                              Grid.Column="0"
                              Padding="0,5,0,5">
                    <TextBlock Text="Pause System"
                               HorizontalAlignment="Center"
                               TextWrapping="Wrap" />
                </ToggleButton>
                <ToggleButton Grid.Row="1"
                              Grid.Column="0"
                              IsChecked="{Binding IsAutoCopyMode}"
                              Padding="0,5,0,5">
                    <TextBlock Text="Auto Copy"
                               HorizontalAlignment="Center"
                               TextWrapping="Wrap" />
                </ToggleButton>
                <ToggleButton Grid.Row="2"
                              Grid.Column="0"
                              Padding="0,5,0,5">
                    <TextBlock Text="Auto Paste"
                               HorizontalAlignment="Center"
                               TextWrapping="Wrap" />
                </ToggleButton>
                <ToggleButton Grid.Row="3"
                              Grid.Column="0"
                              Padding="0,5,0,5"
                              IsChecked="{Binding IsInAppendMode}">
                    <TextBlock Text="Auto Append"
                               FontSize="11"
                               HorizontalAlignment="Center"
                               TextWrapping="Wrap" />
                </ToggleButton>
                <ToggleButton Grid.Row="4"
                              Grid.Column="0"
                              Padding="0,10,10,10">
                    <TextBlock Text="Smart Copy"
                               HorizontalAlignment="Center"
                               TextWrapping="Wrap" />
                </ToggleButton>
            </Grid>
            <!-- clip tile tray -->
            <Grid DataContext="{Binding ClipTrayViewModel}"                  
                    Grid.Row="0"
                    Grid.Column="1">
                <Grid.Resources>
                    <local:MpBindingProxy x:Key="ClipTrayProxy"
                                        Data="{Binding}" />
                </Grid.Resources>
                <local:MpMultiSelectListBox x:Name="ClipTray"
                                            ItemsSource="{Binding}"
                                            Visibility="{Binding ClipListVisibility}"
                                            local:MpFocusExtension.IsFocused="{Binding IsFocused, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}"
                                            AllowDrop="True"
                                            Margin="5,0,0,0"
                                            BorderThickness="0"
                                            VerticalAlignment="Stretch"
                                            Background="Transparent"
                                            SelectionMode="Extended"
                                            VirtualizingPanel.IsVirtualizing="True"
                                            VirtualizingPanel.ScrollUnit="Pixel"
                                            VirtualizingPanel.VirtualizationMode="Recycling"
                                            ScrollViewer.CanContentScroll="False"
                                            ScrollViewer.IsDeferredScrollingEnabled="False"
                                            ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                            ScrollViewer.VerticalScrollBarVisibility="Hidden">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Loaded">
                            <i:CallMethodAction MethodName="ClipTray_Loaded"
                                                TargetObject="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="IsSelected"
                                    Value="{Binding IsSelected}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <ContentPresenter />
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected"
                                                     Value="True">
                                                <Setter Property="BorderBrush"
                                                        Value="Transparent" />
                                                <Setter Property="Background"
                                                        Value="Transparent" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel IsItemsHost="True"
                                                    CanVerticallyScroll="False"
                                                    CanHorizontallyScroll="True"
                                                    VerticalAlignment="Stretch"
                                                    Orientation="Horizontal">
                            </VirtualizingStackPanel>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <!-- Clip Tile -->
                            <local:MpClipBorder BorderBrush="{Binding TileBorderBrush}"
                                                local:MpFocusExtension.IsFocused="{Binding IsFocused, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}"                                                
                                                Margin="{Binding TileMargin}"
                                                BorderThickness="{Binding TileBorderThickness}"
                                                Width="{Binding TileBorderSize}"
                                                Height="{Binding TileSize}"
                                                Visibility="{Binding TileVisibility}"
                                                Focusable="True"
                                                Background="White"
                                                ToolTipService.ShowDuration="1000"
                                                CornerRadius="10">
                                <local:MpClipBorder.ToolTip>
                                    <ToolTip>
                                        <TextBlock>Double Click or Press [Enter] to Paste</TextBlock>
                                    </ToolTip>
                                </local:MpClipBorder.ToolTip>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Loaded">
                                        <i:CallMethodAction TargetObject="{Binding}"
                                                            MethodName="ClipTile_Loaded" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Loaded">
                                        <i:CallMethodAction TargetObject="{Binding ClipTrayViewModel}"
                                                            MethodName="ClipTile_Loaded" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <local:MpClipBorder.Resources>
                                    <local:MpBindingProxy x:Key="ClipTileProxy"
                                                        Data="{Binding}" />
                                </local:MpClipBorder.Resources>
                                <local:MpClipBorder.ContextMenu>
                                    <ContextMenu x:Name="ClipTile_ContextMenu">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Opened">
                                                <i:CallMethodAction TargetObject="{Binding}"
                                                                    MethodName="ClipTile_ContextMenu_Opened" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <MenuItem Header="Bring to Front"
                                                  Command="{Binding Data.BringSelectedClipTilesToFrontCommand, Source={StaticResource ClipTrayProxy}}" />
                                        <MenuItem Header="Send to Back"
                                                  Command="{Binding Data.SendSelectedClipTilesToBackCommand, Source={StaticResource ClipTrayProxy}}" />
                                        <MenuItem Header="Assign Hotkey"
                                                  InputGestureText="{Binding ShortcutKeyList}"
                                                  Command="{Binding AssignHotkeyCommand}" />
                                        <MenuItem Header="Exclude Application"
                                                  Command="{Binding ExcludeApplicationCommand}" />
                                        <MenuItem Header="Export To">
                                            <MenuItem Header="File(s)..."
                                                      Command="{Binding Data.ExportSelectedClipTilesCommand,Source={StaticResource ClipTrayProxy}}"
                                                      CommandParameter="{StaticResource Files}" />
                                            <MenuItem Header="CSV"
                                                      Command="{Binding Data.ExportSelectedClipTilesCommand,Source={StaticResource ClipTrayProxy}}"
                                                      CommandParameter="{StaticResource Csv}" />
                                            <MenuItem Header="Zip"
                                                      Command="{Binding Data.ExportSelectedClipTilesCommand,Source={StaticResource ClipTrayProxy}}"
                                                      CommandParameter="{StaticResource Zip}" />
                                        </MenuItem>
                                        <MenuItem Header="Send as Email"
                                                  Command="{Binding ShareClipCommand}" />
                                        <MenuItem Header="Rename"
                                                  Command="{Binding Data.RenameClipCommand,Source={StaticResource ClipTrayProxy}}" />
                                        <MenuItem Header="Change Color"
                                                  Command="{Binding Data.ChangeSelectedClipsColorCommand, Source={StaticResource ClipTrayProxy}}" />
                                        <MenuItem Header="Delete"
                                                  Command="{Binding Data.DeleteSelectedClipsCommand,Source={StaticResource ClipTrayProxy}}" />
                                        <MenuItem Header="Say"
                                                  Command="{Binding Data.SpeakSelectedClipsCommand,Source={StaticResource ClipTrayProxy}}" />
                                        <MenuItem Header="Merge"
                                                  Command="{Binding Data.MergeSelectedClipsCommand,Source={StaticResource ClipTrayProxy}}" />
                                        <MenuItem Header="Search Web">
                                            <MenuItem Header="Google">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                                        <i:CallMethodAction MethodName="ContextMenuMouseLeftButtonUpOnSearchGoogle"
                                                                            TargetObject="{Binding Data, Source={StaticResource ClipTileProxy}}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </MenuItem>
                                            <MenuItem Header="Bing">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                                        <i:CallMethodAction MethodName="ContextMenuMouseLeftButtonUpOnSearchBing"
                                                                            TargetObject="{Binding Data, Source={StaticResource ClipTileProxy}}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </MenuItem>
                                            <MenuItem Header="DuckDuckGo">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                                        <i:CallMethodAction MethodName="ContextMenuMouseLeftButtonUpOnSearchDuckDuckGo"
                                                                            TargetObject="{Binding Data, Source={StaticResource ClipTileProxy}}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </MenuItem>
                                            <MenuItem Header="Yandex">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                                        <i:CallMethodAction MethodName="ContextMenuMouseLeftButtonUpOnSearchYandex"
                                                                            TargetObject="{Binding Data, Source={StaticResource ClipTileProxy}}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </MenuItem>
                                        </MenuItem>
                                        <MenuItem Header="Convert To"
                                                  ItemsSource="{Binding Data.ConvertClipTypes,Source={StaticResource ClipTileProxy}}">
                                            <MenuItem.ItemContainerStyle>
                                                <Style TargetType="{x:Type MenuItem}">
                                                    <Setter Property="Header"
                                                            Value="{Binding Header}" />
                                                    <Setter Property="Command"
                                                            Value="{Binding Command}" />
                                                    <Setter Property="CommandParameter"
                                                            Value="{Binding CommandParameter}" />
                                                    <Setter Property="IsCheckable"
                                                            Value="True" />
                                                    <Setter Property="IsChecked"
                                                            Value="{Binding IsChecked}" />
                                                </Style>
                                            </MenuItem.ItemContainerStyle>
                                        </MenuItem>
                                        <MenuItem Header="Pin To"
                                                  ItemsSource="{Binding Data.TagMenuItems,Source={StaticResource ClipTileProxy}}">
                                            <MenuItem.ItemContainerStyle>
                                                <Style TargetType="{x:Type MenuItem}">
                                                    <Setter Property="Header"
                                                            Value="{Binding Header}" />
                                                    <Setter Property="Command"
                                                            Value="{Binding Command}" />
                                                    <Setter Property="CommandParameter"
                                                            Value="{Binding CommandParameter}" />
                                                    <Setter Property="IsCheckable"
                                                            Value="True" />
                                                    <Setter Property="IsChecked"
                                                            Value="{Binding IsChecked}" />
                                                </Style>
                                            </MenuItem.ItemContainerStyle>
                                        </MenuItem>
                                    </ContextMenu>
                                </local:MpClipBorder.ContextMenu>
                                <!--<local:MpClipBorder.Effect>
                                    <DropShadowEffect Color="Black"
                                                      BlurRadius="10" />
                                </local:MpClipBorder.Effect>-->
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="{Binding TileTitleHeight}" />
                                        <RowDefinition Height="{Binding TileContentHeight}"/>
                                    </Grid.RowDefinitions>
                                    <!-- Tile Title StackPanel -->
                                    <Canvas Grid.Row="0"
                                            Grid.Column="0"
                                            VerticalAlignment="Top"
                                            HorizontalAlignment="Left">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Loaded">
                                                <i:CallMethodAction TargetObject="{Binding}"
                                                                    MethodName="ClipTileTitle_Loaded" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <Image x:Name="TitleSwirl"
                                               Canvas.Top="-1"
                                               Canvas.Left="-1"
                                               Stretch="Fill"
                                               Width="{Binding TileSize}"
                                               Height="{Binding TileTitleHeight}"
                                               Source="{Binding TitleSwirl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, Converter={StaticResource ImageSourceToBitmapSourceConverter}}" />
                                        <!-- Clip Title TextBlock -->
                                        <TextBlock x:Name="ClipTileTitleTextBlock"
                                                   Text="{Binding Title}"
                                                   Canvas.Top="-2"
                                                   Canvas.Left="5"
                                                   FontSize="24"
                                                   Foreground="White"
                                                   Background="Transparent"
                                                   Visibility="{Binding TileTitleTextBlockVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}">
                                            <!--<TextBlock.Effect>
                                                <DropShadowEffect ShadowDepth="2"
                                                                  Direction="330"
                                                                  Color="Black"
                                                                  Opacity="1.0"
                                                                  BlurRadius="7" />
                                            </TextBlock.Effect>-->
                                        </TextBlock>
                                        <!-- Clip Title TextBox -->
                                        <TextBox x:Name="ClipTileTitleTextBox"
                                                 Background="White"
                                                 Foreground="Black"
                                                 Canvas.Top="-2"
                                                 Canvas.Left="5"
                                                 FontSize="24"
                                                 Visibility="{Binding TileTitleTextBoxVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}"
                                                 local:MpFocusExtension.IsFocused="{Binding IsTitleTextBoxFocused, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}"
                                                 local:MpTextBoxBehavior.SelectAllTextOnFocus="True"
                                                 Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}" />
                                        <!-- Clip Title Detail TextBlock -->
                                        <TextBlock x:Name="ClipTileTitleDetailTextBlock"
                                                   Background="Transparent"
                                                   Foreground="{Binding DetailTextColor}"
                                                   FontSize="9"
                                                   Text="{Binding DetailText}" />
                                        <!-- Clip Title Icon Image -->
                                        <Button x:Name="ClipTileAppIconImageButton"
                                                Style="{StaticResource Transparent_Button}"
                                                Background="Transparent"
                                                BorderThickness="0">
                                            <Image x:Name="ClipTileAppIconImage"
                                                   Source="{Binding Icon, Converter={StaticResource ImageSourceToBitmapSourceConverter}}"
                                                   Stretch="Fill"
                                                   Width="{Binding TileTitleIconSize}"
                                                   Height="{Binding TileTitleIconSize}">
                                                <!--<Image.Effect>
                                                <DropShadowEffect Color="DimGray" />
                                            </Image.Effect>-->
                                            </Image>
                                        </Button>
                                    </Canvas>
                                    <!-- Content Container Canvas -->
                                    <Canvas x:Name="ClipTileContentCanvas"
                                            Grid.Row="1"
                                            Grid.Column="0">
                                        <!-- RichText Content -->
                                        <local:MpTokenizedRichTextBox x:Name="ClipTileRichTextBox"
                                                                      DocumentRtf="{Binding DocumentRtf, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}"
                                                                      SearchText="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}"
                                                                      MinWidth="{Binding TileBorderSize}"
                                                                      MinHeight="{Binding TileContentHeight}"
                                                                      Tokens="{Binding Tokens, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}"
                                                                      IsReadOnly="True"
                                                                      IsUndoEnabled="False"
                                                                      Visibility="{Binding RtbVisibility}"
                                                                      Background="White"
                                                                      VerticalAlignment="Top"
                                                                      HorizontalAlignment="Left"
                                                                      ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                                                      ScrollViewer.VerticalScrollBarVisibility="Visible"
                                                                      IsDocumentEnabled="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}"
                                                                      Focusable="False"
                                                                      Cursor="Arrow"
                                                                      BorderThickness="0"
                                                                      Padding="10,0,10,10">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Loaded">
                                                    <i:CallMethodAction TargetObject="{Binding}"
                                                                        MethodName="ClipTileRichTextBox_Loaded" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </local:MpTokenizedRichTextBox>
                                        <!-- Image Content-->
                                        <Grid Width="{Binding TileBorderSize}"
                                              Height="{Binding TileContentHeight}"
                                              Focusable="False"
                                              IsEnabled="False">
                                            <Image x:Name="ClipTileImage"
                                                   Focusable="False"
                                                   IsEnabled="False"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   Visibility="{Binding ImgVisibility}"
                                                   Source="{Binding Bmp}"
                                                   Stretch="Uniform">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="Loaded">
                                                        <i:CallMethodAction TargetObject="{Binding}"
                                                                            MethodName="ClipTileImage_Loaded" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </Image>
                                        </Grid>
                                        <!--File List Content -->
                                        <ListBox x:Name="ClipTileFileListBox"
                                                 Width="{Binding TileBorderSize}"
                                                 Height="{Binding TileContentHeight}"
                                                 ItemsSource="{Binding FileListViewModels}"
                                                 Visibility="{Binding FileListVisibility}"
                                                 IsEnabled="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}"
                                                 BorderThickness="0"
                                                 Focusable="False">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="Loaded">
                                                    <i:CallMethodAction TargetObject="{Binding}"
                                                                        MethodName="ClipTileFileListBox_Loaded" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            <ListBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Border Height="22"
                                                            BorderThickness="0">
                                                        <StackPanel VerticalAlignment="Center"
                                                                    HorizontalAlignment="Left" 
                                                                    ScrollViewer.HorizontalScrollBarVisibility="Hidden" 
                                                                    ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                                                    Orientation="Horizontal">
                                                            <Image Source="{Binding Icon, Converter={StaticResource ImageSourceToBitmapSourceConverter}}"
                                                                   Height="22"
                                                                   Stretch="Fill">
                                                            </Image>
                                                            <TextBlock x:Name="FileListItemTextBlock"
                                                                       Margin="3,0,0,0"
                                                                       VerticalAlignment="Center"
                                                                       HorizontalAlignment="Left"
                                                                       ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                                                       ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                                                       FontSize="16"
                                                                       Foreground="Black"
                                                                       Background="Transparent">
                                                                <TextBlock.ToolTip>
                                                                    <ToolTip>
                                                                        <TextBlock Text="{Binding ItemPath}" />
                                                                    </ToolTip>
                                                                </TextBlock.ToolTip>
                                                                <i:Interaction.Triggers>
                                                                        <i:EventTrigger EventName="Loaded">
                                                                            <i:CallMethodAction TargetObject="{Binding}"
                                                                                                MethodName="FileListItemTextBlock_Loaded" />
                                                                        </i:EventTrigger>
                                                                    </i:Interaction.Triggers>
                                                            </TextBlock>
                                                        </StackPanel>
                                                    </Border>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                        </ListBox>
                                    </Canvas>
                                </Grid>
                            </local:MpClipBorder>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </local:MpMultiSelectListBox>
                <TextBlock x:Name="EmptyListTextBlock"
                           Grid.Row="0"
                           Grid.Column="1"
                           Text="This list has no items"
                           Focusable="True"
                           Visibility="{Binding EmptyListMessageVisibility}"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Foreground="LightGray"
                           Margin="545,91,683,132"
                           FontStyle="Oblique"
                           FontSize="34" />
            </Grid>            
        </Grid>
    </Grid>
</Window>
