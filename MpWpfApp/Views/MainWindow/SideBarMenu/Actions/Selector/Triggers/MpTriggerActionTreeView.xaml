<local:MpUserControl x:Class="MpWpfApp.MpTriggerActionTreeView"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
                     xmlns:sys="clr-namespace:System;assembly=mscorlib"
                     xmlns:local="clr-namespace:MpWpfApp"
                     x:TypeArguments="local:MpActionCollectionViewModel"
                     mc:Ignorable="d"
                     d:DataContext="{d:DesignInstance Type=local:MpActionCollectionViewModel,
                                                      IsDesignTimeCreatable=False}"
                     d:DesignHeight="450"
                     d:DesignWidth="800">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="0" />
        </Grid.ColumnDefinitions>
        <Grid.Resources>
            <!--  Trigger  -->
            <HierarchicalDataTemplate x:Key="TriggerTemplate"
                                      DataType="{x:Type local:MpTriggerActionViewModelBase}"
                                      ItemsSource="{Binding Items}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.2*" />
                        <ColumnDefinition Width="0.2*" />
                        <ColumnDefinition Width="100*" />
                        <ColumnDefinition Width="0.4*" />
                    </Grid.ColumnDefinitions>
                    <ToggleButton x:Name="ToggleEnableButton"
                                  Grid.Column="0"
                                  BorderThickness="0"
                                  Background="Transparent"
                                  Template="{StaticResource FlatToggleButtonControlTemplate}"
                                  IsChecked="{Binding IsEnabled,
                                                      Mode=TwoWay}">
                        <StackPanel>
                            <Ellipse Width="20"
                                     Height="20"
                                     ToolTip="Click To Enable"
                                     Visibility="{Binding IsEnabled,
                                                          Converter={StaticResource BoolToVisibilityFlipConverter}}"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Fill="Red" />
                            <Ellipse Width="20"
                                     Height="20"
                                     ToolTip="Click To Disable"
                                     Visibility="{Binding IsEnabled,
                                                          Converter={StaticResource BoolToVisibilityConverter}}"
                                     HorizontalAlignment="Center"
                                     VerticalAlignment="Center"
                                     Fill="Green" />
                        </StackPanel>
                    </ToggleButton>
                    <Image Grid.Column="1"
                           Source="{Binding IconId,
                                            Converter={StaticResource IconIdToImageSourceConverter}}"
                           Width="15"
                           Height="15"
                           Margin="5"
                           Stretch="Fill" />
                    <TextBox Grid.Column="2"
                             Foreground="Black"
                             Margin="5"
                             Padding="3,0,0,0"
                             VerticalContentAlignment="Center"
                             FontSize="12"
                             local:MpIsFocusedExtension.IsEnabled="True"
                             Text="{Binding Label,
                                            Mode=TwoWay,
                                            UpdateSourceTrigger=PropertyChanged,
                                            NotifyOnTargetUpdated=True,
                                            NotifyOnSourceUpdated=True}" />
                    <local:MpActionTreeItemOptionsView Grid.Column="3"
                                                       DataContext="{Binding}" />
                </Grid>
            </HierarchicalDataTemplate>

            <!--  Compare  -->
            <HierarchicalDataTemplate x:Key="CompareTemplate"
                                      DataType="{x:Type local:MpCompareActionViewModelBase}"
                                      ItemsSource="{Binding Items}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.3*" />
                        <RowDefinition Height="0.3*" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.3*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="0.3*" />
                    </Grid.ColumnDefinitions>

                    <!--  Compare Property Path  -->
                    <TextBlock Grid.Row="0"
                               Grid.Column="0"
                               VerticalAlignment="Center"
                               Foreground="Black"
                               Text="Field"
                               Margin="0,0,10,0" />

                    <ComboBox Grid.Row="0"
                              Grid.Column="1"
                              MinWidth="100"
                              Margin="0,0,10,0"
                              ItemTemplateSelector="{StaticResource SelectorItemDataTemplateSelector}"
                              ItemsSource="{Binding ComparePropertyPathsMenuItemViewModel.SubItems}">
                        <ComboBox.ItemContainerStyle>
                            <Style TargetType="ComboBoxItem">
                                <Setter Property="IsSelected"
                                        Value="{Binding IsSelected,
                                                        Mode=TwoWay}" />
                            </Style>
                        </ComboBox.ItemContainerStyle>
                    </ComboBox>

                    <!--  Compare Type  -->
                    <TextBlock Grid.Row="1"
                               Grid.Column="0"
                               VerticalAlignment="Center"
                               Foreground="Black"
                               Text="Type"
                               Margin="0,0,10,0" />
                    <ComboBox Grid.Row="1"
                              Grid.Column="1"
                              MinWidth="100"
                              IsSynchronizedWithCurrentItem="True"
                              SelectedIndex="{Binding CompareType,
                                                      Converter={StaticResource EnumToIntConverter}}"
                              ItemsSource="{Binding CompareTypesMenuItemViewModel.SubItems}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Foreground="DimGray"
                                           Margin="5,0,0,0"
                                           Text="{Binding Header}"
                                           FontSize="14" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <local:MpActionTreeItemOptionsView Grid.Row="0"
                                                       Grid.Column="2"
                                                       HorizontalAlignment="Right"
                                                       DataContext="{Binding}" />
                    <AdornerDecorator>
                        <TextBox x:Name="CompareDataTextBox"
                                 Grid.Row="2"
                                 Grid.Column="0"
                                 Grid.ColumnSpan="3"
                                 MinHeight="30"
                                 MinWidth="130"
                                 Margin="5"
                                 TextWrapping="Wrap"
                                 local:MpIsFocusedExtension.IsEnabled="True"
                                 Text="{Binding CompareData,
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged,
                                                NotifyOnSourceUpdated=True,
                                                NotifyOnTargetUpdated=True}">
                            <i:Interaction.Behaviors>
                                <local:MpResizeBehavior x:Name="CompareDataTextBoxResizeBehvior"
                                                        DoubleClickControl="{Binding ElementName=CompareDataTextBox}"
                                                        ResizableEdge1="Bottom"
                                                        BoundHeight="{Binding Height,
                                                                              ElementName=CompareDataTextBox}"
                                                        MinHeight="30"
                                                        MinWidth="130" />

                            </i:Interaction.Behaviors>
                        </TextBox>
                    </AdornerDecorator>
                </Grid>
            </HierarchicalDataTemplate>
            <!--  Analyze  -->
            <HierarchicalDataTemplate x:Key="AnalyzeTemplate"
                                      DataType="{x:Type local:MpAnalyzeActionViewModel}"
                                      ItemsSource="{Binding Items}">
                <StackPanel Orientation="Horizontal">
                    <ComboBox x:Name="AnalyzerPresetComboBox"
                              DockPanel.Dock="Left"
                              MinWidth="150"
                              IsSynchronizedWithCurrentItem="True"
                              SelectedItem="{Binding .,
                                                     Mode=TwoWay}"
                              SelectedValuePath="AnalyticItemPresetId"
                              ItemsSource="{Binding AllPresets,
                                                    Source={x:Static local:MpAnalyticItemCollectionViewModel.Instance},
                                                    Converter={StaticResource CollectionToGroupedCollectionConverter},
                                                    ConverterParameter=ParentAnalyticItemId}">
                        <ComboBox.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <Border Background="LightGray">
                                            <DockPanel Margin="10,5">
                                                <Image DockPanel.Dock="Left"
                                                       Source="{Binding Name,
                                                                        Converter={StaticResource AnalyticItemIdToIconSourceConverter}}"
                                                       Width="15"
                                                       Height="15"
                                                       Stretch="Fill" />
                                                <TextBlock DockPanel.Dock="Right"
                                                           Foreground="DimGray"
                                                           FontStyle="Italic"
                                                           FontWeight="SemiBold"
                                                           FontSize="16"
                                                           Text="{Binding Name,
                                                                          Converter={StaticResource AnalyticItemIdToTitleConverter}}" />
                                            </DockPanel>
                                        </Border>
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </ComboBox.GroupStyle>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Margin="10,3,0,0"
                                            Orientation="Horizontal">
                                    <Image Source="{Binding IconId,
                                                            Converter={StaticResource IconIdToImageSourceConverter}}"
                                           Width="15"
                                           Height="15"
                                           VerticalAlignment="Center"
                                           Stretch="Fill" />
                                    <TextBlock Foreground="DimGray"
                                               Margin="5,0,0,0"
                                               Text="{Binding Label}"
                                               FontSize="14" />
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Button ToolTip="Settings"
                            Background="Transparent"
                            Margin="5,0,0,0"
                            BorderThickness="0"
                            Command="{Binding ManagePresetCommand,
                                              Source={x:Static local:MpAnalyticItemCollectionViewModel.Instance}}"
                            CommandParameter="{Binding ActionObjId}"
                            Style="{StaticResource SemiTransparentButton}">
                        <Border CornerRadius="2"
                                BorderThickness="2"
                                Background="LightGray">
                            <Image Source="{Binding .,
                                                    Converter={StaticResource StringResourceToImageSourceConverter},
                                                    Source={StaticResource SlidersIcon}}"
                                   Stretch="Fill"
                                   Margin="5"
                                   Width="15"
                                   Height="15" />
                        </Border>
                    </Button>

                    <local:MpActionTreeItemOptionsView DataContext="{Binding}" />
                </StackPanel>
            </HierarchicalDataTemplate>
            <!--  Classify  -->
            <HierarchicalDataTemplate x:Key="ClassifyTemplate"
                                      DataType="{x:Type local:MpClassifyActionViewModel}"
                                      ItemsSource="{Binding Items}">
                <StackPanel Orientation="Horizontal">
                    <ComboBox x:Name="TagChooserComboBox"
                              DockPanel.Dock="Left"
                              MinWidth="150"
                              IsSynchronizedWithCurrentItem="True"
                              SelectedItem="{Binding .,
                                                     Mode=TwoWay}"
                              SelectedValuePath="TagId"
                              ItemsSource="{Binding Items,
                                                    Source={x:Static local:MpTagTrayViewModel.Instance}}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Margin="3"
                                            Orientation="Horizontal">
                                    <Frame BorderThickness="0.7"
                                           BorderBrush="LightGray"
                                           Background="{Binding TagHexColor,
                                                                Converter={StaticResource StringHexToBrushConverter}}"
                                           Width="15"
                                           Height="15">
                                        <Frame.Margin>
                                            <MultiBinding Converter="{StaticResource TagIdToThicknessNameConverter}">
                                                <Binding Path="DataContext.TagId"
                                                         RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                                         AncestorType=Border}" />
                                                <Binding Path="IsDropDownOpen"
                                                         ElementName="TagChooserComboBox" />
                                                <Binding>
                                                    <Binding.Source>
                                                        <sys:Double>5.0</sys:Double>
                                                    </Binding.Source>
                                                </Binding>
                                            </MultiBinding>
                                        </Frame.Margin>
                                    </Frame>
                                    <TextBlock Margin="10,0,0,0"
                                               FontSize="16"
                                               Text="{Binding TagName}" />
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <!--<Button ToolTip="Add"
                                Background="Transparent"
                                Margin="5,0,0,0"
                                BorderThickness="0"
                                Command="{Binding ManagePresetCommand,
                                                  Source={x:Static local:MpAnalyticItemCollectionViewModel.Instance}}"
                                CommandParameter="{Binding ActionObjId}"
                                Style="{StaticResource SemiTransparentButton}">
                            <Border CornerRadius="2"
                                    BorderThickness="2"
                                    Background="LightGray">
                                <Image Source="{Binding .,
                                                        Converter={StaticResource StringResourceToImageSourceConverter},
                                                        Source={StaticResource SlidersIcon}}"
                                       Stretch="Fill"
                                       Margin="5"
                                       Width="15"
                                       Height="15" />
                            </Border>
                        </Button>-->

                    <local:MpActionTreeItemOptionsView DataContext="{Binding}" />
                </StackPanel>
            </HierarchicalDataTemplate>
            <!--  Transform  -->
            <HierarchicalDataTemplate x:Key="TransformTemplate"
                                      DataType="{x:Type local:MpAnalyzeActionViewModel}"
                                      ItemsSource="{Binding Items}">
                <TextBox Text="Transform" />
            </HierarchicalDataTemplate>
            <!--  Macro  -->
            <HierarchicalDataTemplate x:Key="MacroTemplate"
                                      DataType="{x:Type local:MpMacroActionViewModel}"
                                      ItemsSource="{Binding Items}">
                <TextBox Text="Classify" />
            </HierarchicalDataTemplate>
            <!--  Timer  -->
            <HierarchicalDataTemplate x:Key="TimerTemplate"
                                      DataType="{x:Type local:MpTimerActionViewModel}"
                                      ItemsSource="{Binding Items}">
                <TextBox Text="Classify" />
            </HierarchicalDataTemplate>
            <local:MpActionItemPropertiesTemplateSelector x:Key="ActionTemplateSelector" />
        </Grid.Resources>
        <TreeView Grid.Column="0"
                  dd:DragDrop.IsDragSource="True"
                  dd:DragDrop.IsDropTarget="True"
                  VerticalAlignment="Top"
                  BorderThickness="0"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                  ItemTemplateSelector="{StaticResource ActionTemplateSelector}"
                  ItemsSource="{Binding SelectedItem,
                                        Converter={StaticResource ItemToItemsSourceConverter}}">
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem"
                       BasedOn="{StaticResource {x:Type TreeViewItem}}">
                    <Style.Resources>
                        <SolidColorBrush Color="Transparent"
                                         x:Key="{x:Static SystemColors.HighlightBrushKey}" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}"
                                         Color="Transparent" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                                         Color="Transparent" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                                         Color="Transparent" />
                    </Style.Resources>
                    <Setter Property="HorizontalContentAlignment"
                            Value="Stretch" />
                    <Setter Property="IsSelected"
                            Value="{Binding IsSelected}" />
                    <Setter Property="IsExpanded"
                            Value="{Binding IsExpanded}" />
                    <Setter Property="Background"
                            Value="Pink" />
                    <Setter Property="Padding"
                            Value="5" />
                    <Setter Property="BorderThickness"
                            Value="1" />
                    <Setter Property="BorderBrush"
                            Value="{Binding BorderBrushHexColor,
                                            Converter={StaticResource StringHexToBrushConverter}}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TreeViewItem">
                                <StackPanel>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"
                                                              MinWidth="19" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <!--
                             Note that the following do not work, but I believe the top 2 should?!
                             <ToggleButton IsChecked="{TemplateBinding IsExpanded}" ClickMode="Press" Name="Expander">
                             <ToggleButton IsChecked="{TemplateBinding Property=IsExpanded}" ClickMode="Press" Name="Expander">
                             <ToggleButton IsChecked="{TemplateBinding Path=IsExpanded}" ClickMode="Press" Name="Expander">
                                        -->
                                        <ToggleButton IsChecked="{Binding Path=IsExpanded,
                                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                                      ClickMode="Press"
                                                      Name="Expander">
                                            <ToggleButton.Style>
                                                <Style TargetType="ToggleButton">
                                                    <Setter Property="UIElement.Focusable"
                                                            Value="false" />
                                                    <Setter Property="FrameworkElement.Width"
                                                            Value="16" />
                                                    <Setter Property="FrameworkElement.Height"
                                                            Value="16" />
                                                    <Setter Property="Control.Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="ToggleButton">
                                                                <Border Padding="5,5,5,5"
                                                                        Background="#00FFFFFF"
                                                                        Width="16"
                                                                        Height="16">
                                                                    <Path Fill="#00FFFFFF"
                                                                          Stroke="#FF989898"
                                                                          Name="ExpandPath">
                                                                        <Path.Data>
                                                                            <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                                        </Path.Data>
                                                                        <Path.RenderTransform>
                                                                            <RotateTransform Angle="135"
                                                                                             CenterX="3"
                                                                                             CenterY="3" />
                                                                        </Path.RenderTransform>
                                                                    </Path>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="UIElement.IsMouseOver"
                                                                             Value="True">
                                                                        <Setter TargetName="ExpandPath"
                                                                                Property="Shape.Stroke"
                                                                                Value="#FF1BBBFA" />
                                                                        <Setter TargetName="ExpandPath"
                                                                                Property="Shape.Fill"
                                                                                Value="#00FFFFFF" />
                                                                    </Trigger>
                                                                    <Trigger Property="ToggleButton.IsChecked"
                                                                             Value="True">
                                                                        <Setter TargetName="ExpandPath"
                                                                                Property="UIElement.RenderTransform">
                                                                            <Setter.Value>
                                                                                <RotateTransform Angle="180"
                                                                                                 CenterX="3"
                                                                                                 CenterY="3" />
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Setter TargetName="ExpandPath"
                                                                                Property="Shape.Fill"
                                                                                Value="#FF595959" />
                                                                        <Setter TargetName="ExpandPath"
                                                                                Property="Shape.Stroke"
                                                                                Value="#FF262626" />
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                        <Border x:Name="Bd"
                                                HorizontalAlignment="Stretch"
                                                BorderThickness="{TemplateBinding Border.BorderThickness}"
                                                BorderBrush="{TemplateBinding Border.BorderBrush}"
                                                Padding="{TemplateBinding Control.Padding}"
                                                Background="{TemplateBinding Panel.Background}"
                                                SnapsToDevicePixels="True"
                                                Grid.Column="1">
                                            <ContentPresenter x:Name="PART_Header"
                                                              Content="{TemplateBinding HeaderedContentControl.Header}"
                                                              ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                                              ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                                              ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                                              ContentSource="Header"
                                                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                        </Border>
                                        <ItemsPresenter x:Name="ItemsHost"
                                                        Grid.Column="1"
                                                        Grid.Row="1" />
                                    </Grid>
                                </StackPanel>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="TreeViewItem.IsExpanded"
                                             Value="False">
                                        <Setter TargetName="ItemsHost"
                                                Property="UIElement.Visibility"
                                                Value="Collapsed" />
                                    </Trigger>
                                    <Trigger Property="ItemsControl.HasItems"
                                             Value="False">
                                        <Setter TargetName="Expander"
                                                Property="UIElement.Visibility"
                                                Value="Hidden" />
                                    </Trigger>
                                    <Trigger Property="TreeViewItem.IsSelected"
                                             Value="True">
                                        <Setter TargetName="Bd"
                                                Property="Panel.Background"
                                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                        <Setter Property="TextElement.Foreground"
                                                Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="TreeViewItem.IsSelected"
                                                       Value="True" />
                                            <Condition Property="Selector.IsSelectionActive"
                                                       Value="False" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="Bd"
                                                Property="Panel.Background"
                                                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                        <Setter Property="TextElement.Foreground"
                                                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                    </MultiTrigger>
                                    <Trigger Property="UIElement.IsEnabled"
                                             Value="False">
                                        <Setter Property="TextElement.Foreground"
                                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>
    </Grid>
</local:MpUserControl>
