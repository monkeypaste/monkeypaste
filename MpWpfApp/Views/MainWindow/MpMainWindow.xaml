<Window x:Class="MpWpfApp.MpMainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:MpWpfApp"
        xmlns:pcl="clr-namespace:MonkeyPaste;assembly=MonkeyPaste"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        x:Name="MainWindow"
        Title="MpMainWindow"
        Width="{Binding MainWindowWidth}"
        d:DataContext="{d:DesignInstance Type=local:MpMainWindowViewModel,
                                         IsDesignTimeCreatable=False}"
        AllowsTransparency="True"
        Background="Transparent"
        DataContext="{x:Static local:MpMainWindowViewModel.Instance}"
        Activated="MainWindow_Activated"
        Deactivated="MainWindow_Deactivated"
        Left="0"
        Loaded="MainWindow_Loaded"
        MouseLeftButtonDown="MainWindowCanvas_MouseLeftButtonDown"
        ResizeMode="CanResize"
        ShowInTaskbar="False"
        Visibility="Visible"
        WindowState="Normal"
        WindowStyle="None"
        mc:Ignorable="d">

    <Window.Top>
        <Binding Path="MainWindowContainerTop"
                 Source="{x:Static local:MpMainWindowViewModel.Instance}" />
    </Window.Top>
    <Window.Height>
        <Binding Path="MainWindowContainerHeight"
                 Source="{x:Static local:MpMainWindowViewModel.Instance}" />
    </Window.Height>
    <Canvas x:Name="MainWindowCanvas"
            Width="{Binding MainWindowWidth}"
            Height="{Binding MainWindowContainerHeight}">
        <i:Interaction.Behaviors>
            <local:MpExternalDropBehavior x:Name="ExternalDropBehavior" />
        </i:Interaction.Behaviors>
        <local:MpDropMenuView DataContext="{Binding SelectedItem,
                                                    Source={x:Static local:MpClipboardHandlerCollectionViewModel.Instance}}"
                              Visibility="{Binding IsDraggingToExternal,
                                                   Converter={StaticResource BoolToVisibilityConverter},
                                                   FallbackValue=Collapsed}" />

        <!--<local:MpQuillEditorView x:Name="QuillConverterView"
                                 IsConverterInstance="True"
                                 Visibility="Collapsed"
                                 DataContext="{x:Null}"/>-->
        <!--<AdornerDecorator>-->
        <Grid x:Name="MainWindowGrid"
              Canvas.Left="0"
              Canvas.Top="{Binding MainWindowTop}"
              Width="{Binding MainWindowWidth}"
              Height="{Binding MainWindowHeight,
                               Mode=TwoWay,
                               UpdateSourceTrigger=PropertyChanged,
                               NotifyOnSourceUpdated=True,
                               NotifyOnTargetUpdated=True}">
            <Grid.RowDefinitions>
                <RowDefinition Height="{Binding TitleMenuHeight,
                                                Source={x:Static local:MpMeasurements.Instance}}" />
                <RowDefinition Height="{Binding FilterMenuHeight}" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!--  System Tray  -->
            <local:MpSystemTrayView DataContext="{x:Static local:MpSystemTrayViewModel.Instance}" />

            <!--  Title Menu  -->
            <Grid x:Name="TitleBarDockPanel"
                  Grid.Row="0"
                  Background="{Binding TitleBarBackgroundHexColor,
                                       Converter={StaticResource StringHexToBrushConverter}}">
                <StackPanel Orientation="Horizontal">
                    <StackPanel.Resources />
                    <Button Margin="5,0,0,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            local:MpHoverableExtension.HoverCursor="Default"
                            local:MpHoverableExtension.IsEnabled="True"
                            Command="{Binding ShowSettingsWindowCommand,
                                              Source={x:Static local:MpSystemTrayViewModel.Instance}}"
                            PreviewMouseLeftButtonDown="ToggleButton_PreviewMouseLeftButtonDown"
                            Template="{StaticResource SearchButtonControlTemplate}"
                            ToolTip="Settings"
                            ToolTipService.InitialShowDelay="500">
                        <Image Width="12"
                               Height="12"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Source="{Binding .,
                                                Source={StaticResource CogIcon},
                                                Converter={StaticResource StringResourceToImageSourceConverter}}"
                               Stretch="Fill">
                            <!--<Image.Effect>
                                <local:MpInvertEffect />
                            </Image.Effect>-->
                        </Image>
                    </Button>
                    <ToggleButton VerticalAlignment="Center"
                                  IsChecked="{Binding IsMainWindowLocked,
                                                      Mode=TwoWay,
                                                      UpdateSourceTrigger=PropertyChanged,
                                                      NotifyOnSourceUpdated=True,
                                                      NotifyOnTargetUpdated=True}"
                                  Template="{StaticResource LockToggleButtonControlTemplate}"
                                  ToolTip="Lock"
                                  ToolTipService.InitialShowDelay="500">
                        <Image Width="12"
                               Height="12"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Source="{Binding Source={StaticResource LockIcon},
                                                Converter={StaticResource StringResourceToImageSourceConverter}}"
                               Stretch="Fill">
                            <!--<Image.Effect>
                                <local:MpInvertEffect />
                            </Image.Effect>-->
                        </Image>
                    </ToggleButton>
                    <ToggleButton VerticalAlignment="Center"
                                  local:MpHoverableExtension.IsEnabled="True"
                                  local:MpHoverableExtension.HoverCursor="Hand"
                                  Background="Pink"
                                  IsChecked="{Binding IsFilterMenuVisible,
                                                      Mode=TwoWay,
                                                      UpdateSourceTrigger=PropertyChanged,
                                                      NotifyOnSourceUpdated=True,
                                                      NotifyOnTargetUpdated=True,
                                                      Converter={StaticResource BoolFlipConverter}}"
                                  Template="{StaticResource LockToggleButtonControlTemplate}"
                                  ToolTipService.InitialShowDelay="0">
                        <ToggleButton.ToolTip>
                            <local:MpToolTipView ToolTipText="{Binding .,
                                                                       Converter={StaticResource ShortcutTypeToStringConverter},
                                                                       ConverterParameter={x:Static pcl:MpShortcutType.ToggleFilterMenuVisible}}" />
                        </ToggleButton.ToolTip>
                        <Grid>
                            <Polygon Points="6,0 12,12 0,12"
                                     StrokeThickness="1"
                                     Visibility="{Binding IsFilterMenuVisible,
                                                          Converter={StaticResource BoolToVisibilityFlipConverter}}"
                                     Stroke="Black"
                                     Fill="Transparent" />
                            <Polygon Points="5,0 10,10 0,10"
                                     StrokeThickness="1"
                                     Visibility="{Binding IsFilterMenuVisible,
                                                          Converter={StaticResource BoolToVisibilityConverter}}"
                                     Stroke="Black"
                                     Fill="Transparent">
                                <Polygon.LayoutTransform>
                                    <RotateTransform Angle="180" />
                                </Polygon.LayoutTransform>
                            </Polygon>
                        </Grid>
                    </ToggleButton>
                </StackPanel>

                <Border x:Name="MainWindowResizeBorder"
                        Width="100"
                        VerticalAlignment="Stretch"
                        local:MpHoverableExtension.DefaultBrush="White"
                        local:MpHoverableExtension.HoverBrush="Yellow"
                        local:MpHoverableExtension.HoverCursor="ResizeNS"
                        local:MpHoverableExtension.IsEnabled="True"
                        local:MpHoverableExtension.IsSelected="{Binding IsResizing}"
                        local:MpHoverableExtension.SelectedBrush="Orange"
                        BorderBrush="{Binding TitleBarBackgroundHexColor,
                                              Converter={StaticResource StringHexToBrushConverter}}"
                        BorderThickness="1,0.5,1,0.5">
                    <Border.Background>
                        <ImageBrush ImageSource="{Binding .,
                                                          Source={StaticResource FrameGripTile},
                                                          Converter={StaticResource StringResourceToImageSourceConverter}}"
                                    TileMode="Tile"
                                    Viewport="0 0 5 5"
                                    ViewportUnits="Absolute" />
                    </Border.Background>

                    <i:Interaction.Behaviors>
                        <local:MpResizeBehavior x:Name="MainWindowResizeBehvior"
                                                MinHeight="{Binding MainWindowMinHeight,
                                                                    Source={x:Static local:MpMeasurements.Instance}}"
                                                MaxHeight="{Binding MainWindowMaxHeight,
                                                                    Source={x:Static local:MpMeasurements.Instance}}"
                                                AffectsContent="True"
                                                BoundElement="{Binding ElementName=MainWindowGrid}"
                                                BoundHeight="{Binding MainWindowHeight,
                                                                      Mode=TwoWay,
                                                                      UpdateSourceTrigger=PropertyChanged,
                                                                      NotifyOnSourceUpdated=True,
                                                                      NotifyOnTargetUpdated=True}"
                                                CanResize="{Binding CanResize,
                                                                    Mode=TwoWay,
                                                                    UpdateSourceTrigger=PropertyChanged,
                                                                    NotifyOnSourceUpdated=True,
                                                                    NotifyOnTargetUpdated=True}"
                                                DefaultWidth="{Binding MainWindowWidth}"
                                                DefaultHeight="{Binding MainWindowDefaultHeight,
                                                                        Source={x:Static local:MpMeasurements.Instance}}"
                                                IsEnabled="True"
                                                IsResizing="{Binding IsResizing,
                                                                     Mode=TwoWay,
                                                                     UpdateSourceTrigger=PropertyChanged,
                                                                     NotifyOnSourceUpdated=True,
                                                                     NotifyOnTargetUpdated=True}"
                                                ResizableEdge1="Top"
                                                DoubleClickFrameworkElement="{Binding ElementName=MainWindowResizeBorder}" />

                    </i:Interaction.Behaviors>
                </Border>
            </Grid>

            <!--  FilterMenu  -->
            <Grid Grid.Row="1"
                  Visibility="{Binding IsFilterMenuVisible,
                                       Converter={StaticResource BoolToVisibilityConverter}}"
                  Background="{Binding .,
                                       Converter={StaticResource StringToThemeBrushConverter},
                                       ConverterParameter=Filter_Menu_Background_Color}">
                <!--<Grid.Background>
                    <SolidColorBrush Color="DarkViolet" Opacity="0.4"/>
                </Grid.Background>-->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.25*" />
                    <ColumnDefinition Width="1.15*" />
                    <ColumnDefinition Width="5*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0"
                            DataContext="{x:Static local:MpClipTrayViewModel.Instance}"
                            Orientation="Horizontal">
                    <ToggleButton Padding="10"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Top"
                                  IsChecked="{Binding IsAppPaused,
                                                      Mode=TwoWay,
                                                      UpdateSourceTrigger=PropertyChanged,
                                                      NotifyOnSourceUpdated=True,
                                                      NotifyOnTargetUpdated=True}"
                                  Template="{StaticResource LockToggleButtonControlTemplate}"
                                  ToolTipService.InitialShowDelay="0">
                        <Grid>
                            <Image HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Source="{Binding Source={StaticResource PauseIcon},
                                                    Converter={StaticResource StringResourceToImageSourceConverter}}"
                                   ToolTip="Pause Clipboard Listener"
                                   Visibility="{Binding IsAppPaused,
                                                        Converter={StaticResource BoolToVisibilityFlipConverter}}" />
                            <Image HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   Source="{Binding Source={StaticResource PlayIcon},
                                                    Converter={StaticResource StringResourceToImageSourceConverter}}"
                                   ToolTip="Resume Clipboard Listener"
                                   Visibility="{Binding IsAppPaused,
                                                        Converter={StaticResource BoolToVisibilityConverter}}" />
                        </Grid>
                    </ToggleButton>
                </StackPanel>
                <!--  Sort Combobox  -->
                <local:MpItemSortView x:Name="ItemSortView"
                                      Grid.Column="1"
                                      DataContext="{x:Static local:MpClipTileSortViewModel.Instance}" />
                <!--  Tag Tray  -->
                <local:MpTagTrayView x:Name="TagTrayView"
                                     Grid.Column="2"
                                     DataContext="{x:Static local:MpTagTrayViewModel.Instance}" />
                <!--  Search  -->
                <local:MpSearchBoxView x:Name="SearchView"
                                       Grid.Column="3"
                                       DataContext="{x:Static local:MpSearchBoxViewModel.Instance}" />
            </Grid>

            <!--  3rd row row for tray  -->
            <Grid Grid.Row="2"
                  Background="{Binding .,
                                       Converter={StaticResource StringToThemeBrushConverter},
                                       ConverterParameter=Tag_Tree_Background_Color}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="{Binding Path=SearchCriteriaListBoxHeight,
                                                    Source={x:Static local:MpSearchBoxViewModel.Instance}}" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding AppStateButtonPanelWidth,
                                                      Source={x:Static local:MpMeasurements.Instance}}" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <local:MpSearchCriteriaListBoxView x:Name="SearchDetailView"
                                                   Grid.Row="0"
                                                   Grid.ColumnSpan="3"
                                                   VerticalAlignment="Stretch"
                                                   VerticalContentAlignment="Stretch"
                                                   DataContext="{x:Static local:MpSearchBoxViewModel.Instance}" />

                <!--  Side bar AppState Buttons  -->
                <local:MpSidebarView Grid.Row="1"
                                     Grid.Column="0"
                                     Margin="0,3"
                                     HorizontalAlignment="Stretch"
                                     VerticalAlignment="Stretch"
                                     HorizontalContentAlignment="Left"
                                     VerticalContentAlignment="Stretch"
                                     DataContext="{x:Static local:MpClipTrayViewModel.Instance}" />

                <local:MpTagTreeView x:Name="TagTreeView"
                                     Grid.Row="1"
                                     Grid.Column="1"
                                     DataContext="{x:Static local:MpTagTrayViewModel.Instance}"
                                     Visibility="{Binding IsSidebarVisible,
                                                          Converter={StaticResource BoolToVisibilityConverter}}" />

                <local:MpClipboardHandlerItemSelectorView x:Name="ManageClipboardHandlerItemsContainerView"
                                                          Grid.Row="1"
                                                          Grid.Column="1"
                                                          DataContext="{x:Static local:MpClipboardHandlerCollectionViewModel.Instance}"
                                                          Visibility="{Binding IsSidebarVisible,
                                                                               Converter={StaticResource BoolToVisibilityConverter}}" />
                <!--<local:MpClipboardFormatListBoxView x:Name="ManageClipboardHandlerItemsContainerView"
                                                    Grid.Row="1"
                                                    Grid.Column="1"
                                                    DataContext="{x:Static local:MpClipboardHandlerCollectionViewModel.Instance}"
                                                    Visibility="{Binding IsSidebarVisible,
                                                                         Converter={StaticResource BoolToVisibilityConverter}}" />-->
                <local:MpAnalyticItemSelectorView x:Name="ManageAnalyticItemsContainerView"
                                                  Grid.Row="1"
                                                  Grid.Column="1"
                                                  DataContext="{x:Static local:MpAnalyticItemCollectionViewModel.Instance}"
                                                  Visibility="{Binding IsSidebarVisible,
                                                                       Converter={StaticResource BoolToVisibilityConverter}}" />
                <local:MpTriggerActionChooserView x:Name="ActionCollectionView"
                                                  Grid.Row="1"
                                                  Grid.Column="1"
                                                  DataContext="{x:Static local:MpActionCollectionViewModel.Instance}"
                                                  Visibility="{Binding IsSidebarVisible,
                                                                       Converter={StaticResource BoolToVisibilityConverter}}" />
                <GridSplitter x:Name="SidebarGridSplitter"
                              Grid.Row="1"
                              Grid.Column="1"
                              Width="5"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Stretch"
                              local:MpHoverableExtension.HoverCursor="ResizeWE"
                              local:MpHoverableExtension.IsEnabled="True"
                              IsVisibleChanged="SidebarGridSplitter_IsVisibleChanged">
                    <GridSplitter.Visibility>
                        <MultiBinding Converter="{StaticResource MultiBoolToVisibilityConverter}"
                                      ConverterParameter="{StaticResource OrTypeMultiBinding}">
                            <Binding Path="IsSidebarVisible"
                                     Source="{x:Static local:MpTagTrayViewModel.Instance}" />
                            <Binding Path="IsSidebarVisible"
                                     Source="{x:Static local:MpAnalyticItemCollectionViewModel.Instance}" />
                            <Binding Path="IsSidebarVisible"
                                     Source="{x:Static local:MpClipboardHandlerCollectionViewModel.Instance}" />
                            <Binding Path="IsSidebarVisible"
                                     Source="{x:Static local:MpActionCollectionViewModel.Instance}" />
                        </MultiBinding>
                    </GridSplitter.Visibility>
                </GridSplitter>
                <local:MpClipTrayContainerView x:Name="ClipTrayView"
                                               Grid.Row="1"
                                               Grid.Column="2"
                                               DataContext="{x:Static local:MpClipTrayViewModel.Instance}" />
            </Grid>
        </Grid>
        <!--</AdornerDecorator>-->
    </Canvas>
</Window>
