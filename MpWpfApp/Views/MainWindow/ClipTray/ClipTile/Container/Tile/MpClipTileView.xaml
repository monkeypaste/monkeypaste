<local:MpUserControl x:Class="MpWpfApp.MpClipTileView"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:local="clr-namespace:MpWpfApp"
                     xmlns:common="clr-namespace:MonkeyPaste.Common;assembly=MonkeyPaste.Common"
                     x:TypeArguments="local:MpClipTileViewModel"
                     mc:Ignorable="d"
                     d:DesignHeight="450"
                     d:DesignWidth="800"
                     d:DataContext="{d:DesignInstance Type=local:MpClipTileViewModel,
                                                      IsDesignTimeCreatable=False}">
    <i:Interaction.Behaviors>
        <local:MpHighlightSelectorBehavior x:Name="HighlightSelectorBehavior" />
    </i:Interaction.Behaviors>
    <local:MpClipBorder x:Name="ClipTileClipBorder"
                        DataContext="{Binding}"
                        Background="Pink"
                        Margin="{Binding ClipTileMargin,
                                         Source={x:Static local:MpMeasurements.Instance}}"
                        BorderThickness="{Binding ClipTileBorderThickness,
                                                  Source={x:Static local:MpMeasurements.Instance}}"
                        Width="{Binding TileBorderWidth}"
                        Height="{Binding TileBorderHeight}"
                        IsVisibleChanged="ClipTileClipBorder_IsVisibleChanged"
                        Loaded="ClipTileClipBorder_Loaded"
                        Unloaded="ClipTileClipBorder_Unloaded"
                        DataContextChanged="ClipTileClipBorder_DataContextChanged"
                        MouseEnter="ClipTileClipBorder_MouseEnter"
                        MouseLeave="ClipTileClipBorder_MouseLeave"
                        Focusable="False"
                        SnapsToDevicePixels="True"
                        ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                        ScrollViewer.VerticalScrollBarVisibility="Hidden"
                        ToolTipService.ShowDuration="1000"
                        CornerRadius="10">
        <local:MpClipBorder.Resources>
            <DropShadowEffect x:Key="DropShadow"
                              RenderingBias="Quality"
                              Color="Black"
                              Direction="315"
                              Opacity="0.3"
                              BlurRadius="5" />
        </local:MpClipBorder.Resources>
        <local:MpClipBorder.Style>
            <Style TargetType="{x:Type local:MpClipBorder}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsPinned}"
                                 Value="True">
                        <Setter Property="Effect"
                                Value="{StaticResource DropShadow}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsPinned}"
                                 Value="False">
                        <Setter Property="Effect"
                                Value="{x:Null}" />
                    </DataTrigger>
                    <!--<Trigger Property="Perf:RenderCapabilityWrapper.Tier" Value="0">
                        <Setter Property="Effect" Value="{x:Null}"/>
                    </Trigger>
                    <Trigger Property="Perf:RenderCapabilityWrapper.Tier" Value="1">
                        <Setter Property="Effect" Value="{StaticResource performanceShadow}"/>
                    </Trigger>
                    <Trigger Property="Perf:RenderCapabilityWrapper.Tier" Value="2">
                        <Setter Property="Effect" Value="{StaticResource qualityShadow}"/>
                    </Trigger>-->
                </Style.Triggers>
            </Style>
        </local:MpClipBorder.Style>
        <local:MpClipBorder.BorderBrush>
            <DrawingBrush Viewport="0,0,50,50"
                          ViewportUnits="Absolute"
                          TileMode="Tile">
                <DrawingBrush.RelativeTransform>
                    <TranslateTransform X="{Binding TileBorderBrushTranslateOffsetX}" />
                </DrawingBrush.RelativeTransform>
                <DrawingBrush.Drawing>
                    <DrawingGroup>
                        <GeometryDrawing Brush="{Binding TileBorderBrush}">
                            <GeometryDrawing.Geometry>
                                <GeometryGroup>
                                    <RectangleGeometry Rect="{Binding TileBorderBrushRect}" />
                                    <RectangleGeometry Rect="50 50 50 50" />
                                </GeometryGroup>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup>
                </DrawingBrush.Drawing>
            </DrawingBrush>
        </local:MpClipBorder.BorderBrush>
        <Grid x:Name="ClipTileBorderGrid">
            <DockPanel x:Name="ClipTileDockPanel"
                       Background="{Binding TileBackgroundHexColor,
                                            Converter={StaticResource StringHexToBrushConverter}}">
                <DockPanel.Resources>
                    <DataTemplate x:Key="RtbContentContainerViewTemplate">
                        <local:MpRtbContentContainerView DataContext="{Binding}" />
                    </DataTemplate>
                    <DataTemplate x:Key="QuillViewTemplate">
                        <local:MpQuillEditorView DataContext="{Binding}" />
                    </DataTemplate>
                    <local:MpContentViewSelector x:Key="ContentViewSelector" />
                </DockPanel.Resources>

                <!--  Title  -->

                <Grid DockPanel.Dock="Top">
                    <local:MpClipTileTitleView x:Name="TileTitleView"
                                               DockPanel.Dock="Top"
                                               Visibility="{Binding IsTitleVisible,
                                                                    Converter={StaticResource BoolToVisibilityConverter}}"
                                               MaxHeight="{Binding ClipTileTitleHeight,
                                                                   Source={x:Static local:MpMeasurements.Instance},
                                                                   Mode=OneWay}"
                                               DataContext="{Binding}" />
                    <!--  Hide Title Button  -->

                    <Button x:Name="HideTitleButton"
                            DockPanel.Dock="Top"
                            local:MpHoverableExtension.IsEnabled="True"
                            local:MpHoverableExtension.IsHovering="{Binding IsOverHideTitleButton,
                                                                            Mode=TwoWay}"
                            local:MpHoverableExtension.HoverBrush="Yellow"
                            local:MpHoverableExtension.SelectedBrush="Red"
                            local:MpHoverableExtension.DefaultBrush="Black"
                            local:MpHoverableExtension.IsSelected="{Binding IsTitleVisible,
                                                                            Converter={StaticResource BoolFlipConverter},
                                                                            Mode=OneWay}"
                            local:MpHoverableExtension.HoverCursor="Hand"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            BorderThickness="0"
                            Background="Transparent"
                            Style="{StaticResource Transparent_Button}"
                            Margin="2,-1,0,0"
                            Width="12"
                            Height="12"
                            Visibility="{Binding PinButtonVisibility}"
                            Command="{Binding ToggleHideTitleCommand}">
                        <Image Source="{Binding HideTitleIconSourcePath,
                                                Converter={StaticResource StringResourceToImageSourceConverter}}" />
                    </Button>


                    <Button x:Name="PinButton"
                            local:MpHoverableExtension.IsEnabled="True"
                            local:MpHoverableExtension.IsHovering="{Binding IsOverPinButton,
                                                                            Mode=TwoWay}"
                            Background="Transparent"
                            Style="{StaticResource Transparent_Button}"
                            BorderThickness="0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Visibility="{Binding PinButtonVisibility}"
                            Command="{Binding ToggleTileIsPinnedCommand,
                                              Source={x:Static local:MpClipTrayViewModel.Instance}}"
                            CommandParameter="{Binding}">
                        <Image x:Name="PinButtonImage"
                               Width="15"
                               Height="15"
                               Stretch="Fill"
                               Source="{Binding PinIconSourcePath,
                                                Converter={StaticResource StringResourceToImageSourceConverter}}" />
                    </Button>
                </Grid>


                <!--  Detail  -->
                <local:MpClipTileDetailView x:Name="TileDetailView"
                                            DockPanel.Dock="Bottom"
                                            Height="{Binding ClipTileDetailHeight,
                                                             Source={x:Static local:MpMeasurements.Instance},
                                                             Mode=OneWay}"
                                            Visibility="{Binding IsDetailGridVisibile,
                                                                 Converter={StaticResource BoolToVisibilityConverter}}"
                                            DataContext="{Binding}" />

                <!--  Content  -->
                <ContentControl Content="{Binding}"
                                ContentTemplateSelector="{StaticResource ContentViewSelector}" />

            </DockPanel>
            <!--  Overlays  -->
            <!--  Loading Spinner  -->
            <local:MpClipTileLoadingOverlayView x:Name="ClipTileBusyView"
                                                Visibility="{Binding IsAnyBusy,
                                                                     Converter={StaticResource BoolToVisibilityConverter}}">
                <local:MpClipTileLoadingOverlayView.Background>
                    <SolidColorBrush Color="{Binding Source={x:Static common:MpSystemColors.LoadingSpinnerBackground},
                                                     Converter={StaticResource StringHexToWinMediaColorConverter},
                                                     Mode=OneWay}"
                                     Opacity="0.7" />
                </local:MpClipTileLoadingOverlayView.Background>
            </local:MpClipTileLoadingOverlayView>
            <!--  Trial Expired  -->
            <local:MpClipTileTrialExpiredOverlay Visibility="{local:MpSettingBinding Path=IsTrialExpired,
                                                                                     Converter={StaticResource BoolToVisibilityConverter}}" />

        </Grid>
    </local:MpClipBorder>
</local:MpUserControl>
