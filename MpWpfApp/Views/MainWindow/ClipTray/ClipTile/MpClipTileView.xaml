<UserControl x:Class="MpWpfApp.MpClipTileView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:spinners="clr-namespace:xamlSpinnersWPF"
             xmlns:local="clr-namespace:MpWpfApp"             
             mc:Ignorable="d"             
             d:DesignHeight="450"
             d:DesignWidth="800">    
    <local:MpClipBorder x:Name="ClipTileClipBorder"                        
                        DataContext="{Binding}"
                        Margin="{local:MpMeasurementsBinding ClipTileMargin, Converter={StaticResource DoubleToThicknessConverter}, Mode=OneWay}"
                        BorderThickness="{Binding TileBorderThickness}"
                        Width="{Binding TileBorderWidth}"
                        Height="{Binding TileBorderHeight}"
                        Visibility="{Binding ItemVisibility, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}"
                        Tag="{Binding DataContext,RelativeSource={RelativeSource Mode=Self}}"
                        Loaded="ClipTileClipBorder_Loaded"
                        DataContextChanged="ClipTileClipBorder_DataContextChanged"
                        PreviewMouseUp="ClipTileClipBorder_PreviewMouseUp"
                        MouseEnter="ClipTileClipBorder_MouseEnter"
                        MouseMove="ClipTileClipBorder_MouseMove"
                        MouseLeave="ClipTileClipBorder_MouseLeave"
                        LostFocus="ClipTileClipBorder_LostFocus"
                        MouseDown="ClipTileClipBorder_MouseDown"
                        DragLeave="ClipTileClipBorder_DragLeave"
                        PreviewDragEnter="ClipTileClipBorder_PreviewDragEnter"
                        PreviewDragOver="ClipTileClipBorder_PreviewDragOver"
                        PreviewDrop="ClipTileClipBorder_PreviewDrop"
                        Focusable="True"
                        AllowDrop="True"
                        ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                        ScrollViewer.VerticalScrollBarVisibility="Hidden"
                        Background="{local:MpSettingBinding ThemeClipTileBackgroundColor, Converter={StaticResource StringToBrushConverter}}"
                        ToolTipService.ShowDuration="1000"
                        CornerRadius="10">
        <!--<local:MpClipBorder.Style>
            <Style>
                <Setter Property="Border.Background"
                        Value="{Binding TileBorderBrush}" />
                <Style.Triggers>
                    <Trigger Property="Border.IsMouseOver"
                             Value="True">
                        <Setter Property="Border.Background"
                                Value="Green" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </local:MpClipBorder.Style>-->
        <local:MpClipBorder.BorderBrush>
            <DrawingBrush Viewport="0,0,8,8"
                          ViewportUnits="Absolute"
                          TileMode="Tile">
                <DrawingBrush.Drawing>
                    <DrawingGroup>
                        <GeometryDrawing Brush="{Binding TileBorderBrush}">
                            <GeometryDrawing.Geometry>
                                <GeometryGroup>
                                    <RectangleGeometry Rect="{Binding TileBorderBrushRect}" />
                                    <RectangleGeometry Rect="50,50,50,50" />
                                </GeometryGroup>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup>
                </DrawingBrush.Drawing>
            </DrawingBrush>
        </local:MpClipBorder.BorderBrush>
        <local:MpClipBorder.RenderTransform>
            <TranslateTransform X="0"
                                Y="0"
                                x:Name="ClipTileBorderTranslateTransform" />
        </local:MpClipBorder.RenderTransform>
        <local:MpClipBorder.ContextMenu>
            <local:MpContentContextMenuView DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}" />
        </local:MpClipBorder.ContextMenu>
        <!--<local:MpClipBorder.Effect>
                                    <DropShadowEffect Color="DarkGray"
                                                      BlurRadius="7" />
                                </local:MpClipBorder.Effect>-->
        <Grid x:Name="ClipTileBorderGrid"
              Background="#FF3D3D3D">
            <DockPanel Background="White">
                <!-- Tile Title Canvas -->
                <local:MpClipTileTitleView x:Name="TileTitleView"
                                           DockPanel.Dock="Top"
                                           Height="{local:MpMeasurementsBinding ClipTileTitleHeight, Mode=OneWay}"
                                           DataContext="{Binding PrimaryItem}" />
                <!-- Tile Detail Grid -->
                <local:MpClipTileDetailView x:Name="TileDetailView"
                                            DockPanel.Dock="Bottom"
                                            Margin="1"
                                            Height="{local:MpMeasurementsBinding ClipTileDetailHeight, Mode=OneWay}"
                                            Visibility="{Binding Parent.DetailGridVisibility}"
                                            DataContext="{Binding PrimaryItem}" />
                <!-- Content Container Canvas -->
                <local:MpContentListView DataContext="{Binding}" />               
                
            </DockPanel>
            <!-- Overlays -->
            <!-- Loading Spinner -->
            <local:MpClipTileLoadingOverlayView Visibility="{local:MpSettingBinding IsTrialExpired, Converter={StaticResource BoolToVisibilityConverter}}" />
            <!-- Trial Expired -->
            <local:MpClipTileTrialExpiredOverlay Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}" />
        </Grid>
    </local:MpClipBorder>
</UserControl>
