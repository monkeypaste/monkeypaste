<UserControl x:Class="MpWpfApp.MpClipTileView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:spinners="clr-namespace:xamlSpinnersWPF"
             xmlns:local="clr-namespace:MpWpfApp"
             mc:Ignorable="d"             
             d:DesignHeight="450"
             d:DesignWidth="800">
    <local:MpClipBorder x:Name="ClipTileClipBorder"
                        DataContext="{Binding}"
                        Margin="{Binding TileMargin}"
                        BorderThickness="{Binding TileBorderThickness}"
                        Width="{Binding TileBorderWidth}"
                        Height="{Binding TileBorderHeight}"
                        Visibility="{Binding TileVisibility, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}"
                        Tag="{Binding DataContext,RelativeSource={RelativeSource Mode=Self}}"
                        PreviewMouseUp="ClipTileClipBorder_PreviewMouseUp"
                        MouseEnter="ClipTileClipBorder_MouseEnter"
                        MouseMove="ClipTileClipBorder_MouseMove"
                        MouseLeave="ClipTileClipBorder_MouseLeave"
                        LostFocus="ClipTileClipBorder_LostFocus"
                        MouseDown="ClipTileClipBorder_MouseDown"
                        DragLeave="ClipTileClipBorder_DragLeave"
                        PreviewDragEnter="ClipTileClipBorder_PreviewDragEnter"
                        PreviewDragOver="ClipTileClipBorder_PreviewDragOver"
                        PreviewDrop="ClipTileClipBorder_PreviewDrop"
                        Focusable="True"
                        AllowDrop="True"
                        ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                        ScrollViewer.VerticalScrollBarVisibility="Hidden"
                        Background="{local:MpSettingBinding ThemeClipTileBackgroundColor, Converter={StaticResource StringToBrushConverter}}"
                        ToolTipService.ShowDuration="1000"
                        CornerRadius="10">
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="Loaded">
                <i:CallMethodAction TargetObject="{Binding}"
                                    MethodName="ClipTile_Loaded" />
            </i:EventTrigger>
        </i:Interaction.Triggers>
        <local:MpClipBorder.BorderBrush>
            <DrawingBrush Viewport="0,0,8,8"
                          ViewportUnits="Absolute"
                          TileMode="Tile">
                <DrawingBrush.Drawing>
                    <DrawingGroup>
                        <GeometryDrawing Brush="{Binding TileBorderBrush}">
                            <GeometryDrawing.Geometry>
                                <GeometryGroup>
                                    <RectangleGeometry Rect="{Binding TileBorderBrushRect}" />
                                    <RectangleGeometry Rect="50,50,50,50" />
                                </GeometryGroup>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup>
                </DrawingBrush.Drawing>
            </DrawingBrush>
        </local:MpClipBorder.BorderBrush>
        <local:MpClipBorder.RenderTransform>
            <TranslateTransform X="0"
                                Y="0"
                                x:Name="ClipTileBorderTranslateTransform" />
        </local:MpClipBorder.RenderTransform>
        <local:MpClipBorder.Resources>
            <local:MpBindingProxy x:Key="ClipTileProxy"
                                  Data="{Binding}" />
        </local:MpClipBorder.Resources>
        <local:MpClipBorder.ContextMenu>
            <ContextMenu x:Name="ClipTile_ContextMenu">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Loaded">
                        <i:CallMethodAction TargetObject="{Binding}"
                                            MethodName="ClipTile_ContextMenu_Loaded" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Opened">
                        <i:CallMethodAction TargetObject="{Binding}"
                                            MethodName="ClipTile_ContextMenu_Opened" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="Closed">
                        <i:CallMethodAction TargetObject="{Binding}"
                                            MethodName="ClipTile_ContextMenu_Closed" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <MenuItem Header="_Copy"
                          Tag="27"
                          Icon="{Binding Source={StaticResource CopyIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}"
                          Command="{Binding CopySelectedClipsCommand, Source={StaticResource ClipTrayViewModel}}" />
                <MenuItem Header="_Paste"
                          Tag="6"
                          Icon="{Binding Source={StaticResource PasteIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}"
                          Command="{Binding PasteSelectedClipsCommand, Source={StaticResource ClipTrayViewModel}}" />
                <Separator />
                <MenuItem Header="Delete"
                          Tag="7"
                          Icon="{Binding Source={StaticResource DeleteIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}"
                          Command="{Binding DeleteSelectedClipsCommand, Source={StaticResource ClipTrayViewModel}}" />
                <Separator />
                <MenuItem Header="_Edit"
                          Icon="{Binding Source={StaticResource EditIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}">
                    <MenuItem Header="_Edit Content"
                              Tag="20"
                              Icon="{Binding Source={StaticResource EditContentIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}"
                              Command="{Binding EditSelectedContentCommand, Source={StaticResource ClipTrayViewModel}}" />
                    <MenuItem Header="_Rename"
                              Tag="21"
                              Icon="{Binding Source={StaticResource RenameIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}"
                              Command="{Binding EditSelectedTitleCommand, Source={StaticResource ClipTrayViewModel}}" />
                    <Separator />
                    <MenuItem x:Name="TranslateMenuItem"
                              Header="Translate"
                              Icon="{Binding Source={StaticResource TranslateIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}"
                              ItemsSource="{Binding TranslateLanguageMenuItems, Source={StaticResource ClipTrayViewModel}}">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Header"
                                        Value="{Binding Header}" />
                                <Setter Property="Command"
                                        Value="{Binding Command}" />
                                <Setter Property="CommandParameter"
                                        Value="{Binding CommandParameter}" />
                                <Setter Property="HorizontalContentAlignment"
                                        Value="Left" />
                                <Setter Property="VerticalContentAlignment"
                                        Value="Top" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                </MenuItem>
                <MenuItem x:Name="ToolsMenuItem"
                          Header="_Tools"
                          Icon="{Binding Source={StaticResource ToolsIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}">
                    <MenuItem Header="Duplicate"
                              Tag="22"
                              Icon="{Binding Source={StaticResource DuplicateIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}"
                              Command="{Binding DuplicateSelectedClipsCommand, Source={StaticResource ClipTrayViewModel}}" />
                    <MenuItem Header="_Merge"
                              Tag="17"
                              Icon="{Binding Source={StaticResource MergeIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}"
                              Command="{Binding MergeSelectedClipsCommand, Source={StaticResource ClipTrayViewModel}}" />
                    <Separator />
                    <MenuItem Header="Send as Email"
                              Tag="23"
                              Icon="{Binding Source={StaticResource EmailIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}"
                              Command="{Binding PlacementTarget.Tag.SendClipToEmailCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ContextMenu}}" />
                    <MenuItem Header="Duplicate As _Qr Code"
                              Tag="24"
                              Icon="{Binding Source={StaticResource QrIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}"
                              Command="{Binding PlacementTarget.Tag.CreateQrCodeFromClipCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ContextMenu}}" />
                    <Separator />
                    <MenuItem Header="Say"
                              Tag="16"
                              Icon="{Binding Source={StaticResource SpeakIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}"
                              Command="{Binding SpeakSelectedClipsAsyncCommand, Source={StaticResource ClipTrayViewModel}}" />
                    <Separator />
                    <MenuItem Header="Search"
                              Icon="{Binding Source={StaticResource SearchIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}">
                        <MenuItem Header="_Google"
                                  Icon="{Binding Source={StaticResource GoogleIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}"
                                  Command="{Binding SearchWebCommand, Source={StaticResource ClipTrayViewModel}}"
                                  CommandParameter="https://www.google.com/search?q=" />
                        <MenuItem Header="_Bing"
                                  Icon="{Binding Source={StaticResource BingIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}"
                                  Command="{Binding SearchWebCommand, Source={StaticResource ClipTrayViewModel}}"
                                  CommandParameter="https://www.bing.com/search?q=" />
                        <MenuItem Header="_DuckDuckGo"
                                  Icon="{Binding Source={StaticResource DuckIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}"
                                  Command="{Binding SearchWebCommand, Source={StaticResource ClipTrayViewModel}}"
                                  CommandParameter="https://duckduckgo.com/?q=" />
                        <MenuItem Header="_Yandex"
                                  Icon="{Binding Source={StaticResource YandexIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}"
                                  Command="{Binding SearchWebCommand, Source={StaticResource ClipTrayViewModel}}"
                                  CommandParameter="https://yandex.com/search/?text=" />
                    </MenuItem>
                    <Separator />
                    <MenuItem x:Name="ExcludeApplication"
                              Header="Exclude Application"
                              Icon="{Binding Source={StaticResource NoEntryIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}"
                              Command="{Binding PlacementTarget.Tag.ExcludeApplicationCommand, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ContextMenu}}" />
                    <MenuItem Header="Add Paste Macro For Application"
                              Icon="{Binding Source={StaticResource RobotClawIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}"
                              Command="{Binding ShowSettingsWindowCommand, Source={StaticResource SystemTrayViewModel}}"
                              CommandParameter="{Binding}" />
                </MenuItem>
                <MenuItem Header="_Selection"
                          Icon="{Binding Source={StaticResource SelectionIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}">
                    <MenuItem Header="_Bring to Front"
                              Tag="12"
                              Icon="{Binding Source={StaticResource BringToFrontIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}"
                              Command="{Binding BringSelectedClipTilesToFrontCommand, Source={StaticResource ClipTrayViewModel}}" />
                    <MenuItem Header="_Send to Back"
                              Tag="13"
                              Icon="{Binding Source={StaticResource SendToBackIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}"
                              Command="{Binding SendSelectedClipTilesToBackCommand, Source={StaticResource ClipTrayViewModel}}" />
                    <Separator />
                    <MenuItem Header="Select _All"
                              Tag="10"
                              Icon="{Binding Source={StaticResource SelectAllIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}"
                              Command="{Binding SelectAllCommand, Source={StaticResource ClipTrayViewModel}}" />
                    <MenuItem Header="_Invert Selection"
                              Tag="11"
                              Icon="{Binding Source={StaticResource InvertSelectionIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}"
                              Command="{Binding InvertSelectionCommand, Source={StaticResource ClipTrayViewModel}}" />
                </MenuItem>
                <MenuItem Header="_Hotkey"
                          Tag="14"
                          Icon="{Binding Source={StaticResource HotkeyIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}"
                          InputGestureText="{Binding ShortcutKeyString}"
                          Command="{Binding AssignHotkeyCommand, Source={StaticResource ClipTrayViewModel}}" />
                <Separator />
                <MenuItem x:Name="ClipTileColorContextMenuItem"
                          Style="{StaticResource ColorPalleteMenuItemStyle}" />
                <Separator />
                <MenuItem x:Name="PasteToAppPathMenuItem"
                          Header="Paste To Application"
                          Icon="{Binding Source={StaticResource PasteIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}" />
                <Separator />
                <MenuItem x:Name="CollectionParentMenuItem"
                          Header="Pin To _Collection"
                          Tag="8080"
                          Icon="{Binding Source={StaticResource PinToCollectionIcon}, Converter={StaticResource StringToIconConverter}, Mode=OneWay}"
                          ItemsSource="{Binding PlacementTarget.Tag.TagMenuItems,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ContextMenu}}">
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="{x:Type MenuItem}">
                            <Setter Property="Header"
                                    Value="{Binding Header}" />
                            <Setter Property="Command"
                                    Value="{Binding Command}" />
                            <Setter Property="CommandParameter"
                                    Value="{Binding CommandParameter}" />
                            <Setter Property="Icon"
                                    Value="{Binding Icon}" />
                            <Setter Property="InputGestureText"
                                    Value="{Binding InputGestureText}" />
                            <!--<Setter Property="IsCheckable"
                                                                    Value="True" />
                                                            <Setter Property="IsChecked"
                                                                    Value="{Binding IsChecked}" />-->
                        </Style>
                    </MenuItem.ItemContainerStyle>
                </MenuItem>
            </ContextMenu>
        </local:MpClipBorder.ContextMenu>
        <!--<local:MpClipBorder.Effect>
                                    <DropShadowEffect Color="DarkGray"
                                                      BlurRadius="7" />
                                </local:MpClipBorder.Effect>-->
        <Grid x:Name="ClipTileBorderGrid"
              Background="#FF3D3D3D"
              Visibility="{Binding ContainerVisibility}">
            <Grid Background="White"
                  Visibility="{Binding ContentVisibility}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="{Binding TileTitleHeight}" />
                    <RowDefinition Height="{Binding TileContentHeight}" />
                    <RowDefinition Height="{Binding TileDetailHeight}" />
                </Grid.RowDefinitions>
                <!-- Tile Title Canvas -->
                <local:MpClipTileTitleView x:Name="TileTitleView" 
                                           Grid.Row="0"
                                           DataContext="{Binding}" />
                <!-- Content Container Canvas -->
                <Canvas x:Name="ClipTileContentCanvas"
                        Grid.Row="1"
                        Grid.Column="0"
                        Width="{Binding TileContentWidth}"
                        Height="{Binding TileContentHeight}"
                        ToolTipService.InitialShowDelay="1000">
                    <!-- RichText Content -->
                    <local:MpRtbItemCollectionVIew DataContext="{Binding RichTextBoxViewModelCollection}" />
                    <!-- Image Content-->
                    <local:MpImageItemView DataContext="{Binding}" />
                    <!--File List Content -->
                    <local:MpFileListCollectionView DataContext="{Binding FileListCollectionViewModel}" />
                </Canvas>
                <!-- Selection Overlay Grid -->
                <Grid x:Name="ClipTileSelectionOverlayGrid"
                      Grid.Row="1"
                      Grid.Column="0"
                      Background="Magenta"
                      Width="{Binding TileContentWidth}"
                      Visibility="{Binding SelectionOverlayGridVisibility}"
                      Opacity="0">
                    <Grid.ToolTip>
                        <ToolTip Visibility="{Binding ToolTipVisibility}"
                                 Opacity="1"
                                 Placement="Top">
                            <ToolTip.Template>
                                <ControlTemplate>
                                    <local:MpClipBorder Background="White"
                                                        BorderThickness="1"
                                                        BorderBrush="Black"
                                                        Padding="5">
                                        <Image x:Name="ItemTooltipImage"
                                               Stretch="Fill"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Source="{Binding Path=DataContext.CopyItemBmp,RelativeSource={RelativeSource TemplatedParent}}" />
                                    </local:MpClipBorder>
                                </ControlTemplate>
                            </ToolTip.Template>
                        </ToolTip>
                    </Grid.ToolTip>
                </Grid>
                <!-- Tile Detail Grid -->
                <local:MpClipTileDetailView x:Name="TileDetailView"
                                            Grid.Row="2"
                                            DataContext="{Binding}" />
            </Grid>
            <!-- Overlays -->            
            <!-- Trial Expired -->
            <local:MpClipTileTrialExpiredOverlay DataContext="{Binding}" />
            <!-- Loading Spinner -->
            <local:MpClipTileLoadingOverlayView DataContext="{Binding}" />
        </Grid>
    </local:MpClipBorder>
</UserControl>
