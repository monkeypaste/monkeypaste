<local:MpUserControl x:Class="MpWpfApp.MpNotificationBalloonView"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:tb="http://www.hardcodet.net/taskbar"
                     xmlns:local="clr-namespace:MpWpfApp"
                     xmlns:pcl="clr-namespace:MonkeyPaste;assembly=MonkeyPaste"
                     x:TypeArguments="pcl:MpNotificationBalloonViewModel"
                     mc:Ignorable="d"
                     d:DesignHeight="100"
                     d:DesignWidth="800"
                     MinHeight="125"
                     Width="350"
                     d:DataContext="{d:DesignInstance Type=pcl:MpNotificationBalloonViewModel,
                                                      IsDesignTimeCreatable=False}">

    <local:MpUserControl.Resources>
        <Storyboard x:Key="FadeIn">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                           Storyboard.TargetName="grid"
                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00"
                                      Value="0" />
                <SplineDoubleKeyFrame KeyTime="00:00:01"
                                      Value="0.95" />
                <SplineDoubleKeyFrame KeyTime="00:00:03"
                                      Value="0.95" />
                <!--				<SplineDoubleKeyFrame KeyTime="00:00:05" Value="0"/>-->
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HighlightCloseButton">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                           Storyboard.TargetName="imgClose"
                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00"
                                      Value="0.4" />
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000"
                                      Value="1" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FadeCloseButton">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                           Storyboard.TargetName="imgClose"
                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00"
                                      Value="1" />
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000"
                                      Value="0.4" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FadeBack">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                           Storyboard.TargetName="grid"
                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00"
                                      Value="1" />
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000"
                                      Value="1" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FadeOut"
                    Completed="OnFadeOutCompleted">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                           Storyboard.TargetName="grid"
                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00"
                                      Value="1" />
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000"
                                      Value="0.2" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <ControlTemplate x:Key="ButtonControlTemplate"
                         TargetType="{x:Type Button}">
            <Border x:Name="OuterBorder"
                    BorderBrush="Transparent"
                    BorderThickness="1"
                    CornerRadius="2">
                <Border x:Name="InnerBorder"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="1"
                        CornerRadius="2">
                    <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True"
                                      Margin="{TemplateBinding Padding}" />
                </Border>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter TargetName="OuterBorder"
                            Property="BorderBrush"
                            Value="#FF7CA0CC" />
                    <Setter TargetName="InnerBorder"
                            Property="BorderBrush"
                            Value="#FFE4EFFD" />
                    <Setter TargetName="InnerBorder"
                            Property="Background"
                            Value="#FFDAE7F5" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter TargetName="OuterBorder"
                            Property="BorderBrush"
                            Value="#FF2E4E76" />
                    <Setter TargetName="InnerBorder"
                            Property="BorderBrush"
                            Value="#FF116EE4" />
                    <Setter TargetName="InnerBorder"
                            Property="Background"
                            Value="#FF3272B8" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <DataTemplate x:Key="UserActionNotificationTemplate">
            <local:MpUserActionNotificationView DataContext="{Binding}" />
        </DataTemplate>
        <DataTemplate x:Key="LoaderNotificationTemplate">
            <local:MpLoaderNotificationView DataContext="{Binding}" />
        </DataTemplate>
        <local:MpNotificationTemplateSelector x:Key="NotificationTemplateSelector" />
    </local:MpUserControl.Resources>
    <local:MpUserControl.Triggers>
        <EventTrigger RoutedEvent="tb:TaskbarIcon.BalloonShowing">
            <BeginStoryboard Storyboard="{StaticResource FadeIn}"
                             x:Name="FadeIn_BeginStoryboard" />
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseEnter"
                      SourceName="imgClose">
            <BeginStoryboard Storyboard="{StaticResource HighlightCloseButton}"
                             x:Name="HighlightCloseButton_BeginStoryboard" />
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseLeave"
                      SourceName="imgClose">
            <BeginStoryboard Storyboard="{StaticResource FadeCloseButton}"
                             x:Name="FadeCloseButton_BeginStoryboard" />
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseEnter">
            <StopStoryboard BeginStoryboardName="FadeIn_BeginStoryboard" />
            <BeginStoryboard x:Name="FadeBack_BeginStoryboard1"
                             Storyboard="{StaticResource FadeBack}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="tb:TaskbarIcon.BalloonClosing">
            <BeginStoryboard Storyboard="{StaticResource FadeOut}"
                             x:Name="FadeOut_BeginStoryboard" />
        </EventTrigger>
    </local:MpUserControl.Triggers>
    <Border HorizontalAlignment="Stretch"
            BorderThickness="7"
            BorderBrush="WhiteSmoke"
            Background="MediumPurple">
        <Grid x:Name="grid"
              MouseLeftButtonUp="grid_MouseLeftButtonUp"
              MouseEnter="grid_MouseEnter">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.35*" />
                <ColumnDefinition Width="0.75*" />
            </Grid.ColumnDefinitions>
            <Image Grid.Row="0"
                   Grid.Column="0"
                   Grid.RowSpan="3"
                   Width="72"
                   Height="72"
                   Source="{Binding CurrentNotificationViewModel.IconImageBase64,
                                    Converter={StaticResource Base64StringToBitmapSourceConverter}}"
                   Stretch="Fill"
                   VerticalAlignment="Top"
                   Margin="10,5,0,0" />
            <local:MpOneWayCheckBox Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Bottom"
                                    VerticalContentAlignment="Center"
                                    Margin="7,0,0,5"
                                    IsEnabled="{Binding CurrentNotificationViewModel.CanChooseNotShowAgain}"
                                    IsChecked="{Binding CurrentNotificationViewModel.DoNotShowAgain,
                                                        Mode=TwoWay,
                                                        UpdateSourceTrigger=PropertyChanged,
                                                        NotifyOnSourceUpdated=True,
                                                        NotifyOnTargetUpdated=True}">
                <local:MpOneWayCheckBox.Content>
                    <TextBlock MaxWidth="100"
                               Foreground="White"
                               FontSize="9"
                               VerticalAlignment="Center"
                               HorizontalAlignment="Right"
                               TextWrapping="Wrap"
                               Text="Do Not Show Again" />
                </local:MpOneWayCheckBox.Content>
            </local:MpOneWayCheckBox>
            <Button x:Name="CloseButton"
                    Grid.Column="1"
                    Grid.Row="0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Click="CloseButton_Click"
                    Template="{StaticResource ButtonControlTemplate}"
                    Height="23"
                    Grid.RowSpan="2">
                <Image Width="15"
                       Height="15"
                       Stretch="Fill"
                       ToolTip="Close"
                       x:Name="imgClose">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter Property="Source"
                                            Value="{Binding .,
                                                            Converter={StaticResource StringResourceToImageSourceConverter},
                                                            ConverterParameter={StaticResource CloseOverIcon}}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver"
                                         Value="False">
                                    <Setter Property="Source"
                                            Value="{Binding .,
                                                            Converter={StaticResource StringResourceToImageSourceConverter},
                                                            ConverterParameter={StaticResource CloseIcon}}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
            </Button>
            <ContentControl Grid.Column="1"
                            Grid.RowSpan="4"
                            Content="{Binding CurrentNotificationViewModel}"
                            ContentTemplateSelector="{StaticResource NotificationTemplateSelector}" />
        </Grid>
    </Border>

</local:MpUserControl>
