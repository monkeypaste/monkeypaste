<Application x:Class="MpWpfApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:MpWpfApp"
             xmlns:pcl="clr-namespace:MonkeyPaste;assembly=MonkeyPaste"
             xmlns:s="clr-namespace:System;assembly=mscorlib"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             d1p1:Ignorable="d"
             DispatcherUnhandledException="Application_DispatcherUnhandledException"
             Exit="Application_Exit">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MpWpfApp;component/Styles/Buttons/MpButtonResourceDictionary.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MpWpfApp;component/Styles/Constants/MpConstantsResourceDictionary.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MpWpfApp;component/Styles/Constants/Icons/MpIconsResourceDictionary.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MpWpfApp;component/Styles/Converters/MpConvertersResourceDictionary.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MpWpfApp;component/Styles/ListBoxes/MpActionPropertiesListBoxItemResourceDictionary.xaml" />
                <!--<ResourceDictionary Source="pack://application:,,,/MpWpfApp;component/Styles/Tooltips/MpTooltipResourceDictionary.xaml" />-->
                <!--<ResourceDictionary Source="pack://application:,,,/MpWpfApp;component/Styles/Menus/MpContextMenuItemResourceDictionary.xaml" />-->
                <!--<ResourceDictionary Source="pack://application:,,,/MpWpfApp;component/Styles/Menus/MpSelectorItemResourceDictionary.xaml" />-->
                <ResourceDictionary Source="pack://application:,,,/MpWpfApp;component/Styles/Designer/MpDesignerResourceDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="GridSplitter">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                             Value="True">
                        <Setter Property="Background"
                                Value="Yellow" />
                    </Trigger>
                    <Trigger Property="IsMouseOver"
                             Value="False">
                        <Setter Property="Background"
                                Value="Cornsilk" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="ComboBoxItem">
                <Setter Property="HorizontalAlignment"
                        Value="Left" />
                <Setter Property="VerticalAlignment"
                        Value="Top" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Left" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
            </Style>

            <Style TargetType="{x:Type ItemsControl}">
                <Setter Property="HorizontalAlignment"
                        Value="Left" />
                <Setter Property="VerticalAlignment"
                        Value="Top" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Left" />
                <Setter Property="VerticalContentAlignment"
                        Value="Top" />
            </Style>
            <Style TargetType="{x:Type ListBoxItem}">
                <Setter Property="HorizontalAlignment"
                        Value="Left" />
                <Setter Property="VerticalAlignment"
                        Value="Top" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Left" />
                <Setter Property="VerticalContentAlignment"
                        Value="Top" />
            </Style>
            <Style TargetType="{x:Type TreeViewItem}">
                <Setter Property="HorizontalAlignment"
                        Value="Left" />
                <Setter Property="VerticalAlignment"
                        Value="Top" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Left" />
                <Setter Property="VerticalContentAlignment"
                        Value="Top" />
            </Style>

            <!--  CONTEXT MENU  -->
            <local:MpContextMenuItemContainerSelector x:Key="MenuItemContainerSelector" />
            <!--  MenuItem  -->
            <HierarchicalDataTemplate x:Key="MenuItem"
                                      DataType="{x:Type pcl:MpMenuItemViewModel}"
                                      ItemsSource="{Binding SubItems}">
                <MenuItem Command="{Binding Command}"
                          CommandParameter="{Binding CommandParameter}"
                          Header="{Binding Header}"
                          Icon="{Binding IconResourceKey,
                                         Converter={StaticResource StringToIconConverter}}"
                          InputGestureText="{Binding InputGestureText}"
                          ItemContainerTemplateSelector="{StaticResource MenuItemContainerSelector}"
                          ItemsSource="{Binding SubItems}"
                          UsesItemContainerTemplate="true"
                          Visibility="{Binding IsVisible,
                                               Converter={StaticResource BoolToVisibilityConverter}}" />
            </HierarchicalDataTemplate>
            <!--  User MenuItem  -->
            <HierarchicalDataTemplate x:Key="UserMenuItem"
                                      DataType="{x:Type pcl:MpMenuItemViewModel}"
                                      ItemsSource="{Binding SubItems}">
                <MenuItem Command="{Binding Command}"
                          CommandParameter="{Binding CommandParameter}"
                          Header="{Binding Header}"
                          Icon="{Binding IconId,
                                         Converter={StaticResource IconIdToIconConverter}}"
                          InputGestureText="{Binding InputGestureText}"
                          ItemContainerTemplateSelector="{StaticResource MenuItemContainerSelector}"
                          ItemsSource="{Binding SubItems}"
                          UsesItemContainerTemplate="true"
                          Visibility="{Binding IsVisible,
                                               Converter={StaticResource BoolToVisibilityConverter}}" />
            </HierarchicalDataTemplate>
            <!--  Checked Tag Menu Item  -->
            <HierarchicalDataTemplate x:Key="CheckedTagMenuItem"
                                      DataType="{x:Type pcl:MpMenuItemViewModel}"
                                      ItemsSource="{Binding SubItems}">
                <!--  Currently only for Tags  -->
                <MenuItem PreviewMouseDown="Button_PreviewMouseDown"
                          InputGestureText="{Binding InputGestureText}"
                          ItemContainerTemplateSelector="{StaticResource MenuItemContainerSelector}"
                          ItemsSource="{Binding SubItems}"
                          UsesItemContainerTemplate="true"
                          Visibility="{Binding IsVisible,
                                               Converter={StaticResource BoolToVisibilityConverter}}">
                    <MenuItem.Icon>
                        <Image Width="15"
                               Height="15"
                               Source="{Binding IconHexStr,
                                                Converter={StaticResource StringHexToImageSourceConverter},
                                                ConverterParameter=checked}" />
                    </MenuItem.Icon>
                    <MenuItem.Header>
                        <Label Content="{Binding Header}" />
                    </MenuItem.Header>
                    <!--<MenuItem.Header>
                        <Button
                            Background="Transparent"
                            BorderThickness="0"
                            PreviewMouseDown="Button_PreviewMouseDown">
                            <DockPanel LastChildFill="False">
                                <Image
                                    Width="15"
                                    Height="15"
                                    DockPanel.Dock="Left"
                                    Source="{Binding IconHexStr,
                                                     Converter={StaticResource StringHexToImageSourceConverter},
                                                     ConverterParameter=checked}" />
                                <Label
                                    Content="{Binding Header}"
                                    DockPanel.Dock="Right" />
                            </DockPanel>
                        </Button>
                    </MenuItem.Header>-->
                </MenuItem>
            </HierarchicalDataTemplate>
            <!--  Unchecked Tag Menu Item  -->
            <HierarchicalDataTemplate x:Key="UncheckedTagMenuItem"
                                      DataType="{x:Type pcl:MpMenuItemViewModel}"
                                      ItemsSource="{Binding SubItems}">
                <!--  Currently only for Tags  -->
                <MenuItem PreviewMouseDown="Button_PreviewMouseDown"
                          InputGestureText="{Binding InputGestureText}"
                          ItemContainerTemplateSelector="{StaticResource MenuItemContainerSelector}"
                          ItemsSource="{Binding SubItems}"
                          UsesItemContainerTemplate="True"
                          Visibility="{Binding IsVisible,
                                               Converter={StaticResource BoolToVisibilityConverter}}">
                    <MenuItem.Icon>
                        <Image Width="15"
                               Height="15"
                               Source="{Binding IconHexStr,
                                                Converter={StaticResource StringHexToImageSourceConverter}}" />
                    </MenuItem.Icon>
                    <MenuItem.Header>
                        <Label Content="{Binding Header}" />
                    </MenuItem.Header>
                    <!--<MenuItem.Header>
                        <Button
                            HorizontalAlignment="Stretch"
                            Background="Transparent"
                            BorderThickness="0"
                            PreviewMouseDown="Button_PreviewMouseDown">
                            <DockPanel LastChildFill="True">
                                <Image
                                    Width="15"
                                    Height="15"
                                    DockPanel.Dock="Left"
                                    Source="{Binding IconHexStr,
                                                     Converter={StaticResource StringHexToImageSourceConverter}}" />
                                <Label Content="{Binding Header}" />
                            </DockPanel>
                        </Button>
                    </MenuItem.Header>-->
                </MenuItem>

            </HierarchicalDataTemplate>
            <!--  Paste To Path Runtime Item  -->
            <DataTemplate x:Key="PasteToPathRuntimeMenuItem"
                          DataType="{x:Type pcl:MpMenuItemViewModel}">
                <MenuItem Command="{Binding Command}"
                          CommandParameter="{Binding CommandParameter}"
                          Visibility="{Binding IsVisible,
                                               Converter={StaticResource BoolToVisibilityConverter}}">
                    <MenuItem.Icon>
                        <Image Source="{Binding IconId,
                                                Converter={StaticResource IconIdToImageSourceConverter}}" />
                    </MenuItem.Icon>
                    <MenuItem.Header>
                        <DockPanel LastChildFill="False">
                            <Label Content="{Binding Header}"
                                   DockPanel.Dock="Left" />
                            <Button Width="20"
                                    Height="20"
                                    HorizontalAlignment="Right"
                                    local:MpHoverableExtension.IsEnabled="True"
                                    local:MpHoverableExtension.IsHovering="{Binding CanHide,
                                                                                    Mode=TwoWay}"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    Command="{Binding HideHandleCommand,
                                                      Source={x:Static local:MpPasteToAppPathViewModelCollection.Instance}}"
                                    CommandParameter="{Binding CommandParameter}"
                                    Cursor="Hand"
                                    DockPanel.Dock="Right">
                                <StackPanel>
                                    <Image Width="20"
                                           Height="20"
                                           Source="{Binding .,
                                                            Source={StaticResource OpenEyeIcon}}"
                                           Visibility="{Binding CanHide,
                                                                Converter={StaticResource BoolToVisibilityFlipConverter}}" />
                                    <Image Width="20"
                                           Height="20"
                                           Source="{Binding .,
                                                            Source={StaticResource ClosedEyeIcon}}"
                                           Visibility="{Binding CanHide,
                                                                Converter={StaticResource BoolToVisibilityConverter}}" />
                                </StackPanel>
                            </Button>
                        </DockPanel>
                    </MenuItem.Header>
                </MenuItem>
            </DataTemplate>
            <!--  Seperator  -->
            <DataTemplate x:Key="SeperatorMenuItem"
                          DataType="{x:Type pcl:MpMenuItemViewModel}">
                <Separator />
            </DataTemplate>
            <!--  Headered Seperator  -->
            <DataTemplate x:Key="HeaderedSeperatorMenuItem"
                          DataType="{x:Type pcl:MpMenuItemViewModel}">
                <Separator>
                    <Separator.Template>
                        <ControlTemplate>
                            <Border Background="PaleGoldenrod"
                                    BorderBrush="Black"
                                    BorderThickness="1"
                                    CornerRadius="2">
                                <Border.Padding>
                                    <MultiBinding Converter="{StaticResource DoubleToThicknessIndentLevelConverter}">
                                        <Binding Path="DataContext.HeaderIndentLevel"
                                                 RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                                 AncestorType=Separator}" />
                                        <Binding Path="DataContext.HeaderIndentSize"
                                                 RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                                 AncestorType=Separator}" />
                                        <!--<Binding>
                                    <Binding.Source>
                                        <sys:String>left</sys:String>
                                    </Binding.Source>
                                </Binding>-->
                                    </MultiBinding>
                                </Border.Padding>
                                <TextBlock FontWeight="Bold"
                                           Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                         AncestorType=Separator},
                                                          Path=DataContext.Header}" />
                            </Border>
                        </ControlTemplate>
                    </Separator.Template>
                </Separator>
            </DataTemplate>
            <!--  Color Pallete ListBox Menu Item  -->
            <DataTemplate x:Key="ColorPalleteMenuItem"
                          DataType="{x:Type pcl:MpMenuItemViewModel}">
                <MenuItem>
                    <MenuItem.Header>
                        <ListBox Margin="5"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Stretch"
                                 HorizontalContentAlignment="Left"
                                 VerticalContentAlignment="Top"
                                 Background="Transparent"
                                 BorderThickness="0"
                                 ItemsSource="{Binding SubItems}"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                 SelectionMode="Single">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel MaxWidth="240"
                                               IsItemsHost="True"
                                               Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="IsSelected"
                                            Value="{Binding IsSelected}" />
                                    <Setter Property="FocusVisualStyle"
                                            Value="{x:Null}" />
                                    <Setter Property="HorizontalContentAlignment"
                                            Value="Left" />
                                    <Setter Property="VerticalContentAlignment"
                                            Value="Top" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                <ContentPresenter />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>
                            <ListBox.ItemTemplate>
                                <!--  Color Pallete Item  -->
                                <DataTemplate>
                                    <Button local:MpHoverableExtension.IsEnabled="True"
                                            local:MpHoverableExtension.IsHovering="{Binding IsHovering,
                                                                                            Mode=TwoWay}"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            Command="{Binding Command}"
                                            CommandParameter="{Binding CommandParameter}">
                                        <Border Width="15"
                                                Height="15"
                                                Padding="2.5"
                                                Background="{Binding Header,
                                                                     Converter={StaticResource StringHexToBrushConverter}}"
                                                BorderBrush="{Binding BorderHexColor,
                                                                      Converter={StaticResource StringHexToBrushConverter}}"
                                                BorderThickness="1"
                                                CornerRadius="2">
                                            <Image HorizontalAlignment="Stretch"
                                                   VerticalAlignment="Stretch"
                                                   Source="{Binding .,
                                                                    Source={StaticResource PlusIcon}}"
                                                   Stretch="Fill"
                                                   ToolTip="Custom Color..."
                                                   ToolTipService.InitialShowDelay="1"
                                                   Visibility="{Binding IsVisible,
                                                                        Converter={StaticResource BoolToVisibilityConverter},
                                                                        ConverterParameter={StaticResource Hide}}" />
                                        </Border>
                                    </Button>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </MenuItem.Header>
                </MenuItem>
            </DataTemplate>


            <!--  SELECTOR MENU  -->
            <local:MpSelectorItemDataTemplateSelector x:Key="SelectorItemDataTemplateSelector" />
            <!--  SelectorItem  -->
            <DataTemplate x:Key="SelectorItem"
                          DataType="{x:Type pcl:MpMenuItemViewModel}">
                <Button Background="Transparent"
                        BorderThickness="0"
                        Command="{Binding Command}"
                        CommandParameter="{Binding CommandParameter}"
                        Visibility="{Binding IsVisible,
                                             Converter={StaticResource BoolToVisibilityConverter}}">
                    <Border Margin="0"
                            HorizontalAlignment="Stretch"
                            local:MpHoverableExtension.IsEnabled="True"
                            Background="Transparent"
                            BorderBrush="Black"
                            BorderThickness="0"
                            CornerRadius="3">
                        <DockPanel LastChildFill="False">
                            <Image Width="15"
                                   Height="15"
                                   Margin="5,0,5,0"
                                   DockPanel.Dock="Left"
                                   Source="{Binding IconSourceObj,
                                                    Converter={StaticResource ObjectToImageSourceOrIconConverter}}"
                                   Visibility="{Binding IsIconHidden,
                                                        Converter={StaticResource BoolToVisibilityFlipConverter}}" />
                            <local:MpSpinnerApple Margin="0,0,5,0"
                                                  VerticalAlignment="Center"
                                                  DockPanel.Dock="Right"
                                                  Visibility="{Binding IsBusy,
                                                                       Converter={StaticResource BoolToVisibilityConverter}}" />
                            <TextBlock MinWidth="50"
                                       MaxWidth="140"
                                       Margin="2,0,5,0"
                                       Padding="1"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Background="Transparent"
                                       FontSize="12"
                                       Foreground="Black"
                                       Text="{Binding Header}"
                                       ToolTip="{Binding Tooltip,
                                                         Converter={StaticResource ObjectToTooltipConverter}}" />
                        </DockPanel>
                    </Border>
                </Button>
            </DataTemplate>
            <!--  Seperator  -->
            <DataTemplate x:Key="SeperatorSelectorItem"
                          DataType="{x:Type pcl:MpMenuItemViewModel}">
                <Separator />
            </DataTemplate>
            <!--  Headered Seperator  -->
            <DataTemplate x:Key="HeaderedSeperatorSelectorItem"
                          DataType="{x:Type pcl:MpMenuItemViewModel}">
                <Separator IsHitTestVisible="False">
                    <Separator.Template>
                        <ControlTemplate>
                            <Border Width="1000"
                                    Background="PaleGoldenrod"
                                    BorderBrush="Black"
                                    BorderThickness="1"
                                    CornerRadius="2">
                                <Border.Padding>
                                    <MultiBinding Converter="{StaticResource DoubleToThicknessIndentLevelConverter}">
                                        <Binding Path="DataContext.HeaderIndentLevel"
                                                 RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                                 AncestorType=Separator}" />
                                        <Binding Path="DataContext.HeaderIndentSize"
                                                 RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                                 AncestorType=Separator}" />
                                        <!--<Binding>
                                    <Binding.Source>
                                        <sys:String>left</sys:String>
                                    </Binding.Source>
                                </Binding>-->

                                    </MultiBinding>
                                </Border.Padding>
                                <TextBlock FontWeight="Bold"
                                           Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                                                         AncestorType=Separator},
                                                          Path=DataContext.Header}" />
                            </Border>
                        </ControlTemplate>
                    </Separator.Template>
                </Separator>
            </DataTemplate>

            <!--  Color Palletes  -->
            <SolidColorBrush x:Key="AppColorDark">
                DarkViolet
            </SolidColorBrush>
            <SolidColorBrush x:Key="AppColorLight">
                MediumPurple
            </SolidColorBrush>
            <SolidColorBrush x:Key="ClipTileTitleTextBoxBackgroundBrush"
                             Opacity="0.5"
                             Color="White" />
            <SolidColorBrush x:Key="ClipTileDetectedObjectTextBoxBackgroundBrush"
                             Opacity="0.5"
                             Color="Black" />
            <!--  Color Palletes End  -->
            <Style x:Key="DefaultItemStyle"
                   TargetType="{x:Type MenuItem}">
                <Setter Property="Header"
                        Value="{Binding Header}" />
                <Setter Property="Command"
                        Value="{Binding Command}" />
                <Setter Property="CommandParameter"
                        Value="{Binding CommandParameter}" />
                <Setter Property="Icon"
                        Value="{Binding Icon}" />
                <Setter Property="InputGestureText"
                        Value="{Binding InputGestureText}" />
                <Setter Property="IsCheckable"
                        Value="{Binding IsCheckable}" />
                <Setter Property="IsChecked"
                        Value="{Binding IsChecked}" />
                <Setter Property="ItemsSource"
                        Value="{Binding SubItems}" />
                <!--<Setter Property="ItemContainerStyle"
                    Value="{StaticResource DefaultItemStyle}"/>
            <Setter Property="ItemTemplateSelector"
                    Value="{StaticResource MenuItemSelector}"/>-->
            </Style>

            <!--  Color Pallete Menu Item  -->
            <Style x:Key="ColorPalleteMenuItemStyle"
                   TargetType="{x:Type MenuItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border x:Name="Bd"
                                    Uid="Border_38"
                                    Padding="31,0,17,0"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="ContentPresenter"
                                                  Uid="ContentPresenter_33"
                                                  Grid.Column="1"
                                                  Margin="{TemplateBinding Padding}"
                                                  Content="{TemplateBinding Header}"
                                                  ContentSource="Header"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted"
                                         Value="True">
                                    <Setter TargetName="Bd"
                                            Property="Background"
                                            Value="#00FFFFFF" />
                                    <Setter TargetName="Bd"
                                            Property="BorderBrush"
                                            Value="#00FFFFFF" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background"
                        Value="Transparent" />
                <Style.Triggers>
                    <Trigger Property="IsHighlighted"
                             Value="True">
                        <Setter Property="Background"
                                Value="Transparent" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>