
// #region Globals

var IsLoaded = false;
//var quill;
//var availableTemplates = null;

const DomParser = new DOMParser();
const DomSerializer = new XMLSerializer();

var IsDebug = true;

var IsTesting = false;

var WindowsEnv = 'Windows';
var IosEnv = 'Ios';
var AndroidEnv = 'Android';
var MacEnv = 'Mac';
var LinuxEnv = 'Linux';
var WebEnv = 'Web';
var UknownEnv = 'Unknown';

var EnvName = "";

// #endregion Globals

// #region Life Cycle
function init_test() {
	IsTesting = true;

	let empty_sample = '';
	let sample1 = "<html><body><!--StartFragment--><p style='font-family: &quot;Segoe UI&quot;, Arial, sans-serif; font-size: 15px; line-height: 1.4; color: rgb(17, 17, 17); font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>This awesome!! article can be considered as the fourth instalment in the following sequence of articles:</p><p style='font-family: &quot;Segoe UI&quot;, Arial, sans-serif; font-size: 15px; line-height: 1.4; color: rgb(17, 17, 17); font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>This article can be considered as the fourth instalment in the following sequence of articles:</p><p style='font-family: &quot;Segoe UI&quot;, Arial, sans-serif; font-size: 15px; line-height: 1.4; color: rgb(17, 17, 17); font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>This article can be considered as the fourth instalment in the following sequence of articles:</p><ol style='margin: 10px 0px; padding: 0px 0px 0px 40px; border: 0px; color: rgb(17, 17, 17); font-family: &quot;Segoe UI&quot;, Arial, sans-serif; font-size: 15px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'><li style='margin: 0px; padding: 0px; border: 0px; font-family: &quot;Segoe UI&quot;, Arial, sans-serif; font-size: 15px; line-height: 1.4; color: rgb(17, 17, 17);'><a href='https://www.codeproject.com/Articles/5308645/Multiplatform-UI-Coding-with-AvaloniaUI-in-Easy-Sa'	style='margin: 0px; padding: 0px; border: 0px; text-decoration: none; color: rgb(0, 87, 130);'>Multiplatform UI Coding with AvaloniaUI in Easy Samples. Part 1 - AvaloniaUI Building Blocks</a></li><li style='margin: 0px; padding: 0px; border: 0px; font-family: &quot;Segoe UI&quot;, Arial, sans-serif; font-size: 15px; line-height: 1.4; color: rgb(17, 17, 17);'><a href='https://www.codeproject.com/Articles/5314369/Basics-of-XAML-in-Easy-Samples-for-Multiplatform-A'	style='margin: 0px; padding: 0px; border: 0px; text-decoration: none; color: rgb(0, 87, 130);'>Basics of XAML in Easy Samples for Multiplatform Avalonia .NET Framework</a></li><li style='margin: 0px; padding: 0px; border: 0px; font-family: &quot;Segoe UI&quot;, Arial, sans-serif; font-size: 15px; line-height: 1.4; color: rgb(17, 17, 17);'><a href='https://www.codeproject.com/Articles/5311995/Multiplatform-Avalonia-NET-Framework-Programming-B'	style='margin: 0px; padding: 0px; border: 0px; text-decoration: none; color: rgb(0, 87, 130);'>Multiplatform Avalonia .NET Framework Programming Basic Concepts in Easy Samples</a></li></ol><p style='font-family: &quot;Segoe UI&quot;, Arial, sans-serif; font-size: 15px; line-height: 1.4; color: rgb(17, 17, 17); font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;'>If you know WPF, you can read this article without reading the previous ones, otherwise, you should read the previous articles first.</p><!--EndFragment--></body></html>";
	let sample_big = sample1 + sample1 + sample1 + sample1 + sample1 + sample1 + sample1 + sample1 + sample1;
	//let sample_buggy_table = '<h2 style="box-sizing: border-box; color: rgb(10, 10, 8); font-weight: 600; line-height: 1.3; margin: 0px; font-size: 26px; font-family: Lato, Roboto, Arial, Tahoma, sans-serif; padding: 0px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><span id="All_Attributes_of_the_anchor_Element" style="box-sizing: border-box;">All Attributes of the<span>�</span><a href="https://html.com/tags/a/" style="box-sizing: border-box; background: 0px 0px; color: rgb(18, 18, 18); text-decoration: none; transition: all 0.2s ease-in-out 0s;"><code style="box-sizing: border-box; font-family: monospace, monospace; font-size: 26px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">anchor</code></a><span>�</span>Element</span></h2><table style="box-sizing: border-box; border-collapse: collapse; border-spacing: 0px; border-top: 0px; margin: 0px 0px 1.5em; max-width: 100%; position: relative; table-layout: fixed; width: 2691.22px; z-index: 1; color: rgb(0, 0, 0); font-family: Lato, Roboto, Arial, Tahoma, sans-serif; font-size: 10px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><tbody style="box-sizing: border-box;"><tr style="box-sizing: border-box; border-bottom: 1px solid rgb(240, 240, 240);"><th style="box-sizing: border-box; padding: 12px; background: rgba(0, 0, 0, 0.05); font-weight: 700; border-bottom: 1px solid rgba(0, 0, 0, 0.05); text-align: left; font-family: inherit; font-size: inherit; vertical-align: middle;">Attribute name</th><th style="box-sizing: border-box; padding: 12px; background: rgba(0, 0, 0, 0.05); font-weight: 700; border-bottom: 1px solid rgba(0, 0, 0, 0.05); text-align: left; font-family: inherit; font-size: inherit; vertical-align: middle;">Values</th><th style="box-sizing: border-box; padding: 12px; background: rgba(0, 0, 0, 0.05); font-weight: 700; border-bottom: 1px solid rgba(0, 0, 0, 0.05); text-align: left; font-family: inherit; font-size: inherit; vertical-align: middle;">Notes</th></tr><tr style="box-sizing: border-box; border-bottom: 1px solid rgb(240, 240, 240);"><td style="box-sizing: border-box; padding: 12px; border-bottom: 1px solid rgba(0, 0, 0, 0.05); font-family: inherit; font-size: inherit; vertical-align: middle;"><a href="https://html.com/attributes/a-hreflang/" style="box-sizing: border-box; background: 0px 0px; color: rgb(63, 136, 197); text-decoration: none; transition: all 0.2s ease-in-out 0s;">hreflang</a></td><td style="box-sizing: border-box; padding: 12px; border-bottom: 1px solid rgba(0, 0, 0, 0.05); font-family: inherit; font-size: inherit; vertical-align: middle;"></td><td style="box-sizing: border-box; padding: 12px; border-bottom: 1px solid rgba(0, 0, 0, 0.05); font-family: inherit; font-size: inherit; vertical-align: middle;">Specifies the language of the linked resource.</td></tr><tr style="box-sizing: border-box; border-bottom: 1px solid rgb(240, 240, 240);"><td style="box-sizing: border-box; padding: 12px; border-bottom: 1px solid rgba(0, 0, 0, 0.05); font-family: inherit; font-size: inherit; vertical-align: middle;"><a href="https://html.com/attributes/a-download/" style="box-sizing: border-box; background: 0px 0px; color: rgb(63, 136, 197); text-decoration: none; transition: all 0.2s ease-in-out 0s;">download</a></td><td style="box-sizing: border-box; padding: 12px; border-bottom: 1px solid rgba(0, 0, 0, 0.05); font-family: inherit; font-size: inherit; vertical-align: middle;"></td><td style="box-sizing: border-box; padding: 12px; border-bottom: 1px solid rgba(0, 0, 0, 0.05); font-family: inherit; font-size: inherit; vertical-align: middle;">Directs the browser to download the linked resource rather than opening it.</td></tr><tr style="box-sizing: border-box; border-bottom: 1px solid rgb(240, 240, 240);"><td style="box-sizing: border-box; padding: 12px; border-bottom: 1px solid rgba(0, 0, 0, 0.05); font-family: inherit; font-size: inherit; vertical-align: middle;"><a href="https://html.com/attributes/a-target/" style="box-sizing: border-box; background: 0px 0px; color: rgb(63, 136, 197); text-decoration: none; transition: all 0.2s ease-in-out 0s;">target</a></td><td style="box-sizing: border-box; padding: 12px; border-bottom: 1px solid rgba(0, 0, 0, 0.05); font-family: inherit; font-size: inherit; vertical-align: middle;">_blank<br style="box-sizing: border-box;">_parent<br style="box-sizing: border-box;">_self<br style="box-sizing: border-box;">_top<br style="box-sizing: border-box;">frame�name</td><td style="box-sizing: border-box; padding: 12px; border-bottom: 1px solid rgba(0, 0, 0, 0.05); font-family: inherit; font-size: inherit; vertical-align: middle;">Specifies the context in</td></tr></tbody></table><span style="box-sizing: border-box; color: rgb(0, 0, 0); font-family: Lato, Roboto, Arial, Tahoma, sans-serif; font-size: 10px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;"><br style="box-sizing: border-box;"><br style="box-sizing: border-box;">Read more:<span>�</span><a href="https://html.com/attributes/a-target/#ixzz7eVW0Csar" style="box-sizing: border-box; background: 0px 0px; color: rgb(0, 51, 153); text-decoration: none; transition: all 0.2s ease-in-out 0s;">https://html.com/attributes/a-target/#ixzz7eVW0Csar</a></span>';
	let sample_list1 = '<ol><li>this</li><li>is<ol><li>a</li><li>test<ol><li>of</li><li>class</li><li>level</li><li><br/></li></ol></li></ol></li></ol>';
	let sample_table_list_templates = "<p> <span class='template-blot' templateguid='b559388c-ebb6-4afc-85f2-42e09b5dd9d3' templatename='Template #5' templatetype='dynamic' templatecolor='#24BC12' templatedata='' templatetext='undefined' templatedeltaformat='{}' templatehtmlformat='H' isfocus='false' spellcheck='false' draggable='false' contenteditable='false'>Template #5</span>Hi th<span class='template-blot' templateguid='c2ffc233-c356-4481-93ff-e0d84830ff1b' templatename='Template #1' templatetype='dynamic' templatecolor='#368D40' templatedata='' templatetext='undefined' templatedeltaformat='{}' templatehtmlformat='i' isfocus='false' spellcheck='false' draggable='false' contenteditable='false'>Template #1</span>is is </p><p><br></p><p>a test! How are you do<span class='template-blot' templateguid='d93c058d-f568-4501-a7a1-6e61e2f9be20' templatename='Template #2' templatetype='dynamic' templatecolor='#F3E2C3' templatedata='' templatetext='undefined' templatedeltaformat='{}' templatehtmlformat='i' isfocus='false' spellcheck='false' draggable='false' contenteditable='false'>Template #2</span>ing? </p><ol><li data-list='ordered'><span class='ql-ui' contenteditable='false'></span>yup</li><li data-list='ordered'><span class='ql-ui' contenteditable='false'></span>su[</li></ol><p><br></p><p><br></p><div class='quill-better-table-wrapper'><table class='quill-better-table'><colgroup><col width='206'><col width='100'><col width='100'><col width='100'></colgroup><tbody><tr data-row='row-8pxv'><td data-row='row-8pxv' rowspan='1' colspan='1'><p class='qlbt-cell-line' data-row='row-8pxv' data-cell='cell-auif' data-rowspan='1' data-colspan='1'><br></p></td><td data-row='row-8pxv' rowspan='1' colspan='1'><p class='qlbt-cell-line' data-row='row-8pxv' data-cell='cell-fczg' data-rowspan='1' data-colspan='1'><br></p></td><td data-row='row-8pxv' rowspan='1' colspan='1'><p class='qlbt-cell-line' data-row='row-8pxv' data-cell='cell-46vq' data-rowspan='1' data-colspan='1'> <span class='template-blot' templateguid='4ce8dbd0-6c62-4b0d-8e0f-0afe69495c38' templatename='Template #6' templatetype='datetime' templatecolor='#B5BF44' templatedata='MM/dd/yyy HH:mm:ss' templatetext='undefined' templatedeltaformat='{&quot;table-cell-line&quot;:{&quot;rowspan&quot;:&quot;1&quot;,&quot;colspan&quot;:&quot;1&quot;,&quot;row&quot;:&quot;row-8pxv&quot;,&quot;cell&quot;:&quot;cell-46vq&quot;},&quot;row&quot;:&quot;row-8pxv&quot;,&quot;rowspan&quot;:&quot;1&quot;,&quot;colspan&quot;:&quot;1&quot;}' templatehtmlformat='Template #6' isfocus='false' spellcheck='false' draggable='false' contenteditable='false'>Template #6</span> </p></td><td data-row='row-8pxv' rowspan='1' colspan='1'><p class='qlbt-cell-line' data-row='row-8pxv' data-cell='cell-587m' data-rowspan='1' data-colspan='1'><br></p></td></tr><tr data-row='row-1yky'><td data-row='row-1yky' rowspan='1' colspan='1'><p class='qlbt-cell-line' data-row='row-1yky' data-cell='cell-5pju' data-rowspan='1' data-colspan='1'><span class='ql-font-ink-free' style='font-size: 68px;'>BIG</span></p></td><td data-row='row-1yky' rowspan='1' colspan='1'><p class='qlbt-cell-line' data-row='row-1yky' data-cell='cell-4a6g' data-rowspan='1' data-colspan='1'>ytuop\t\t</p></td><td data-row='row-1yky' rowspan='1' colspan='1'><p class='qlbt-cell-line' data-row='row-1yky' data-cell='cell-v2un' data-rowspan='1' data-colspan='1'>no</p></td><td data-row='row-1yky' rowspan='1' colspan='1'><p class='qlbt-cell-line' data-row='row-1yky' data-cell='cell-tvfg' data-rowspan='1' data-colspan='1'><br></p></td></tr><tr data-row='row-8on1'><td data-row='row-8on1' rowspan='1' colspan='1'><p class='qlbt-cell-line' data-row='row-8on1' data-cell='cell-u5np' data-rowspan='1' data-colspan='1'><br></p></td><td data-row='row-8on1' rowspan='1' colspan='1'><p class='qlbt-cell-line' data-row='row-8on1' data-cell='cell-t0cp' data-rowspan='1' data-colspan='1'><br></p></td><td data-row='row-8on1' rowspan='1' colspan='1'><p class='qlbt-cell-line' data-row='row-8on1' data-cell='cell-8uhf' data-rowspan='1' data-colspan='1'><br></p></td><td data-row='row-8on1' rowspan='1' colspan='1'><p class='qlbt-cell-line' data-row='row-8on1' data-cell='cell-1o8x' data-rowspan='1' data-colspan='1'><br></p></td></tr></tbody></table></div><p><br></p><p><br></p><p>I ho<span class='template-blot' templateguid='79e4bf98-a513-4201-a0d0-714fec5b6aea' templatename='Template #3' templatetype='dynamic' templatecolor='#B856F5' templatedata='' templatetext='undefined' templatedeltaformat='{}' templatehtmlformat='p' isfocus='false' spellcheck='false' draggable='false' contenteditable='false'>Template #3</span>pe you are well :)<span class='template-blot' templateguid='b0b7ac83-5756-430c-8306-2ad34f22af16' templatename='Template #4' templatetype='dynamic' templatecolor='#63A980' templatedata='' templatetext='undefined' templatedeltaformat='{}' templatehtmlformat='Template #4' isfocus='false' spellcheck='false' draggable='false' contenteditable='false'>Template #4</span>  </p>";
	//let sample5 = '<p><span style="font-size: 14px; background-color: rgba(30, 30, 30, 0); color: rgb(197, 134, 192);">if</span><span style="font-size: 14px; color: rgb(212, 212, 212);"> (</span><span style="font-size: 14px; color: rgb(156, 220, 254); background-color: rgba(30, 30, 30, 0);">DataFormatLookup</span><span style="font-size: 14px; color: rgb(212, 212, 212);">.</span><span style="font-size: 14px; color: rgb(220, 220, 170); background-color: rgba(30, 30, 30, 0);">ContainsKey</span><span style="font-size: 14px; color: rgb(212, 212, 212);">(</span><span style="font-size: 14px; color: rgb(156, 220, 254); background-color: rgba(30, 30, 30, 0);">cefHtml_str_f</span><span style="font-size: 14px; color: rgb(212, 212, 212);">) &amp;&amp;</span></p><p><span style="color: rgb(212, 212, 212);">!</span><span style="color: rgb(156, 220, 254); font-size: 14px; background-color: rgba(30, 30, 30, 0);">DataFormatLookup</span><span style="color: rgb(212, 212, 212); font-size: 14px;">.</span><span style="color: rgb(220, 220, 170); font-size: 14px; background-color: rgba(30, 30, 30, 0);">ContainsKey</span><span style="color: rgb(212, 212, 212); font-size: 14px;">(</span><span style="color: rgb(156, 220, 254); font-size: 14px; background-color: rgba(30, 30, 30, 0);">html_bytes_f</span><span style="color: rgb(212, 212, 212); font-size: 14px;">) &amp;&amp;</span></p><p><span style="font-size: 14px; background-color: rgba(30, 30, 30, 0); color: rgb(220, 220, 170);">GetData</span><span style="font-size: 14px; color: rgb(212, 212, 212);">(</span><span style="font-size: 14px; color: rgb(156, 220, 254); background-color: rgba(30, 30, 30, 0);">cefHtml_str_f</span><span style="font-size: 14px; color: rgb(212, 212, 212);">.</span><span style="font-size: 14px; color: rgb(156, 220, 254); background-color: rgba(30, 30, 30, 0);">Name</span><span style="font-size: 14px; color: rgb(212, 212, 212);">) </span><span style="font-size: 14px; color: rgb(86, 156, 214); background-color: rgba(30, 30, 30, 0);">isstring</span><span style="font-size: 14px; color: rgb(156, 220, 254);">cef_html_str</span><span style="font-size: 14px; color: rgb(212, 212, 212); background-color: rgba(30, 30, 30, 0);">) {</span></p><p><span style="font-size: 14px; background-color: rgba(30, 30, 30, 0); color: rgb(106, 153, 85);">// convert html sring to to bytes</span></p><p><span style="font-size: 14px; background-color: rgba(30, 30, 30, 0); color: rgb(86, 156, 214);">byte</span><span style="font-size: 14px; color: rgb(212, 212, 212);">[] </span><span style="font-size: 14px; color: rgb(156, 220, 254); background-color: rgba(30, 30, 30, 0);">htmlBytes</span><span style="font-size: 14px; color: rgb(212, 212, 212);">=</span><span style="font-size: 14px; color: rgb(156, 220, 254); background-color: rgba(30, 30, 30, 0);">cef_html_str</span><span style="font-size: 14px; color: rgb(212, 212, 212);">.</span><span style="font-size: 14px; color: rgb(220, 220, 170); background-color: rgba(30, 30, 30, 0);">ToEncodedBytes</span><span style="font-size: 14px; color: rgb(212, 212, 212);">();</span></p><p><span style="font-size: 14px; background-color: rgba(30, 30, 30, 0); color: rgb(220, 220, 170);">SetData</span><span style="font-size: 14px; color: rgb(212, 212, 212);">(</span><span style="font-size: 14px; color: rgb(156, 220, 254); background-color: rgba(30, 30, 30, 0);">html_bytes_f</span><span style="font-size: 14px; color: rgb(212, 212, 212);">.</span><span style="font-size: 14px; color: rgb(156, 220, 254); background-color: rgba(30, 30, 30, 0);">Name</span><span style="font-size: 14px; color: rgb(212, 212, 212);">, </span><span style="font-size: 14px; color: rgb(156, 220, 254); background-color: rgba(30, 30, 30, 0);">htmlBytes</span><span style="font-size: 14px; color: rgb(212, 212, 212);">);</span></p><p><span style="color: rgb(212, 212, 212);"> }</span></p><p><span style="font-size: 14px; background-color: rgba(30, 30, 30, 0); color: rgb(197, 134, 192);">if</span><span style="font-size: 14px; color: rgb(212, 212, 212);"> (</span><span style="font-size: 14px; color: rgb(156, 220, 254); background-color: rgba(30, 30, 30, 0);">DataFormatLookup</span><span style="font-size: 14px; color: rgb(212, 212, 212);">.</span><span style="font-size: 14px; color: rgb(220, 220, 170); background-color: rgba(30, 30, 30, 0);">ContainsKey</span><span style="font-size: 14px; color: rgb(212, 212, 212);">(</span><span style="font-size: 14px; color: rgb(156, 220, 254); background-color: rgba(30, 30, 30, 0);">cefHtml_str_f</span><span style="font-size: 14px; color: rgb(212, 212, 212);">)) {</span></p><p><span style="font-size: 14px; background-color: rgba(30, 30, 30, 0); color: rgb(78, 201, 176);">MpConsole</span><span style="font-size: 14px; color: rgb(212, 212, 212);">.</span><span style="font-size: 14px; color: rgb(220, 220, 170); background-color: rgba(30, 30, 30, 0);">WriteLine</span><span style="font-size: 14px; color: rgb(212, 212, 212);">(</span><span style="font-size: 14px; color: rgb(206, 145, 120); background-color: rgba(30, 30, 30, 0);">"text/html: "</span><span style="font-size: 14px; color: rgb(212, 212, 212);">+</span><span style="font-size: 14px; color: rgb(220, 220, 170); background-color: rgba(30, 30, 30, 0);">GetData</span><span style="font-size: 14px; color: rgb(212, 212, 212);">(</span><span style="font-size: 14px; color: rgb(156, 220, 254); background-color: rgba(30, 30, 30, 0);">cefHtml_str_f</span><span style="font-size: 14px; color: rgb(212, 212, 212);">.</span><span style="font-size: 14px; color: rgb(156, 220, 254); background-color: rgba(30, 30, 30, 0);">Name</span><span style="font-size: 14px; color: rgb(212, 212, 212);">));</span></p><p><span style="font-size: 14px; background-color: rgba(30, 30, 30, 0); color: rgb(86, 156, 214);">var</span><span style="font-size: 14px; color: rgb(156, 220, 254);">html_data</span><span style="font-size: 14px; color: rgb(212, 212, 212); background-color: rgba(30, 30, 30, 0);">=</span><span style="font-size: 14px; color: rgb(220, 220, 170);">GetData</span><span style="font-size: 14px; color: rgb(212, 212, 212); background-color: rgba(30, 30, 30, 0);">(</span><span style="font-size: 14px; color: rgb(156, 220, 254);">html_bytes_f</span><span style="font-size: 14px; color: rgb(212, 212, 212); background-color: rgba(30, 30, 30, 0);">.</span><span style="font-size: 14px; color: rgb(156, 220, 254);">Name</span><span style="font-size: 14px; color: rgb(212, 212, 212); background-color: rgba(30, 30, 30, 0);">);</span></p><p><span style="font-size: 14px; background-color: rgba(30, 30, 30, 0); color: rgb(197, 134, 192);">if</span><span style="font-size: 14px; color: rgb(212, 212, 212);">(</span><span style="font-size: 14px; color: rgb(156, 220, 254); background-color: rgba(30, 30, 30, 0);">html_data</span><span style="font-size: 14px; color: rgb(212, 212, 212);">==</span><span style="font-size: 14px; color: rgb(86, 156, 214); background-color: rgba(30, 30, 30, 0);">null</span><span style="font-size: 14px; color: rgb(212, 212, 212);">) {</span></p><p><span style="font-size: 14px; background-color: rgba(30, 30, 30, 0); color: rgb(78, 201, 176);">MpConsole</span><span style="font-size: 14px; color: rgb(212, 212, 212);">.</span><span style="font-size: 14px; color: rgb(220, 220, 170); background-color: rgba(30, 30, 30, 0);">WriteLine</span><span style="font-size: 14px; color: rgb(212, 212, 212);">(</span><span style="font-size: 14px; color: rgb(206, 145, 120); background-color: rgba(30, 30, 30, 0);">"HTML Format is null"</span><span style="font-size: 14px; color: rgb(212, 212, 212);">);</span></p><p><span style="color: rgb(212, 212, 212);"> } </span><span style="color: rgb(197, 134, 192); font-size: 14px; background-color: rgba(30, 30, 30, 0);">else</span><span style="color: rgb(212, 212, 212); font-size: 14px;"> {</span></p><p><span style="font-size: 14px; background-color: rgba(30, 30, 30, 0); color: rgb(78, 201, 176);">MpConsole</span><span style="font-size: 14px; color: rgb(212, 212, 212);">.</span><span style="font-size: 14px; color: rgb(220, 220, 170); background-color: rgba(30, 30, 30, 0);">WriteLine</span><span style="font-size: 14px; color: rgb(212, 212, 212);">(</span><span style="font-size: 14px; color: rgb(206, 145, 120); background-color: rgba(30, 30, 30, 0);">"HTML Format is type: "</span><span style="font-size: 14px; color: rgb(212, 212, 212);">+</span><span style="font-size: 14px; color: rgb(156, 220, 254); background-color: rgba(30, 30, 30, 0);">html_data</span><span style="font-size: 14px; color: rgb(212, 212, 212);">.</span><span style="font-size: 14px; color: rgb(220, 220, 170); background-color: rgba(30, 30, 30, 0);">GetType</span><span style="font-size: 14px; color: rgb(212, 212, 212);">());</span></p><p><span style="color: rgb(212, 212, 212);"> }</span></p><p><span style="font-size: 14px; background-color: rgba(30, 30, 30, 0); color: rgb(197, 134, 192);">if</span><span style="font-size: 14px; color: rgb(212, 212, 212);">(</span><span style="font-size: 14px; color: rgb(156, 220, 254); background-color: rgba(30, 30, 30, 0);">html_data</span><span style="font-size: 14px; color: rgb(86, 156, 214);">isbyte</span><span style="font-size: 14px; color: rgb(212, 212, 212); background-color: rgba(30, 30, 30, 0);">[] </span><span style="font-size: 14px; color: rgb(156, 220, 254);">bytes</span><span style="font-size: 14px; color: rgb(212, 212, 212); background-color: rgba(30, 30, 30, 0);">) {</span></p><p><span style="font-size: 14px; background-color: rgba(30, 30, 30, 0); color: rgb(78, 201, 176);">MpConsole</span><span style="font-size: 14px; color: rgb(212, 212, 212);">.</span><span style="font-size: 14px; color: rgb(220, 220, 170); background-color: rgba(30, 30, 30, 0);">WriteLine</span><span style="font-size: 14px; color: rgb(212, 212, 212);">(</span><span style="font-size: 14px; color: rgb(206, 145, 120); background-color: rgba(30, 30, 30, 0);">"HTML Format byte count: "</span><span style="font-size: 14px; color: rgb(212, 212, 212);">+</span><span style="font-size: 14px; color: rgb(156, 220, 254); background-color: rgba(30, 30, 30, 0);">bytes</span><span style="font-size: 14px; color: rgb(212, 212, 212);">.</span><span style="font-size: 14px; color: rgb(156, 220, 254); background-color: rgba(30, 30, 30, 0);">Length</span><span style="font-size: 14px; color: rgb(212, 212, 212);">);</span></p><p><span style="color: rgb(212, 212, 212);"> }</span></p><p><span style="font-size: 14px; background-color: rgba(30, 30, 30, 0); color: rgb(197, 134, 192);">if</span><span style="font-size: 14px; color: rgb(212, 212, 212);">(</span><span style="font-size: 14px; color: rgb(156, 220, 254); background-color: rgba(30, 30, 30, 0);">html_data</span><span style="font-size: 14px; color: rgb(86, 156, 214);">isstring</span><span style="font-size: 14px; color: rgb(156, 220, 254); background-color: rgba(30, 30, 30, 0);">html_str</span><span style="font-size: 14px; color: rgb(212, 212, 212);">) {</span></p><p><span style="font-size: 14px; background-color: rgba(30, 30, 30, 0); color: rgb(78, 201, 176);">MpConsole</span><span style="font-size: 14px; color: rgb(212, 212, 212);">.</span><span style="font-size: 14px; color: rgb(220, 220, 170); background-color: rgba(30, 30, 30, 0);">WriteLine</span><span style="font-size: 14px; color: rgb(212, 212, 212);">(</span><span style="font-size: 14px; color: rgb(206, 145, 120); background-color: rgba(30, 30, 30, 0);">"HTML Format is string: "</span><span style="font-size: 14px; color: rgb(212, 212, 212);">+</span><span style="font-size: 14px; color: rgb(156, 220, 254); background-color: rgba(30, 30, 30, 0);">html_str</span><span style="font-size: 14px; color: rgb(212, 212, 212);">);</span></p><p><span style="color: rgb(212, 212, 212);"> }</span></p><p><br></p><p><span style="color: rgb(212, 212, 212);"> }</span></p><p><br></p>';
	let sample_whitespace_test = `<p></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">        </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">public</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);"> </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">static</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);"> </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">bool</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);"> IsRichHtmlMixedMedia(</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">this</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);"> </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">string</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);"> qhtml) {</span><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">            </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">string</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);"> imgTagStartStr = </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(128,0,0);">@"img src='"</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">;</span></p><br><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">            </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">int</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);"> img_tag_start_idx = qhtml.IndexOf(imgTagStartStr);</span><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">            </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">if</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);"> (img_tag_start_idx >= 0) {</span><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">                </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,128,0);">//html has an img </span><br></p><p class="ql-align-left"><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">                </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,128,0);">// check before img tag</span><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">                </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">string</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);"> pre_img_only_qhtml = </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(163,21,21);">"<p>"</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">;</span><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">                </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">string</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);"> pre_img_qhtml = qhtml.Substring(0, img_tag_start_idx);</span><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">                </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">bool</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);"> is_pre_img_only = pre_img_qhtml == pre_img_only_qhtml;</span><br></p><p class="ql-align-left"><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">                </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">if</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">(is_pre_img_only) {</span><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">                    </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,128,0);">// check after img tag</span><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">                    </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">int</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);"> post_img_tag_start_idx = img_tag_start_idx + imgTagStartStr.Length;</span><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">                    </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">string</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);"> post_img_tag_start_str = qhtml.Substring(post_img_tag_start_idx);</span><br></p><p class="ql-align-left"><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">                    </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">if</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);"> (post_img_tag_start_str.Contains(</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(163,21,21);">">"</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">)) {</span><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">                        </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,128,0);">//ensure img tag is closed or false positive occurs</span><br></p><p class="ql-align-left"><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">                        </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,128,0);">// get actual end of img tag idx</span><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">                        </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">int</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);"> img_tag_end_idx = post_img_tag_start_str.IndexOf(</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(163,21,21);">">"</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">) + post_img_tag_start_idx;</span><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">                        </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">string</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);"> post_img_only_qhtml = </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(163,21,21);">"</p>"</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">;</span><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">                        </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">string</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);"> post_img_qhtml = qhtml.Substring(img_tag_end_idx);</span><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">                        </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">bool</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);"> is_post_img_only = post_img_qhtml == post_img_only_qhtml;</span><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">                        </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">if</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">(is_post_img_only) {</span><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">                            </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,128,0);">// qhtml is an img item and not mixed content</span><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">                            </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">return</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);"> </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">false</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">;</span><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">                        }</span><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">                    }</span><br></p><p class="ql-align-left"><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">                }</span><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">                </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,128,0);">// qhtml either has text before or after an image so its mixed content and not 100% format compatible</span><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">                </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">return</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);"> </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">true</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">;</span><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">            }</span><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">            </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">return</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);"> </span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,255);">false</span><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">;</span><br></p><p class="ql-align-left"><span class="ql-font-cascadia-mono" style="font-size: 12px; color: rgb(0,0,0);">        }</span><br></p>`;
	let sample_special_chars_test = `<p> if (CopyItemData == &quot;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&quot; || CopyItemData == null) {</p>`; 
	let sample6_templates = '<p>Hola,</p><p><br></p><p> <span isfocus="false"><span class="template-blot" templateguid="e085fbd8-7557-4015-8913-60cd1aecd402" templatename="This" templatetype="dynamic" templatecolor="#5A1B72" templatedata="" templatetext="" templatedeltaformat="{}" templatehtmlformat="T" spellcheck="false"  >This</span></span> is not plain text paragraph. <span isfocus="false"><span class="template-blot" templateguid="e085fbd8-7557-4015-8913-60cd1aecd402" templatename="This" templatetype="dynamic" templatecolor="#5A1B72" templatedata="" templatetext="" templatedeltaformat="{}" templatehtmlformat="T" spellcheck="false"  >This</span></span> </p><p><br></p><ol><li data-list="bullet"><span class="ql-ui" ></span>  <span isfocus="false"><span class="template-blot" templateguid="e181b52d-d0cb-49c2-bd46-bc91d79a384c" templatename="Template #1" templatetype="static" templatecolor="#7E3FCE" templatedata="yo static data righ hurr" templatetext="" templatedeltaformat="{"list":"bullet"}" templatehtmlformat="" spellcheck="false"  ></span></span> <- static template</li><li data-list="bullet"><span class="ql-ui" ></span>  <span isfocus="false"><span class="template-blot" templateguid="b24d34d2-d9d8-41ed-b0fa-85e801464994" templatename="Template #2" templatetype="dynamic" templatecolor="#46285F" templatedata="" templatetext="" templatedeltaformat="{"list":"bullet"}" templatehtmlformat="" spellcheck="false"  ></span></span> <- dynmaic template</li></ol><p><br></p><p>  <span isfocus="false"><span class="template-blot" templateguid="3cd2a664-c784-4bb1-9c86-e34686d4f005" templatename="Template #3" templatetype="datetime" templatecolor="#1D6127" templatedata="MM/dd/yyyy HH:mm:ss" templatetext="" templatedeltaformat="{}" templatehtmlformat="Template #3" spellcheck="false"  >Template #3</span></span> <-- time template</p><p><br></p><p>Bye! T</p><p><br></p><p><br></p><p><br></p><p><br></p><p><span style="color: rgb(212, 212, 212);"> }</span></p><p><br></p>';
	let iconBase64_1 = 'iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAABmJLR0QA\/wD\/AP+gvaeTAAAgAElEQVR4nO2dd3wU1drHf2d2NtmQhJACIYSWUKUXXwERBEUUELBcuKD4iqJcvfYueNW8XtsVC+JVr9gQO0VQQLBBLgIqEKQXKUlIIAnphWTbzPP+EYIJbJItM3Nmdue7n\/Nhw+yc85zznN+cMzOnMJiowogFea3dbmsKA6USoxQw1hFEcQAlACwOoDiARZ\/5eTiAFudE4QJQdeZ7DYCS2sBKQFQMRicJ7JjAcMwlWTK3VcadQBqTNcpeyMB4G2B0hswvSGSEvoDQTwD1JaAfgG4Aops7V2EcYMgEYQ\/A9gDyHguwe9P9bTLBGGlsS9BgCsQHxi04HF5GLQczSRhGAg0HMAyEtrztaoZKENsKJm8hsF9ssP6S\/kBsGW+jjIIpkGa45LWCVImx8QAmABgFgo23TQEiA7QdEFbLAr797d6EHWYL0zimQM5hyhKynMg9dTmBjQcwFqAL1EhHLzWSAXkEWgfGfrKFsa\/T72pT1fxZoYMpEAAgYkNeKRwuMJpGDFMAtOFtEieqAVrNGPu8laVi7dp7uzl4G8SbkBbIsFeLkgFpFgGzAHTkZohempOGlAP4TAbe2fpQ4i7exvAi5AQyZQlZjucUXimAZlPtfYUYeKz6rOGKwfAbgd4RXeKyzY+1ruRtjpaEjECG\/6sw2m2RbmUM9wFI8SeOIJeBN5SB4T+yW3h926Nt8nkbowVBL5Ah\/8ptD9FyH8BuBxADwKzpAUKAgzEsBtH83x5O2s\/bHjUJWoGMWJDX2uVkcwi4EzDKo1nDKZcArADwZLAKJegEMmRBcUs4nQ8BeADav83WH9poTmLAJ3Aj7dc5SVmapKgRQSOQwe+QVSzPn00MTzOgdf1jhrsuGxcHI\/zbKjmf2zSnUylvY5QgKATyP\/PyJwqglwjoydsW\/ujiclBMwDNyy6S3M\/7GXLyNCQRDC+SiefkpDPJCAsbwtuUsuqifOoHwByPM+u3xdpt4m+IvxhRIGglDWuTdQ8BzACJ5mxOMKKhzGaC3wyhsjhHfoRhOIENezusly3gPoGG8bQluvJSI90o6TiTcsf3xpLV+GsQFwwhkyhKyZGXmPQpGaQDCzh4wuzTGguEzWbb\/PePxLuW8TfEGQwhk4MsnO4kSLQYwkrctJoHDgGwi9r\/bHm+3kbctzaF7gVz44olpjLH\/ABTD2xZd0EyLqb8GtVGLJBBejHIkp6WnMbeWFvmCbgUy+J3tVlaS9CoY7g4sJv1VGZM\/YcB6t2yZ9vvcpELetnhClwL5n5cy20ISlxBjI3jbYqIJx2USrtsxp10Gb0PORXcCGfx8zhAIbDkDknnbAsBsgLTDToQ7Mua2\/4i3IfXRlUAGv5A7hQGLobvBheqqxNRgPQgvZsxpP1cv8+R1I5ALn895lBheACDwtiWk0UG1ZGBfRjldM9PTUuz8beHMqDQSK8Jy\/s0Y+xsAXTjIRA\/QZoSJ12Q83K6IpxVcBTLs1ZwIpwNLQZjA0w7tMNXvI38IsmXMtn8k5\/AygJtAeqedirKF1XwDsNG8bAgURaq7qZlmYNmyjCt2PtnhMJfUeSQ68Pm81kx2fwdGA3mkb2IsCCixEBu3\/R8dtmqdtuYC6ftCdqxVEn4yxREIBm52\/De9CEQjdzzZ+YCC1jSLpgKpFQfbAEb9tUy3ATqpW4ktLUiIsiApRkS7GBFJMRbERVoAABFhDKLAYLUw1LhkVNplVNTIqLDLyCxyI7vEhexiF6qdOsmMDwRmMRVCYKN+n9tJs\/nvmglkVFqmrUIU1gC4TKs0PcGjSkWFC+jXPgx92oWjT7vaf1u1CPxpdkGFhP15TmzPtmNbth1HT7n0on81yRZE98iMx7sc1yIxTQQyKo3Ecuvx5SBM0iI9PdAxTsTIbhEY0S0CgzrYYNHg7U5ZtYzfsuxYt+80fjlqh1OiJq4IBpYSwxHRTSO2paWovjaXJgIZ8Gz2O4ww+\/wjBnaSB+IjLbi6XyQm9Y9CSoKVqy2Vdhk\/HazG51srcfiUk6stKrFdstlG7X6k7Wk1E1FdIAOezZrLCM+pnQ4vBAYM7xKBawZGYUS3CIgC93evDSAAm47U4MPN5diZ4\/9a1Dq9lK3u1qPTNUunMkmtBFT15qBnsmcQo8VKpKM3B1ktDJMHRGHWxS3RNkaB5X01YMvRGsz7rhRZxUouNMLXMwT8Z9dTKXeqFb9qAhn4TNYwAtJRf3qsKmjrIKuFYXL\/KMy6JMYwwqiPWyZ8vrUS7\/5chkp70Gxp+MDOp1LmqxGxKgLp\/2xOMpPdGQAS1YifBwIDJvWPwuyRrZBkQGGcS3GVhLkrC7E1M8DxgPpo2mUiGrcrLfV7pSNWXCCj0jaIZULnHwCMUjpuj2jgoAuSwjBnfDz6Joern5iGyAQs3FiGhRvLIHOv6AEbkCeKwuCMJzrnKWFNHYoLZEBa1jwwerjub+7l7jXnWxptE3DX6FhMvbAldHbvrShbjtbgkaWncNpp+C7XJrFtyWUZf7tQsZssi1IRAcCA\/8ucTIxehw6G0QfKJd1a4J2b2uKizhFghs9N03SIs2JoagTWH6iG3WWcS5oHOlJVRER++us\/KBWhYq7vnZbZVgTtAZCgVJw8sFoY7r08FjOGxRhf5T6SWeTCnR\/nI79Ct4uMNAMBgEygK3andV2vRIzK1IE0EgYgcwMZfN2qTvFWvHh9G1yQpPKDNx2TV+7G7MV5OF6ikzWn\/WvQTsku1m\/v86kFgSavyACI\/uzoXTJoJMG4n0kDovD57HYhLQ4ASIoR8faMtoixCbWVk3fwjzbMKi\/w++x6BNyC9E872p2AnSBEKGGQ1ogWhicmJOC6QeZeO\/X59VgN\/v5JPiT+j7f8hggz9jzT5dNA4giwBSFGoIVGFUe0TcBbN7Y1xeGBoakReOCKWIDIEIE8BdD8gXMOt24+t40TkED6P3X0bhAuVbRN1ahAk1uJWDyrHYakGlLbmnDTsFYY0yuKey\/Lm+AJBiS4ReGtQMrA7y5W\/ycOJcsWyz7U7RxrIAZ0sGH+9LZnJyiZNE5xlYRr38xBWbVq4wFVh8Cu3vtMlzX+nOt3CyKJlpdhQHGM7N4C797czhSHl8RHWfDg2DjuXahAAiP59a73HPZrGIRfAunz1LErmIxpzbd9\/AunfhjcyYaXpiQi3BpqbzgCY1L\/lujaRp2nexp1wbpExNCj\/tjnu0DSSGAkveB\/z5Afl\/WMRIswc+FGXxEE4I7RccpU1nOuW1ophMAeuWDu\/iSf8+7rCX2kw7MJGKxh3hQL+076P2Eo1BlzQRTaxYjn13BfA78aEG0RxHm+5tunvkbvtH1RzB12BJoOYyfFYkppHYZv7u2kWHyBUOWQsS2zBgdO2pFV5ELpmZtgWSbERlrQKT4MfZJtGNolAhE6afUWbSrFK99xXQk0UGTI8sC9z\/fc7e0JPk1sYG7xHoAMO8cju8iJ0w4ZkeF8KlxFjYw1uyuwbk8VduXYvXoJZ7MyjOwRiRuHtsKgTnwfSY\/vF43XviuCTEpetjRFAIR\/Apjs7QletyCDHzsa47BKxwDE+WSSSiXpb7SLbmuPCztrW9FyS1x4b2MpVu2sgMPtf4GM7hmJp69JREIUvydwNy7Mwa7jvk6y0pecSGBD9\/+z+2\/e\/NbrS6ndKj1ChDifu51QJ\/hO7Zn7T2q3on5+uRtzl+djwvwsLNteBodbRiC53nCwCtcuyML2rBrN8nAuAzvavLI1UG\/5hZfmMIle9jZKrwTS49GD0SC6m+MNlgKhlv0n1L9Rl2TCok2lmDQ\/C9\/sqIBUtz6VAqH0tITZH+bix31VqufDE\/07RPB3ZeA6vKTvnMOXevNDrwQiiuw2EGK4F4ACYd8JdVuQrCInpr19HC+vLUS1SjP0nG7Co0vyuLQk\/drbOLpPuY9bkM\/Oem2KZgXSO21fGICHvInMG3hrJOvMjboarNlVgalvZWP\/SbuizvT0cbhlPPrlSZTXaDsEJDFGRGwLAQBB+5e9UCwwma7uM\/dgv+by26xAZKc4jUDJSjlW8SrvYyHLsvL3IZIMPL\/qFB79Mg+n7bJmai8od+PVddrvnhwbaam1weDIMu5r7jfNCoQR3aeVw\/0KfqDkfchph4y7P87Fp7+UKhanL6zIKMdRjZcWjQ43+ji22srDGE3v9\/CRNk39skmB9JxzYBiAQUqapgeUug8pq5Yw890cbDzk6\/Kwvl0Fzn7o\/OCWCB9sLFYkP94SZWMebTFOqO1QyIQIp+ia1VRemxSIhXBHAwc14iSjhX0nAr+5LTkt4Zb3jmPfiRq\/HeRtaK61XLenUrUHAp4IpvFsDJiNNGo0Q40e6Pv47lgZmEIKdGn0RnaRE1UB3KgXV7kx893jOJSnj7FdNU4ZW49Va5eeSyMxatNN79zTfnBMYyY0KhAJYX8FjDmVtjlkAg74eaNeXi1h5sIcHMl38L\/\/qtfM\/HpE1V0AGlBa5fatCfQ3BFA4vnxAdEtjeW1UIER0uy8OMlrYl+u7QBxuwt0f5+LoKbuiDvL\/82eK\/greH4pPS+ppXqHgI9f2fmCfxyFUHgcr9p6zr5ckU9DdnNfH1\/sQmYA5S05ie6Z2XRlfyCrS7klWSaXbr1qoY8KlMEwB8M65Bzy2ILLErlfdpMbQ6BKzM7sGGVnVyClxeTWA8LV1p7B2VwX\/S2MjobRKmxeGeWUu2F2BjSnTZSB4rPMeWxACpmh7hdD+cpRb4sSMt7PO\/h0fJaJNSxFtY6xIamVFYkzt98QYEUcKHHgvXd\/zIFwSwSURrBZ1pxPvzlF3eAvHaje665zDrY+80K3Bm9fzBNLrsX29ZaK+KpumO4qr3Ciucms62heA4boqu47X1N4\/Bx+ixe36C4C3G\/znub+SZUwOzvwHN+EiU731AIDdxxtrQYKh1tA1OEcg592DEGGcZvYoig76sRxDKw2WMapxytibW9OIDV7Av5iaC5f2e3hXZH2TG7QgfR\/fHeuUaKh3uTUgwXCRa4SUBPUX3U4\/UAm7hzf2QVSs4TVMGA1gdd1\/NBCIQ2JjGfk2T10vBJGT\/KJrovrbw63dXaFBOXP2JGE8GhMIycJYsFCvasbM\/6CUFqrGX+2QsXF\/JYL1Dr0OBlxR\/+8G9yACk8co3rHTwVtz34Ky2dciMAAXpTboOivOT\/srtBuDxZeuqY\/t61j3x9kW5IKH9neSSOro+RwTPdOrXQQSotXtGX+8qUT\/bSud98UvBLc0AsCnQD2BSCQN1XpTPt0XuK8o5CBfmThI3TXEf8+qxs4s7QZDcocwDOcKhEDDg6\/GBj8WgWHCQHUF8uF\/9T2KQGkYo+F138\/egzDgYj7mmATC+AExaNPSqlr8uSVO\/LC3wvNBHdx\/qRJk1rfrPb+2BM60IKPSNognKtDHnwLkStC3eJ4zWPe\/jAG3jw5oh7FmeeO7ArilkLg5r49FECP6A\/hZBIDc8tgeDPDwIL1pB5nw5dKe0ejZzqZa\/AdP2rFyO5\/FKHgjA31RJxAGoT+Z1V7\/1HORRWB45Gqft7vwiXmr8iCHXONRCwP1B850sYioj9dPsEwd6YKpQ+PQPUm91mPLH5XYeLCRew8D4mu1JVZ7y1H7FIuhr7oV31SVkiXQpqUVD45XbxcKl0R4duVJ\/l7jaQDVEwgRdeNoin7hXkPOhzFg3o0d0CpSvReDb6wrwB9az4vRHy1T7tuTKALEQLvMN+gG4S8XxWF492jV4j+Sb8d7G055OKLDq4XaCFInsdP9GW1BokGW9wlBJ9Wjd\/sIPP2XZNXilwmY83kOnDoac8XT44KMFFGULSm6GcGrEzPqoxeT4qJEvHVrCmxW9VY1\/Oi\/hdgRSkNKmoGIUkWAOhKZ+4brGauF4Y2ZnZEcp96kqP0najBvdZ5q8f+JXi45aN4Uho4igRl2U07\/MJCDUPu+49WbOmFotyjVzKh2yrh\/URYcTm33GtE9hDYigeL10sMyaQhjwHPTOmD8wFaqpvPMslwcLVDuqVUQVad4kRESeFuhBsHgpDmTkzFlaLyqaXyzvRRLftVo+wTFnKKNdwmUIBJYfHBUJy9QNJvqltldV7bFbZc1ubdLwOzMOo3HPstGsE+j9RcGIUEE5PhQ0YdRuH5IPB6c0E7VNIor3bjnw0w4dPRIV39QrAiCurP9TXzi8j4xePGGjmAqPlh0S4S73j+GE8UNF7wOvetkszkOEwGo9+zQxxIPdQcNSonEG7emwCKo+9g9bWkOfjtSqWoawYJIROqvOGbSLDEtLHjj1lRVXwQCwPvrC\/DpJu13xtUEFa6w6rYgoUYADnpheie0i1XXFasySvD8V7mh2FT7jQgyBcKbm0a2xriBsaqmkb6vHA98lAnJfGLlE4qMmTZnI\/pPaqINj1\/bXtU09udW4+4PjsEtKeynEHC7SCB9bNXqDwZ3EGPAvBmdVd1WObfYgVvfOoKqGnMYiT+IIGi3uZ1JAyYMisPgVPXGWOWVOTF9\/h\/IL\/PGxQa\/2viIt7kVAbjUNMQ3QsdJYSLDY9eoN7fjVLkLN8w\/hONFIT8zMCBEYuT0ul6GTv1VnZmjEtEhXp0tC4qr3Ljh9UM4puAAxFBFhMQqdTNhKkRoGWHBPePUGUpSWSNhxuuHcDhP3c02G0fBusS\/WtpFxuRi0nrValXRv4OmDktAdITyW6addki4+d+HsD8neGcFaqyZYpEIRXqQqlEItKQYA24YqfwoXaebMOutw9h+tErxuEMWQrEoE4rVHBhn0pDhPVuiS6LyC7498VkWthwKYKE33V0j+RvEgGIRAop1YEsterEDgFrGzBihfOvx\/k\/5+HKzp6V6TAJBJhSLAlG+OfpAG2JaiBjbX9khJZsOlOPZZccVjVNpdFu9mjWM8kVIyDx\/t\/TgQw9OGtErBqJFuf5sRbWEBxepMIQkaAisXBiQKboFMVsgt0IGmZzPn066rI+yO0GlLclCXqlxRwrpHQLLFk4uvLAIoCr+2\/oEa6hFYMCoPsqtTrL5YAWWbjHQvA7ebvAjyIwy61Z3zwIZcIcpX6Hmf6IW\/TpHISFama3SiIB\/fXVc9fxwLC5dIEiUVSsQGX8A+hNIMDlocBflFpz+flcJdmSaU2ZVpjj3\/YtL6uaD7CHgusZ\/G0xVlQ+9Oii3Nsbra05490PTbYGwBzi7gQ7tUqUwTQed5YJkZQRyILcauzPNt+UasAuoE4hL2AuLuT6SWogCQ\/d2yuww4c0LwcavS0F8xVI6a0R7gTMCye085Ghyzi+nAUQqErcfR4KCRrKXmhiBcIVWK\/lmaxHIfLOrOgJoT+2\/AJDGZCLKICIoEdBoQHCHRuis0Nir40V2FHg1O9AkQJyosuwG6i3aQAw\/M8JIfjYFL21ilFk4JkMXI3WpwT\/BAjX8nnFy6fAaoJ5ABJn9SoaZOGUsJyXGKPP+Y8fRCrN7pQEC2Ja672cFYiXHJgesMhAKI7O0RakW5HihOaxEI36u+3JWDFmLRpcBOMjFnCCnTStlWpDCcif\/+yzFQlP3qlwDuS2WX+vKvMHCcYywgRh6NeqhoGrdtctMrEJ7mtudEoLMCQGjfGmwvafeG1pQ91cDz8kkr2VgdymeZhDjjYMUW5CasdCRB6+MEtbV\/7OBQMRqcb07UqoGzD1DACjmJKXegbQIE8wG5DwULhAB3zb8sx65Sy+uYYTN\/PunOgle0XxESgmkdYw1wAwFY1CUqvjTcVvq\/8f5nWNG34JwhdIphzJKCSQ5Tp2F5gCoUNd0kZRvMPy4b2nvBm9izxOIRRaXupn7FfB43BukTnK6lRnnZhUFc79NVThTqDL78twj54kgd\/HFJ4hoK5cnbDBow9wMu7OUeQO+O6sS\/Ls0QRLOr3h2ySqsObfMPbcSjC3hnoEgCm9+mwNXgAsrbD9SgV8OlPHOSvCEcyGsLfrgkvNmoXkUiCThCxBk7pkIkrDjSCUeW3QYkuzJM82TX+rEvQsPwc\/TFUMHRalakIEvPOW50TVoEm\/6bzqAS5stNQ3hXD8CZkj3GDxzQyoGpHo3\/VYmYMmmAjzzxTEUV3qzS4WOS0jHpgGoIgclFS4dfV5fuNEVlCMH3OpGk9NwPaHjUtCBaSeK7fgkPQ87jlaCMYZ2seGwedhdqqTShWVbTuHh9\/\/AR+tPosZh7g6lJgQsLvxi9HJPxxptQXpP2RdWGF6YC6C1apaFOBaBYUBqNHp3jERMCxGlp904mleNbYcrzMXgNESW5QuLPrssw9OxJpf5azMj\/VUAD6hilYm6kMevvp8c9LAdhZ+OGtzY0SZH0TFiHxIj\/wRiOsjECDD6sKnDTb4MLPj00j2Qsd6vqbf1Pr4\/UzAx8RH\/Hl+VUpj1o6aibX4ctoAXQbgsENtDAlPX52CEAmFvenr30eAX3kTT+oYNOwAMVMQmzTCCgxrH2NYbghqLxdW54OMrm1xHyduZPAsITffVTEIMoyuY8FnBZ02LA\/ByQGKhq\/AzAPrapYX3q9dQD5qhSgYkYuxlb1L3bqvV\/UulyD7\/Ww6wyd5mK3gw+qUytPDKW4TFxV9c9r43P\/V6snRhdMwnCZXl\/wCQ6u05oYhqcjJ1qhRuQZCe9\/bHPu0HFj\/9x5tBbJHPJpk0CmPA6L5xaN+6dvXF3ZmV2HnM3NpAWRpcXT4o\/mLMLG\/P9Gm5jWJ3ySfxYvwcEHr4cp4JcG4T0CLcgpsvT8bMMcnoktRwCYC92ZX4ZMNJfP7fPJy2h+g4LHVaTKfELP\/05QSfd5RMmLZ+EkH+2tfzDIdKXRqBMUy7tC3mTO2CpGam0BZVOPHqV1n44IfcoB6bpWHO5pV8OeZRX07wa8vV+Kk\/fg8WXPPWtXBSSmIE3vx7Lwzp4dtehb8frcCdb+7H4ZOnVbIsJCiA6Oxe8un4Cl9O8ksgcdPX94Ys74SPXbRQZkTvWHzycH9ERXj34PBcqh0Sbnt9D77bUaSwZWcI3gaqFmK3lSwd49WTq\/r45a2avR8VRvSekQCGIf6c75EgdtDkoYlY9GA\/tAj3TxxA7YINk4cm4lheNQ7kmC2JTxC2l\/TefBfS032uZX7vap8waVO0bKvZB6CDv3GEAqP6xeGLxwfCavG7qBvgdMv4y3O\/Y\/P+UkXiCwSDXNPcMhOGlH95+Q5\/Tg7Ia3FTf7gSaLhUo5bo3UHJ8TZsmjcUMQqtzVtHfqkDwx\/6FaVV3kzD9YTeS05BGF4oXTJ2rr+nB7T2VcmSK74jsKV+LKCt8k5W+giv3NZTcXEAQNvYcLw0qwcMME6EN5kRNY5nA4kg4MXhLG73fQCVmA5qyORhiRg7KEG1+K+7uC0GdY1RLX7FUWVIVZOBGOGOk6smVgdidsACKfrqqjwCbgk0HtXR0DmiwPDk9K6qZocx4MlpXX22TbkG0v8JdFp8QPRyybKx3wdazoosL1q2dOw3TMYiXTtJw8+Ei1ojta36C+Rf2i8OvTpF+VZxFAs6hmFvTHTYU0pEpdj6u4Kr5l4CHTOdBNwxvpNmac0c097zAQ1bTJ0FB5PlG7MWjbb7WpaeUEwgRd9MrhSAmwDUPlrhX1BcQlJsOIb09O1NeSBMGpro2RbDoLQTMKd0+bjdSlmn6AruJcuu3ALCY6HsoBbh2i6KH2mzQNsOpNIfhUqeAAK+Kls+dr6S5au4N8uWX\/kagZbwLnYuDiLgVJlT04GFBWUO7q2mTsIhi02+BVB2L3NVLnfl0eE3g7BDB4WmXThDRbUbWw+VBVqEXrP05zzN0tIx5SQIE30diOgN6vQHFo22yyRNB1CoSvy65E+1rN3e7FoAiiAT4dP1ueByRdDBi9gzQWKyPLNi+djDapSxah3myhUT\/pCJJgNkD3IHoa4DXBeW\/5ynSTdr3fZCZBfU8M4u7\/Bg2crxK9UqY1XvKCtXjPsFMrv5zKuIYHXQeeFEsR1rt6nfisxbelT1NHTOgooV4xaomYDqj1zKV161hBGeUDsdvfHK8mOQSb1W5KtNedhxuIxD06GbsLpCrHxQtQI+g\/8TFHzAcfDTTeE9bmwL4EIt0tMD+SV2dGwdgX6pLRWPu6TShb8+nxG089Wbv6zQ1nDZPbl6xfWKvAxsCk0EAgCO6d3WhucndwYwQKs0\/UWp6\/6W\/aW4\/pIkxERaFYqx9sb8ttd24fej5YrFqTuacgDRLsFNV5SunqRJASgzi8driEVPXvsOGG7XNl0fUbBn1C+lJb57YSgibcpci\/7vkz\/wyrLm7j3U69rxhBjbIcJxednKazV7jq7xXuiMKhPb3AXQ1zrowzYeFLxl351ZjslPb0VhuROBIMmEuR8ewCvLjniRbhDCcFiWXRO1FEdtsjyYssQS7Yx8D8BMLulzoH3rCCy4sw\/GDPJ9R7vM\/Grc8+YebNxTrIJlUExTakmTCFstNsu4iqVXlaiURKPwEQhQKxJX1PsguhmAIqVrhGvnlYNb4\/7ruuCSPnHN\/raw3ImFa7KxYOUxVHPZyJN\/iTKwbbA4xlWuuE6lq0Nz6XOFWNSkNQsAdncjx7U1R0Mu6BiN6aOScWn\/BPRPbQmLUOuKymo31u8swrdbC\/DV5pOwO2XOlnJlY5hLmFiyVvkhJN7CWSC1RE9a9SiBvQDN74k4Uk\/7raKsaBVV+6Qrr9gOhyukRXEG9mVVZYuZSFdmXoffVvBMvD5Rk1ZPAWExABtvW0IJ9dtov1J48fSqq+cqPTLXH3QjEACInrz6YlnG1wAUXO2AexmbeO8CNwF\/r1498V0VrfEJXQkEAGwTv0mxgK0A0F\/RiE2d6J1CRuyvVWuu3sDbkProTiAAgImrWkQS3gVwA29TTDSA0XYZ7PqaVRP1tc0f9CqQM0RO\/OYBEHsJulgkW19NUJPW6MvU5lhUfTr6Tt43442ha4EAQMS4r4czgX0CoDNvW0wUpYwYu71m9cRlvA1pCt0\/Vq1ZO3mzTRb7E8PHvG0xUYzNMlkG6F0cgAFakPpETPh6GgN7A4o+5VIIr\/nFr7cAAALOSURBVLs1xur\/KIwTxF6sron+J9JHu3kb4w2GEggARE9cleCW5fmMcCNvW\/whhOXxq0Vit1V9N2kfb0N8wXACqaPFhK8nEOE\/ABpZWtBENXxT+WmA\/aMmyv4Glk413AwvwwoEADDu25YR5HoaDHcDCONtjnYYph1aQZLwkP37SZm8DfEXYwvkDOHjv+oukOUVgK7mbYsJAGAPQbjfvnbSet6GBEpQCKSOyKtWXikxvMKA3krGy\/16zd0Ab2GFxOSnHVGuhUbsTnkiqAQCAEhLE2y\/DZwOoqcAdOdtjr5RTHklAF62211vIH1qlVKR6oHgE0gdozaINlvpjQB7CkAqb3OCESKUMYFes8M2HxznbKhJ8AqkjsHvWG0JbaYxRg8TWD+vzjFMl4YXLB+MFtjseLssXds54loT\/AI5C7HwsSuvAqNHADaatzUG5TAjvGx3li1G+i26HDulNCEkkD8Jv+rrHiBpNgE3MyCetz3cabrFdDCw5SBaaP\/h2o16mMSkJSEpkLOM+tAWFhZzPQNuBzACBhibphmE\/RDogzBH2EeV6ROLeJvDi9AWSH0mrI61uZ0TiTAFwFiE1ItHALXtyBYQW8qs8kr7t9dn8zZID5gC8UDk+CVtnS7LZMboaoBdBkDZLWv100mRAPwGYA2IrXD+eN0B3gbpDVMgzTFsSUR4tHUUZPlqYnQxwPpCwzWNVeAYCL9AYGudEtbhJz7rTRkFUyC+MmZJTDgslxDDCAAjQOgLhmjeZjWCE6BDjLFNRPSzRZI31qyfeoK3UUbCFEjAELON+SpFFqgfiPUF0BcMPSAjRUPhOABkAzgMYC8IuwHLHmdpwUFk\/M2lkQ1BiSkQNRm3pLVVtqYwidqTQAmMkEigBAbWhhgSGKElartrNgARDc4l5gKjKgAgsDIGqmAM+USskJFcSAIrlIE8KyyZNRfvPIG0NHO1ORX4f6pfeZwZVBjsAAAAAElFTkSuQmCC';
	let sample_global = `<p><span>{'&gt;',"</span><code>&gt;</code><span>" },</span></p>`;


	let sample_file_list_obj = {
		fileItems: [
			{
				filePath: "C:\\Users\\tkefauver\\Source\\Repos\\MonkeyPaste\\MonkeyPaste.Editor\\src\\components\\svg\\assets\\createtemplate.svg",
				fileIconBase64: iconBase64_1
			},
			{
				filePath: "C:\\Users\\tkefauver\\Source\\Repos\\MonkeyPaste\\MonkeyPaste.Editor\\src\\components\\svg\\assets\\table.svg",
				fileIconBase64: iconBase64_1
			}]
	};
	let sample_file_list = toBase64FromJsonObj(sample_file_list_obj, false);

	//let sample_lulu_img = "";

	//let xml_sample = "<Project\>\r\n  <PropertyGroup>\r\n    <RestoreSources>\r\n      https://pkgs.dev.azure.com/AvaloniaUI/AvaloniaUI/_packaging/avalonia-nightly/nuget/v3/index.json;\r\n    </RestoreSources>\r\n  </PropertyGroup>\r\n</Project>";
	//let xml_sample2 = "<Image>\r\n<Image.Resources>\r\n<SolidColorBrush x:Key='Brush0' Color='#FF000000' /></Image.Resources><DrawingImage><DrawingGroup><DrawingGroup Opacity='0.2'><GeometryDrawing Brush='{DynamicResource Brush0}' Geometry='F0 M12 19C15.866 19 19 15.866 19 12C19 8.13401 15.866 5 12 5C8.13401 5 5 8.13401 5 12C5 15.866 8.13401 19 12 19ZM12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z' /></DrawingGroup><GeometryDrawing Brush='{DynamicResource Brush0}' Geometry='F1 M2 12C2 6.47715 6.47715 2 12 2L12 5C8.13401 5 5 8.13401 5 12L2 12Z' /></DrawingGroup></DrawingImage></Image>";
	//let xml_sample3 = "<p>&lt;Image&gt;<br/>  &lt;Image.Resources&gt;<br/>    &lt;SolidColorBrush x:Key=&quot;Brush0&quot; Color=&quot;#FF000000&quot; &#x2F;&gt;<br/>  &lt;&#x2F;Image.Resources&gt;<br/>  &lt;DrawingImage&gt;<br/>    &lt;DrawingGroup&gt;<br/>      &lt;DrawingGroup&gt;<br/>        &lt;DrawingGroup.Transform&gt;<br/>          &lt;MatrixTransform Matrix=&quot;-1,-8.742278E-08,8.742278E-08,-1,23.999998,24.000002&quot; &#x2F;&gt;<br/>        &lt;&#x2F;DrawingGroup.Transform&gt;<br/>        &lt;DrawingGroup Opacity=&quot;0&quot;&gt;<br/>          &lt;GeometryDrawing Brush=&quot;{DynamicResource Brush0}&quot; Geometry=&quot;F1 M0 0L24 0L24 24L0 24L0 0Z&quot; &#x2F;&gt;<br/>        &lt;&#x2F;DrawingGroup&gt;<br/>      &lt;&#x2F;DrawingGroup&gt;<br/>      &lt;GeometryDrawing Brush=&quot;{DynamicResource Brush0}&quot; Geometry=&quot;F1 M13.41 12L17.71 7.71Q17.7799 7.64007 17.8349 7.55784Q17.8898 7.47562 17.9277 7.38425Q17.9655 7.29288 17.9848 7.19589Q18.0041 7.09889 18.0041 7Q18.0041 6.9011 17.9848 6.80411Q17.9655 6.70712 17.9277 6.61575Q17.8898 6.52438 17.8349 6.44216Q17.7799 6.35993 17.71 6.29Q17.6401 6.22007 17.5578 6.16513Q17.4756 6.11019 17.3842 6.07234Q17.2929 6.03449 17.1959 6.0152Q17.0989 5.99591 17 5.99591Q16.9011 5.99591 16.8041 6.0152Q16.7071 6.03449 16.6157 6.07234Q16.5244 6.11018 16.4422 6.16513Q16.3599 6.22007 16.29 6.29L12 10.59L7.71 6.29Q7.64007 6.22007 7.55784 6.16513Q7.47562 6.11019 7.38425 6.07234Q7.29288 6.03449 7.19589 6.0152Q7.09889 5.99591 7 5.99591Q6.90111 5.99591 6.80411 6.0152Q6.70712 6.03449 6.61575 6.07234Q6.52438 6.11019 6.44216 6.16513Q6.35993 6.22007 6.29 6.29Q6.22007 6.35993 6.16513 6.44216Q6.11019 6.52438 6.07234 6.61575Q6.03449 6.70712 6.0152 6.80411Q5.99591 6.90111 5.99591 7Q5.99591 7.09889 6.0152 7.19589Q6.03449 7.29288 6.07234 7.38425Q6.11018 7.47562 6.16513 7.55784Q6.22007 7.64007 6.29 7.71L10.59 12L6.29 16.29Q6.2197 16.3597 6.16444 16.4419Q6.10918 16.524 6.07111 16.6154Q6.03303 16.7068 6.01362 16.8039Q5.9942 16.901 5.9942 17Q5.9942 17.099 6.01362 17.1961Q6.03303 17.2932 6.07111 17.3846Q6.10918 17.476 6.16444 17.5581Q6.2197 17.6403 6.29 17.71Q6.35972 17.7803 6.44187 17.8356Q6.52403 17.8908 6.61542 17.9289Q6.70682 17.967 6.8039 17.9864Q6.90099 18.0058 7 18.0058Q7.09901 18.0058 7.19609 17.9864Q7.29318 17.967 7.38458 17.9289Q7.47597 17.8908 7.55812 17.8356Q7.64028 17.7803 7.71 17.71L12 13.41L16.29 17.71Q16.3597 17.7803 16.4419 17.8356Q16.524 17.8908 16.6154 17.9289Q16.7068 17.967 16.8039 17.9864Q16.901 18.0058 17 18.0058Q17.099 18.0058 17.1961 17.9864Q17.2932 17.967 17.3846 17.9289Q17.476 17.8908 17.5581 17.8356Q17.6403 17.7803 17.71 17.71Q17.7803 17.6403 17.8356 17.5581Q17.8908 17.476 17.9289 17.3846Q17.967 17.2932 17.9864 17.1961Q18.0058 17.099 18.0058 17Q18.0058 16.901 17.9864 16.8039Q17.967 16.7068 17.9289 16.6154Q17.8908 16.524 17.8356 16.4419Q17.7803 16.3597 17.71 16.29L13.41 12Z&quot; &#x2F;&gt;<br/>    &lt;&#x2F;DrawingGroup&gt;<br/>  &lt;&#x2F;DrawingImage&gt;<br/>&lt;&#x2F;Image&gt;</p>";
	let req = {
		envName: WindowsEnv
	};

	initMain_ext(toBase64FromJsonObj(req));

	if (isPlainHtmlConverter()) {
		let cnvTest = {
			data: sample_global,
			isBase64: false,
			isHtmlClipboardFormat: false,
			dataFormatType: 'html'
		};

		convertPlainHtml_ext(toBase64FromJsonObj(cnvTest));
	} else {
		let load_req = {
			contentHandle: '<TEST-CONTENT-HANDLE>',
			contentType: 'Text',
			isPasteRequest: false,
			itemData: sample_big,
			//searchText: 'instalment in the following sequence of articles:'
		};

		loadContent_ext(toBase64FromJsonObj(load_req, false));
		enableSubSelection();
		//disableReadOnly();

		//showFindReplaceToolbar();

		//getPasteButtonElement().focus({ focusVisible: true });
		//enableFancyTextSelection();
		//enableSubSelection();
		//enableReadOnly();
		//disableSubSelection();
	}
}

function initMain(envName) {
	EnvName = !envName ? WindowsEnv : envName;

	if (isPlainHtmlConverter()) {
		initPlainHtmlConverter();
		log('Main Initialized.(Converter)');
		return;
	}

	initClipboard();

	initWindow();

	initInput();

	initDrop();
	initDrag();

	initEditor();

	IsLoaded = true;
	if (isAppendNotifier()) {
		log('Main Initialized.(Appender)');
		enableSubSelection();
	} else {
		log('Main Initialized.(Content)');
	}	

	onInitComplete_ntf();
}
// #endregion Life Cycle

// #region Getters

// #endregion Getters

// #region Setters

// #endregion Setters

// #region State



function isElementDisabled(elm, ignoreHidden = false) {
	if (!elm) {
		debugger;
		return true;
	}
	if (!ignoreHidden && elm.classList.contains('hidden')) {
		return true;
	}
	return elm.classList.contains('disabled');
}

function isElementHidden(elm) {
	if (!elm) {
		return true;
	}
	if (elm.classList.contains('hidden')) {
		return true;
	}
	return elm.style.display != 'none';
}

function isMouseOrKeyboardButtonClick(e, suppressWhenDisabled = true) {
	if (suppressWhenDisabled && isElementDisabled(e.currentTarget)) {
		log('suppressing button key or click, elm disabled');
		return false;
	}

	if (e.key !== undefined && isKeyboardButtonClick(e)) {
		return true;
	}
	if (e.buttons !== undefined && e.buttons == 1) {
		return true;
	}
	return false;
}
// #endregion State

// #region Actions


function updateAllSelectionDependantElements() {
	updateFontSizePickerToSelection();
	updateFontFamilyPickerToSelection();

	updateTemplatesAfterSelectionChange();

	updateFindReplaceRangeRects();
	updateCreateTableToolbarButtonIsEnabled();
	updateCreateTemplateToolbarButtonToSelection();
	updateFontColorToolbarItemsToSelection();
}

function updateAllSizeAndPositions() {
	updateContentSizeAndPosition();
	updateTemplateToolbarSizesAndPositions();
	updateEditorSizesAndPositions();
	updateFindReplaceToolbarSizesAndPositions();

	if (EnvName == "android") {
		//var viewportBottom = window.scrollY + window.innerHeight;
		//let tbh = $(".ql-toolbar").outerHeight();
		//if (y <= 0) {
		//    //keyboard is not visible
		//    $(".ql-toolbar").css("top", y);
		//    $("#editor").css("top", y + tbh);
		//} else {
		//    $(".ql-toolbar").css("top", y - tbh);
		//    $("#editor").css("top", 0);
		//}
		//$("#editor").css("bottom", viewportBottom - tbh);
	}
}

function updateAllElements() {
	if (!IsLoaded) {
		return;
	}
	updateAllSizeAndPositions();
	updateAllSelectionDependantElements();
	drawOverlay();
}


function hideAllToolbars() {
	hideAllPopups();
	hideEditorToolbar();
	hideEditTemplateToolbar();
	hidePasteToolbar();
}

function hideAllPopups() {
	hidePasteTemplateSelectorOptions();
	hideColorPaletteMenu();
	hideCreateTemplateToolbarContextMenu();
	hideCreateTableContextMenu();
	hidePasteButtonExpander();
	hideEditorAlignMenu();
}
// #endregion Actions

// #region Event Handlers

// #endregion Event Handlers